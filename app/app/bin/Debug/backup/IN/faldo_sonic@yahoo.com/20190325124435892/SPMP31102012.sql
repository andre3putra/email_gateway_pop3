/*
SQLyog Ultimate v8.32 
MySQL - 5.0.56sp1-enterprise-gpl-nt : Database - db_pekanbaru
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`db_pekanbaru` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `db_pekanbaru`;

/*Table structure for table `f002` */

DROP TABLE IF EXISTS `f002`;

CREATE TABLE `f002` (
  `Code` varchar(50) NOT NULL,
  `Name` varchar(100) NOT NULL,
  `ActiveStatus` tinyint(1) NOT NULL default '1',
  `CreatedBy` varchar(50) NOT NULL,
  `CreatedDate` datetime NOT NULL default '1900-01-01 00:00:00',
  `UpdatedBy` varchar(50) NOT NULL,
  `UpdatedDate` datetime NOT NULL default '1900-01-01 00:00:00',
  PRIMARY KEY  (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `f002` */

insert  into `f002`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MA001','PURCHASING - PURCHASE ORDER (IMPORT)',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MA002','PURCHASING - PURCHASE ORDER CLOSING (IMPORT)',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MA003','PURCHASE RETURN BY GRN',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MA004','PURCHASE RETURN NON GRN',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MA005','PURCHASE - PURCHASE HISTORY',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MA006','PURCHASING - PURCHASE ORDER (LOCAL)',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MA007','PURCHASING - PURCHASE ORDER CLOSING (LOCAL)',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MA011','PURCHASING - PP POSTING Div.PO',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MA012','PURCHASING - PP COMPARISON PRICE',1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MAH011','PURCAHSE - SUPPLIER ITEM',1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MAH015','PURCHASE - APPROVE PO(MANAGER)',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MAH016','PURCHASE - APPROVE PO(GM)',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB003','SALES - SALES ORDER NON QUOTATION',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB004','SALES - SALES ORDER CLOSING',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB005','SALES - DELIVERY ORDER BY SO',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB006','SALES - DELIVERY ORDER NON SO',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB007','INVOICING BY DO',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB008','INVOICING NON DO',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB009','SALES RETURN BY INVOICE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB010','SALES RETURN NON INVOICE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB011','SALES - SALES HISTORY',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB012','SALES - TAX INVOICE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB013','SALES - SALES PROJECT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MB015','CHANGE INVOICE AR STATUS',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MB016','SALES - POSTING INVOICE SEND',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MC003','FINANCE - CASH RECEIVING',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MC004','FINANCE - BANK RECEIVING',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MC005','FINANCE - CASH PAYMENT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MC006','FINANCE - BANK PAYMENT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MC007','FINANCE - GENERAL JOURNAL',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MC008','FINANCE - CUSTOMER DOWN PAYMENT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MC009','FINANCE - SUPPLIER DOWN PAYMENT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MC010','FINANCE - RECEIVED GIRO CLEARANCE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MC011','FINANCE - PAYMENT GIRO CLEARANCE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MC013','FINANCE - PETTY CASH',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MC015','FINANCE - POSTING RECEIVING INVOICE AR',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MD001','INVENTORY - GOODS RECEIVED NOTES BY POD',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD002','INVENTORY - GOODS RECEIVED NOTES NON POD',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD003','INVENTORY - INVENTORY IN',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD004','INVENTORY - INVENTORY OUT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD005','INVENTORY - WAREHOUSE MUTATION',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD006','INVENTORY - ITEM ASSEMBLY',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD007','INVENTORY - STOCK OPNAME',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD008','INVENTORY - STOCK CLOSING',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD009','INVENTORY - ITEM DISASEMBLY',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD011','INVENTORY - REQUEST PO (PP)',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD012','INVENTORY - PP POSTING LOGISTIK',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MD013','INVENTORY - REQUEST ITEM (Pb)',1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD014','INVENTORY - PB POSTING STATUS STOCK',1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MD015','INVENTORY - PB POSTING DIV LOGISTIK',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MD016','INVENTORY - LOG REQUEST PB',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MD017','INVENTORY - INVENTORY IN (SUB)',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MD018','INVENTORY - INVENTORY OUT (SUB)',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('ME001','JOURNAL INPUT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ME002','JOURNAL POSTING',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ME003','ACCOUNTING - UNBALANCE JOURNAL',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ME006','ACCOUNTING - ACCOUNT REPLACEMENT',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('ME007','ACCOUNTING - JOURNAL QUERY',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MHA001','PURCHASE - PO RECAPITULATION-HEADER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA001A','PURCHASE - Report POD RECAPITULATION LOCAL',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MHA002','PURCHASE - PO RECAPITULATION-DETAIL',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA003','PURCHASE - PO REALIZATION-HEADER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA003A','PURCHASE - REPORT POD REALIZATION LOCAL',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MHA004','PURCHASE - PO REALIZATION-DETAIL',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA005','PURCHASE - GLOBAL PURCHASE-HEADER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA006','PURCHASE - GLOBAL PURCHASE-DETAIL',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA007','PURCHASE - PURCHASE PER SUPPLIER-HEADER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA008','PURCHASE - PURCHASE PER SUPPLIER-DETAIL',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA009','PURCHASE - PURCHASE PER ITEM',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA010','PURCHASE - GLOBAL PURCHASE RETURN-HEADER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA011','PURCHASE - GLOBAL PURCHASE RETURN-DETAIL',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA012','PURCHASE - PURCHASE RETURN PER SUPPLIER-HEADER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA013','PURCAHSE - PURCHASE RETURN PER SUPPLIER-DETAIL',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHA014','PURCHASE - PURCHASE RETURN PER ITEM',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB001','SALES - GLOBAL SALES-HEADER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB001A','SALES - REPORT Global Sales Per Item',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MHB002','SALES - GLOBAL SALES-DETAIL PER ITEM',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB003','SALES - SALES PER CUSTOMER-HEADER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB003A','SALES - REPORT Sales Per Customer Per Item',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MHB004','SALES - SALES PER CUSTOMER-DETAIL PER ITEM',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB005','SALES - SALES PER SALESMAN-HEADER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB006','SALES - SALES PER SALESMAN-DETAIL',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB007','SALES - SALES PER ITEM',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB008','SALES - GLOBAL SALES RETURN',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB010','SALES - SALES RETURN PER CUSTOMER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB011','SALES - SALES RETURN PER CUSTOMER PER ITEM',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB012','SALES - SALES RETURN PER SALESMAN',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB013','SALES - SALES RETURN PER SALESMAN PER ITEM',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB014','SALES - SALES RETURN PER ITEM',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB015','SALES - SALES RECAPITULATION PER CUSTOMER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB017','SALES - SALES RECAPITULATION PER SALESMAN',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB019','SALES - SALES RECAPITULATION PER ITEM',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB020','SALES - ANNUAL SALES PER CUSTOMER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB021','SALES - ANNUAL SALES PER SALESMAN',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHB022','SALES - ANNUAL SALES PER ITEM',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC004','FINANCE - A/R AGING PER CUSTOMER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC005','FINANCE - A/R AGING PER CUSTOMER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC013','FINANCE - A/R AGING PER SUPPLIER',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC018','FINANCE - GLOBAL CASH RECEIVING',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC019','FINANCE - CASH RECEIVING-PER CASH TYPE',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC020','FINANCE - CASH RECEIVING-PER BUDGET TYPE',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC021','FINANCE - GLOBAL BANK RECEIVING',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC022','FINANCE - BANK RECEIVING- PER BANK ACCOUNT',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC023','FINANCE - BANK RECEIVING-PER BUDGET TYPE',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC024','FINANCE - GLOBAL CASH PAYMENT',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC025','FINANCE - CASH PAYMENT-PER CASH TYPE',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC026','FINANCE - CASH PAYMENT-PER BUDGET TYPE',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC027','FINANCE - GLOBAL BANK PAYMENT',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC028','FINANCE - BANK PAYMENT-PER BANK ACCOUNT',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC029','FINANCE - BANK PAYMENT-PER BUDGET TYPE',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC030','FINANCE - BBM GIRO',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHC032','FINANCE - BBK GIRO',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHD001','INVENTORY - Report Current Detail Stock per Warehouse',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MHD002','INVENTORY - Report Current Stock Quantity Per Warehouse',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MHD003','INVENTORY - Report Detail Stock Per Period Per Warehouse',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MHD004','INVENTORY - Report Stock Quantity Per Period Per Warehouse',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MHE004','ACCOUNTING - LEDGER',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHE007','ACCOUNTING - TRIAL BALANCE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHE008','ACCOUNTING - TRIAL BALANCE BY DIVISION',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHE009','ACCOUNTING - PROFIT AND LOSS',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHE010','ACCOUNTING - PROFIT AND LOSS BY DIVISION',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHE011','ACCOUNTING - BALANCE SHEET',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MHE012','ACCOUNTING - BALANCE SHEET PER DIVISION',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI001','MASTER BRANCH',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI002','MASTER GROUP MODUL',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI003','MASTER JOURNAL VOUCHER',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI004','MASTER CURRENCY',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI005','MASTER EXCHANGE RATES',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI006','MASTER UNIT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI007','MASTER COUNTRY',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI008','MASTER CITY',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI009','MASTER BUDGET TYPE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI010','MASTER COMPANY TYPE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI011','MASTER ITEM',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI012','MASTER HOLDING COMPANY',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI013','MASTER ITEM TYPE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI014','MASTER REASON',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI015','MASTER ARSTATUS',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI016','MASTER DEPARTMENT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI017','MASTER PAYMENT TERM',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI021','MASTER CLIENT TYPE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MI022','MASTER BLOCK TYPE',1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI025','MASTER SERVICE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI026','MASTER MERK',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI037','MASTER PAYMENT TYPE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI038','MASTER - EXPEDITION',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI039','MASTER AREA CODE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MI040','MASTER - PRODUCT TYPE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MI042','MASTER FILES - ELECTRIC TARIF',1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI043','MASTER FILES - WATER TARIF',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MI044','MASTER FILES - BLOCK/UNIT',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MI047','PAYMENT SCHEDULE',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MI101','MASTER CHART OF ACCOUNT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI102','MASTER USER',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI103','MASTER BANK ACCOUNT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI104','MASTER CASH TYPE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI105','MASTER OPENING BALANCE ACCOUNT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI106','MASTER CUSTOMER',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI107','MASTER DESTINATION',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI108','MASTER SALESMAN',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI109','MASTER SUPLIER',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI110','MASTER WAREHOUSE',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI111','MASTER LOCATION',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI113','MASTER DRIVER',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI114','MASTER TECHNICIAN',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI115','GENERATE COA',1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI116','CONFIGURATION - SUB AREA CODE',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MI117','MASTER - DEVISI',1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ML001','SALES BOOKING',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('ML002','SALES CANCEL',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('ML003','MARKETING',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('ML004','COMMISION',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MM101','ELECTRIC METER',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MM102','WATER METER',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MO100','OWNERSHIP AND TENANCY ENTRY',1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('MO101','BILLING GENERATE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MO102','BILLING MANUAL',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MO103','INVOICE SYSTEM - AUTO GENERATE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MO105','INVOICE SYSTEM - ADDITIIONAL MANUAL',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MO106','GENERATE INVOICE RENTAL AND DEPOSITO',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MS001','EMPOLOYEE',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MS002','CUSTOMER SERVICE',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MS003','SPB Work Order',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MU001','Utility - IMPORT DATA INVOICE',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('MU002','USER SETUP',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('MU003','COMPANY SETUP',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('SH04E','INVENTORY - Report Stock Card',1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00');

/*Table structure for table `f004` */

DROP TABLE IF EXISTS `f004`;

CREATE TABLE `f004` (
  `GroupCode` varchar(50) NOT NULL,
  `ModuleCode` varchar(50) NOT NULL,
  `AssignAuthority` tinyint(1) NOT NULL default '0',
  `SaveAuthority` tinyint(1) NOT NULL default '0',
  `PrintAuthority` tinyint(1) NOT NULL default '0',
  `UpdateAuthority` tinyint(1) NOT NULL default '0',
  `DeleteAuthority` tinyint(1) NOT NULL default '0',
  `ActiveStatus` tinyint(1) default '1',
  `CreatedBy` varchar(50) NOT NULL,
  `CreatedDate` datetime NOT NULL default '1900-01-01 00:00:00',
  `UpdatedBy` varchar(50) NOT NULL,
  `UpdatedDate` datetime NOT NULL default '1900-01-01 00:00:00'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `f004` */

insert  into `f004`(`GroupCode`,`ModuleCode`,`AssignAuthority`,`SaveAuthority`,`PrintAuthority`,`UpdateAuthority`,`DeleteAuthority`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM','MA001',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MA002',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MA003',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MA004',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MA005',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MA006',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MA007',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MB003',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MB004',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MB005',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MB006',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MB007',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MB008',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MB009',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MB010',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MB011',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MB012',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MB013',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MC003',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MC004',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MC005',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MC006',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MC007',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MC008',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MC009',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MC010',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MC011',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MD001',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MD002',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MD003',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MD004',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MD005',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MD006',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MD007',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MD008',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MD009',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','ME001',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','ME002',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','ME003',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','ME006',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','ME007',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA001',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA001A',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA002',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA003',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA003A',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA004',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA005',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA006',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA007',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA008',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA009',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA010',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA011',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA012',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA013',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHA014',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB001',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB001A',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB002',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB003',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB003A',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB004',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB005',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB006',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB007',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB008',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB010',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB011',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB012',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB013',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB014',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB015',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB017',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB019',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB020',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB021',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHB022',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC004',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC005',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC013',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC018',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC019',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC020',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC021',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC022',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC023',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC024',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC025',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC026',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC027',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC028',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC029',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC030',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHC032',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHD001',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHD002',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHD003',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHD004',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHE004',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHE007',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHE008',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHE009',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHE010',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHE011',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MHE012',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI001',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI002',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI003',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI004',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI005',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI006',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI007',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI008',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI009',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI010',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI011',1,1,1,1,1,1,'ADM','2009-04-28 14:17:26','','1900-01-01 00:00:00'),('ADM','MI012',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI013',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI014',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI015',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI016',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI017',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI025',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI026',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI037',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI038',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI101',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI102',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI103',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI104',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI105',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI106',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI107',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI108',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI109',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI110',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI111',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI113',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MI114',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MU001',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','SH04E',1,1,1,1,1,1,'ADM','2009-04-28 14:17:27','','1900-01-01 00:00:00'),('ADM','MU002',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MI039',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MI115',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MB015',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MC013',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MD011',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('ADM','MD012',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('ADM','MA011',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('ADM','MA012',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MD013',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MD014',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MD015',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('ADM','MD016',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('ADM','MD017',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MD018',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MB016',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('ADM','MC015',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MI040',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('FIN','MA001',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MA002',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MA003',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MA004',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MA005',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MA006',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MA007',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MA011',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MA012',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB003',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB004',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB005',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB006',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB007',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB008',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB009',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB010',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB011',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB012',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB013',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB015',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MB016',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MC003',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MC004',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MC005',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MC006',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MC007',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MC008',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MC009',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MC010',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MC011',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MC013',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MC015',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD001',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD002',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD003',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD004',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD005',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD006',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD007',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD008',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD009',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD011',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD012',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD013',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD014',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD015',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD016',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD017',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MD018',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','ME001',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','ME002',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','ME003',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','ME006',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','ME007',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA001',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA001A',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA002',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA003',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA003A',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA004',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA005',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA006',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA007',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA008',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA009',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA010',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA011',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA012',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA013',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHA014',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB001',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB001A',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB002',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB003',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB003A',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB004',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB005',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB006',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB007',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB008',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB010',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB011',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB012',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB013',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB014',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB015',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB017',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB019',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB020',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB021',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHB022',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC004',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC005',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC013',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC018',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC019',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC020',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC021',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC022',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC023',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC024',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC025',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC026',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC027',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC028',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC029',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC030',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHC032',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHD001',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHD002',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHD003',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHD004',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHE004',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHE007',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHE008',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHE009',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHE010',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHE011',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MHE012',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI001',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI002',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI003',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI004',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI005',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI006',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI007',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI008',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI009',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI010',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI011',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI012',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI013',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI014',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI015',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI016',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI017',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI025',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI026',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI037',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI038',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI039',1,1,0,0,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI040',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI101',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI102',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI103',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI104',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI105',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI106',1,1,1,1,1,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI107',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI108',1,1,0,1,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI109',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI110',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI111',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI113',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI114',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MI115',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MU001',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','MU002',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('FIN','SH04E',0,0,0,0,0,1,'ADM','2011-09-21 15:42:32','','1900-01-01 00:00:00'),('G2','MA001',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MA002',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MA003',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MA004',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MA005',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MA006',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MA007',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MA011',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MA012',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB003',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB004',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB005',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB006',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB007',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB008',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB009',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB010',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB011',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB012',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB013',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB015',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MB016',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MC003',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MC004',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MC005',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MC006',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MC007',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MC008',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MC009',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MC010',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MC011',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MC013',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MC015',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD001',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD002',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD003',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD004',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD005',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD006',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD007',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD008',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD009',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD011',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD012',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD013',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD014',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD015',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD016',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD017',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MD018',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','ME001',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','ME002',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','ME003',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','ME006',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','ME007',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA001',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA001A',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA002',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA003',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA003A',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA004',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA005',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA006',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA007',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA008',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA009',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA010',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA011',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA012',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA013',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHA014',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB001',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB001A',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB002',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB003',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB003A',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB004',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB005',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB006',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB007',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB008',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB010',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB011',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB012',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB013',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB014',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB015',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB017',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB019',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB020',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB021',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHB022',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC004',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC005',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC013',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC018',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC019',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC020',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC021',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC022',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC023',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC024',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC025',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC026',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC027',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC028',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC029',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC030',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHC032',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHD001',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHD002',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHD003',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHD004',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHE004',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHE007',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHE008',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHE009',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHE010',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHE011',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MHE012',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI001',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI002',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI003',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI004',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI005',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI006',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI007',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI008',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI009',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI010',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI011',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI012',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI013',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI014',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI015',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI016',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI017',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI025',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI026',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI037',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI038',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI039',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI040',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI101',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI102',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI103',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI104',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI105',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI106',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI107',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI108',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI109',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI110',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI111',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI113',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI114',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MI115',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MU001',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','MU002',0,0,0,0,0,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('G2','SH04E',1,1,1,1,1,1,'ADM','2011-09-21 16:02:19','','1900-01-01 00:00:00'),('ADM','MI116',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ACC','MA001',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MA002',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MA003',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MA004',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MA005',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MA006',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MA007',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MA011',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MA012',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB003',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB004',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB005',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB006',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB007',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB008',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB009',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB010',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB011',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB012',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB013',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB015',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MB016',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MC003',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MC004',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MC005',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MC006',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MC007',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MC008',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MC009',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MC010',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MC011',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MC013',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MC015',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD001',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD002',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD003',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD004',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD005',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD006',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD007',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD008',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD009',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD011',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD012',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD013',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD014',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD015',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD016',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD017',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MD018',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','ME001',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','ME002',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','ME003',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','ME006',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','ME007',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA001',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA001A',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA002',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA003',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA003A',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA004',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA005',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA006',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA007',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA008',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA009',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA010',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA011',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA012',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA013',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHA014',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB001',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB001A',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB002',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB003',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB003A',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB004',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB005',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB006',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB007',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB008',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB010',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB011',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB012',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB013',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB014',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB015',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB017',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB019',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB020',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB021',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHB022',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC004',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC005',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC013',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC018',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC019',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC020',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC021',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC022',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC023',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC024',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC025',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC026',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC027',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC028',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC029',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC030',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHC032',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHD001',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHD002',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHD003',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHD004',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHE004',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHE007',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHE008',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHE009',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHE010',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHE011',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MHE012',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI001',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI002',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI003',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI004',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI005',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI006',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI007',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI008',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI009',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI010',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI011',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI012',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI013',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI014',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI015',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI016',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI017',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI025',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI026',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI037',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI038',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI039',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI040',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI101',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI102',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI103',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI104',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI105',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI106',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI107',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI108',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI109',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI110',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI111',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI113',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI114',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI115',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MI116',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MU001',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','MU002',1,1,1,1,1,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('ACC','SH04E',0,0,0,0,0,1,'ADM','2011-10-28 16:24:02','','1900-01-01 00:00:00'),('PO','MA001',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MA002',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MA003',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MA004',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MA005',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MA006',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MA007',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MA011',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MA012',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB003',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB004',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB005',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB006',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB007',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB008',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB009',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB010',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB011',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB012',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB013',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB015',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MB016',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MC003',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MC004',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MC005',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MC006',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MC007',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MC008',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MC009',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MC010',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MC011',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MC013',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MC015',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD001',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD002',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD003',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD004',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD005',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD006',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD007',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD008',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD009',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD011',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD012',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD013',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD014',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD015',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD016',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD017',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MD018',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','ME001',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','ME002',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','ME003',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','ME006',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','ME007',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA001',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA001A',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA002',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA003',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA003A',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA004',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA005',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA006',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA007',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA008',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA009',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA010',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA011',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA012',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA013',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHA014',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB001',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB001A',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB002',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB003',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB003A',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB004',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB005',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB006',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB007',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB008',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB010',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB011',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB012',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB013',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB014',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB015',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB017',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB019',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB020',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB021',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHB022',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC004',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC005',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC013',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC018',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC019',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC020',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC021',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC022',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC023',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC024',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC025',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC026',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC027',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC028',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC029',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC030',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHC032',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHD001',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHD002',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHD003',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHD004',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHE004',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHE007',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHE008',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHE009',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHE010',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHE011',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MHE012',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI001',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI002',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI003',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI004',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI005',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI006',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI007',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI008',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI009',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI010',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI011',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI012',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI013',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI014',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI015',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI016',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI017',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI025',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI026',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI037',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI038',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI039',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI040',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI101',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI102',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI103',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI104',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI105',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI106',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI107',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI108',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI109',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI110',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI111',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI113',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI114',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI115',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MI116',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MU001',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','MU002',1,1,1,1,1,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('PO','SH04E',0,0,0,0,0,1,'ADM','2011-11-12 11:17:14','','1900-01-01 00:00:00'),('MGRFIN','MA001',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MA002',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MA003',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MA004',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MA005',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MA006',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MA007',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MA011',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MA012',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB003',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB004',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB005',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB006',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB007',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB008',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB009',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB010',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB011',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB012',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB013',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB015',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MB016',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MC003',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MC004',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MC005',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MC006',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MC007',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MC008',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MC009',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MC010',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MC011',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MC013',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MC015',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD001',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD002',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD003',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD004',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD005',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD006',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD007',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD008',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD009',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD011',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD012',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD013',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD014',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD015',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD016',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD017',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MD018',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','ME001',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','ME002',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','ME003',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','ME006',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','ME007',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA001',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA001A',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA002',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA003',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA003A',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA004',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA005',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA006',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA007',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA008',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA009',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA010',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA011',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA012',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA013',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHA014',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB001',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB001A',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB002',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB003',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB003A',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB004',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB005',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB006',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB007',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB008',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB010',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB011',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB012',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB013',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB014',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB015',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB017',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB019',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB020',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB021',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHB022',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC004',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC005',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC013',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC018',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC019',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC020',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC021',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC022',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC023',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC024',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC025',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC026',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC027',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC028',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC029',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC030',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHC032',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHD001',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHD002',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHD003',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHD004',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHE004',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHE007',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHE008',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHE009',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHE010',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHE011',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MHE012',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI001',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI002',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI003',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI004',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI005',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI006',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI007',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI008',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI009',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI010',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI011',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI012',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI013',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI014',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI015',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI016',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI017',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI025',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI026',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI037',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI038',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI039',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI040',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI101',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI102',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI103',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI104',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI105',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI106',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI107',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI108',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI109',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI110',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI111',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI113',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI114',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI115',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MI116',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MU001',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','MU002',1,1,1,1,1,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('MGRFIN','SH04E',0,0,0,0,0,1,'ADM','2011-11-19 09:59:50','','1900-01-01 00:00:00'),('ADM','MI117',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MI042',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MI043',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MI021',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MI022',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MI044',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MM101',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MM102',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MO101',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('ADM','MO102',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('ADM','MO103',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('ADM','MO105',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('ADM','MO100',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MS001',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MS002',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('ADM','MS003',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','ML001',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('ADM','ML002',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('ADM','ML003',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('ADM','ML004',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MU003',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MI047',1,1,1,1,1,1,'adm','1900-01-01 00:00:00','adm','1900-01-01 00:00:00'),('ADM','MO106',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00'),('DEV_SALES','MA001',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MA002',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MA003',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MA004',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MA005',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MA006',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MA007',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MA011',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MA012',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB003',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB004',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB005',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB006',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB007',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB008',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB009',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB010',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB011',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB012',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB013',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB015',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MB016',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MC003',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MC004',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MC005',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MC006',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MC007',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MC008',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MC009',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MC010',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MC011',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MC013',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MC015',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD001',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD002',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD003',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD004',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD005',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD006',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD007',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD008',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD009',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD011',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD012',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD013',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD014',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD015',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD016',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD017',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MD018',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','ME001',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','ME002',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','ME003',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','ME006',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','ME007',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA001',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA001A',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA002',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA003',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA003A',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA004',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA005',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA006',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA007',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA008',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA009',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA010',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA011',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA012',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA013',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHA014',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB001',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB001A',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB002',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB003',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB003A',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB004',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB005',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB006',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB007',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB008',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB010',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB011',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB012',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB013',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB014',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB015',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB017',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB019',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB020',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB021',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHB022',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC004',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC005',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC013',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC018',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC019',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC020',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC021',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC022',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC023',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC024',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC025',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC026',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC027',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC028',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC029',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC030',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHC032',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHD001',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHD002',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHD003',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHD004',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHE004',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHE007',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHE008',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHE009',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHE010',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHE011',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MHE012',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI001',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI002',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI003',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI004',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI005',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI006',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI007',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI008',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI009',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI010',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI011',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI012',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI013',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI014',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI015',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI016',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI017',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI021',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI022',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI025',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI026',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI037',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI038',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI039',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI040',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI042',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI043',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI044',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI047',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI101',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI102',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI103',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI104',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI105',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI106',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI107',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI108',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI109',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI110',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI111',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI113',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI114',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI115',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI116',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MI117',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','ML001',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','ML002',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','ML003',1,1,1,1,1,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','ML004',1,1,1,1,1,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MM101',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MM102',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MO100',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MO101',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MO102',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MO103',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MO105',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MO106',1,1,1,1,1,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MS001',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MS002',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MS003',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MU001',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MU002',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','MU003',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_SALES','SH04E',0,0,0,0,0,1,'ADM','2012-07-05 23:43:40','','1900-01-01 00:00:00'),('DEV_GL','MA001',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MA002',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MA003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MA004',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MA005',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MA006',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MA007',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MA011',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MA012',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB004',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB005',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB006',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB007',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB008',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB009',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB010',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB011',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB012',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB013',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB015',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MB016',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MC003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MC004',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MC005',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MC006',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MC007',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MC008',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MC009',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MC010',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MC011',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MC013',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MC015',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD001',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD002',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD004',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD005',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD006',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD007',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD008',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD009',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD011',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD012',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD013',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD014',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD015',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD016',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD017',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MD018',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','ME001',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','ME002',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','ME003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','ME006',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','ME007',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA001',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA001A',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA002',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA003A',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA004',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA005',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA006',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA007',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA008',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA009',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA010',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA011',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA012',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA013',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHA014',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB001',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB001A',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB002',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB003A',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB004',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB005',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB006',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB007',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB008',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB010',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB011',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB012',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB013',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB014',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB015',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB017',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB019',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB020',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB021',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHB022',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC004',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC005',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC013',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC018',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC019',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC020',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC021',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC022',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC023',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC024',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC025',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC026',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC027',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC028',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC029',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC030',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHC032',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHD001',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHD002',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHD003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHD004',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHE004',1,1,1,1,1,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHE007',1,1,1,1,1,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHE008',1,1,1,1,1,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHE009',1,1,1,1,1,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHE010',1,1,1,1,1,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHE011',1,1,1,1,1,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MHE012',1,1,1,1,1,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI001',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI002',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI004',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI005',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI006',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI007',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI008',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI009',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI010',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI011',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI012',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI013',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI014',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI015',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI016',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI017',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI021',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI022',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI025',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI026',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI037',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI038',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI039',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI040',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI042',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI043',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI044',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI047',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI101',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI102',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI103',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI104',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI105',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI106',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI107',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI108',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI109',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI110',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI111',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI113',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI114',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI115',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI116',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MI117',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','ML001',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','ML002',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','ML003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','ML004',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MM101',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MM102',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MO100',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MO101',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MO102',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MO103',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MO105',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MO106',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MS001',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MS002',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MS003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MU001',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MU002',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','MU003',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_GL','SH04E',0,0,0,0,0,1,'ADM','2012-07-05 23:44:30','','1900-01-01 00:00:00'),('DEV_FINANCE','MA001',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MA002',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MA003',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MA004',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MA005',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MA006',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MA007',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MA011',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MA012',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB003',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB004',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB005',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB006',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB007',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB008',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB009',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB010',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB011',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB012',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB013',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB015',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MB016',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MC003',1,1,1,1,1,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MC004',1,1,1,1,1,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MC005',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MC006',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MC007',1,1,1,1,1,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MC008',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MC009',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MC010',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MC011',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MC013',1,1,1,1,1,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MC015',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD001',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD002',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD003',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD004',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD005',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD006',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD007',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD008',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD009',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD011',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD012',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD013',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD014',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD015',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD016',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD017',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MD018',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','ME001',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','ME002',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','ME003',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','ME006',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','ME007',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA001',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA001A',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA002',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA003',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA003A',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA004',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA005',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA006',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA007',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA008',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA009',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA010',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA011',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA012',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA013',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHA014',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB001',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB001A',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB002',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB003',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB003A',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB004',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB005',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB006',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB007',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB008',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB010',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB011',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB012',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB013',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB014',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB015',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB017',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB019',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB020',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB021',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHB022',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC004',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC005',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC013',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC018',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC019',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC020',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC021',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC022',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC023',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC024',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC025',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC026',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC027',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC028',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC029',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC030',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHC032',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHD001',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHD002',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHD003',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHD004',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHE004',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHE007',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHE008',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHE009',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHE010',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHE011',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MHE012',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI001',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI002',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI003',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI004',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI005',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI006',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI007',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI008',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI009',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI010',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI011',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI012',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI013',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI014',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI015',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI016',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI017',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI021',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI022',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI025',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI026',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI037',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI038',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI039',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI040',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI042',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI043',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI044',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI047',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI101',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI102',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI103',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI104',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI105',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI106',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI107',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI108',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI109',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI110',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI111',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI113',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI114',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI115',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI116',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MI117',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','ML001',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','ML002',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','ML003',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','ML004',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MM101',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MM102',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MO100',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MO101',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MO102',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MO103',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MO105',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MO106',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MS001',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MS002',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MS003',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MU001',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MU002',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','MU003',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('DEV_FINANCE','SH04E',0,0,0,0,0,1,'ADM','2012-07-05 23:45:05','','1900-01-01 00:00:00'),('ADM','MAH015',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MAH016',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00'),('ADM','MAH011',1,1,1,1,1,1,'ADM','1900-01-01 00:00:00','','1900-01-01 00:00:00');

/*Table structure for table `f951` */

DROP TABLE IF EXISTS `f951`;

CREATE TABLE `f951` (
  `BranchCode` varchar(50) NOT NULL,
  `TransactionNo` varchar(50) NOT NULL,
  `Type` enum('NEW','UPDATE','DELETE','PRINT') NOT NULL default 'NEW',
  `ModuleCode` varchar(50) NOT NULL,
  `TransactionBy` varchar(50) NOT NULL,
  `TransactionDate` datetime NOT NULL default '1900-10-10 00:00:00',
  KEY `FK_f951_ModuleCode` (`ModuleCode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `f951` */

insert  into `f951`(`BranchCode`,`TransactionNo`,`Type`,`ModuleCode`,`TransactionBy`,`TransactionDate`) values ('SIS','SJR12070001','NEW','MO103','ADM','2012-09-13 10:47:30'),('SIS','CPJ12090001','NEW','MC005','ADM','2012-09-13 16:52:32'),('SIS','BPJ12090001','NEW','MC006','ADM','2012-09-13 17:04:54'),('SIS','SJR12070002','NEW','MO103','ADM','2012-09-14 12:55:03'),('SIS','CRJ12090001','NEW','MC003','ADM','2012-09-14 13:53:22'),('SIS','BRJ12090001','NEW','MC004','ADM','2012-09-14 14:08:12'),('SIS','SJR12040001','NEW','MO103','ADM','2012-09-15 00:29:34'),('SIS','SJR12040002','NEW','MO103','ADM','2012-09-15 00:32:43'),('SIS','SJR12040003','NEW','MO103','ADM','2012-09-15 00:49:30'),('SIS','SJR12040004','NEW','MO103','ADM','2012-09-15 00:59:34'),('SIS','SJR12040005','NEW','MO103','ADM','2012-09-15 01:31:27'),('SIS','SJR12040006','NEW','MO103','ADM','2012-09-15 01:42:14'),('SIS','SJR12040007','NEW','MO103','ADM','2012-09-15 01:48:08'),('SIS','SJR12040008','NEW','MO103','ADM','2012-09-15 01:55:56'),('SIS','SJR12040009','NEW','MO103','ADM','2012-09-15 01:58:28'),('SIS','SJR12040010','NEW','MO103','ADM','2012-09-15 02:10:15'),('SIS','SJR12040011','NEW','MO103','ADM','2012-09-15 02:11:34'),('SIS','SJR12040012','NEW','MO103','ADM','2012-09-15 02:11:36'),('SIS','SJR12040013','NEW','MO103','ADM','2012-09-15 02:12:11'),('SIS','SJR12040014','NEW','MO103','ADM','2012-09-15 03:09:58'),('SIS','SJR12040015','NEW','MO103','ADM','2012-09-15 03:11:39'),('SIS','SJR12040016','NEW','MO103','ADM','2012-09-15 03:11:42'),('SIS','SJR12040017','NEW','MO103','ADM','2012-09-15 03:12:30'),('SIS','SJR12040018','NEW','MO103','ADM','2012-09-15 03:17:10'),('SIS','SJR12040019','NEW','MO103','ADM','2012-09-15 03:18:31'),('SIS','SJR12040020','NEW','MO103','ADM','2012-09-15 03:18:33'),('SIS','SJR12040021','NEW','MO103','ADM','2012-09-15 03:19:07'),('SIS','CPJ12090002','NEW','MC005','ADM','2012-09-15 04:27:27'),('SIS','BPJ12090002','NEW','MC006','ADM','2012-09-15 04:30:11'),('SIS','SJR12040022','NEW','MO103','ADM','2012-09-23 14:21:27'),('SIS','SJR12040023','NEW','MO103','ADM','2012-09-23 14:24:23'),('SIS','SJR12040024','NEW','MO103','ADM','2012-09-23 14:24:28'),('SIS','SJR12040025','NEW','MO103','ADM','2012-09-23 14:25:42'),('','INV/MP/IV/2012/00001598','UPDATE','MO103','ADM','2012-09-23 19:25:59'),('','INV/BSP/IV/2012/00000043','UPDATE','MO103','ADM','2012-09-24 08:37:00'),('SIS','CPJ12090003','NEW','MC005','ADM','2012-09-24 11:34:22'),('SIS','SJR12040026','NEW','MO103','ADM','2012-09-24 12:12:56'),('SIS','SJR12040027','NEW','MO103','ADM','2012-09-24 12:14:16'),('SIS','SJR12040028','NEW','MO103','ADM','2012-09-24 12:14:18'),('SIS','SJR12040029','NEW','MO103','ADM','2012-09-24 12:14:54'),('SIS','CRJ12040001','NEW','MC003','ADM','2012-09-25 21:43:44'),('SIS','CRJ12040002','NEW','MC003','ADM','2012-09-25 23:20:32'),('SIS','CRJ12040003','NEW','MC003','ADM','2012-09-25 23:42:04'),('SIS','CRJ12040004','NEW','MC003','ADM','2012-09-25 23:53:20'),('SIS','BRJ12040001','NEW','MC004','ADM','2012-09-27 14:04:33'),('SIS','BPJ12090003','NEW','MC006','ADM','2012-09-27 14:11:29'),('SIS','CRJ12040005','NEW','MC003','ADM','2012-09-30 14:22:40'),('SIS','CRJ12090002','NEW','MC003','ADM','2012-09-30 14:27:25'),('SIS','CRJ12090003','NEW','MC003','ADM','2012-09-30 14:36:00'),('SIS','CPJ12100001','NEW','MC005','ADM','2012-10-11 06:09:26'),('SIS','BPJ12100001','NEW','MC006','ADM','2012-10-11 06:12:47'),('SIS','CPJ12100002','NEW','MC005','ADM','2012-10-11 06:17:07'),('SIS','CPJ12100003','NEW','MC005','ADM','2012-10-11 06:23:58'),('SIS','BPJ12100002','NEW','MC006','ADM','2012-10-11 06:24:54'),('SIS','GJM12100001','NEW','MC007','ADM','2012-10-11 06:39:54'),('SIS','GJM12100001','NEW','MC007','ADM','2012-10-11 06:52:35'),('SIS','GJM12100001','NEW','MC007','ADM','2012-10-11 07:03:29'),('SIS','GJM12100001','NEW','MC007','ADM','2012-10-11 07:09:31'),('SIS','PJR12100001','NEW','MD020','ADM','2012-10-11 13:35:41'),('SIS','PJR12100002','NEW','MD020','ADM','2012-10-11 13:35:43'),('SIS','PJR12100003','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100004','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100005','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100006','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100007','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100008','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100009','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100010','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100011','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100012','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100013','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100014','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100015','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100016','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100017','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100018','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100019','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100020','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100021','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100022','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100023','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100024','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100025','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100026','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100027','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100028','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100029','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100030','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100031','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100032','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100033','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100034','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100035','NEW','MD020','ADM','2012-10-11 13:35:46'),('SIS','PJR12100036','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100037','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100038','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100039','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100040','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100041','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100042','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100043','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100044','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100045','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100046','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100047','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100048','NEW','MD020','ADM','2012-10-11 13:35:47'),('SIS','PJR12100001','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100002','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100003','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100004','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100005','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100006','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100007','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100008','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100009','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100010','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100011','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100012','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100013','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100014','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100015','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100016','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100017','NEW','MD020','ADM','2012-10-11 13:37:20'),('SIS','PJR12100018','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100019','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100020','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100021','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100022','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100023','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100024','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100025','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100026','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100027','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100028','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100029','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100030','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100031','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100032','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100033','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100034','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100035','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100036','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100037','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100038','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100039','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100040','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100041','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100042','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100043','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100044','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100045','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100046','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100047','NEW','MD020','ADM','2012-10-11 13:37:21'),('SIS','PJR12100048','NEW','MD020','ADM','2012-10-11 13:37:22'),('SIS','PJR12100049','NEW','MD020','ADM','2012-10-11 13:37:22'),('SIS','PJR12100001','NEW','MD020','ADM','2012-10-11 13:42:51'),('SIS','PJR12100001','NEW','MD020','ADM','2012-10-11 14:04:00'),('SIS','PJR12100002','NEW','MD020','ADM','2012-10-11 14:04:47'),('SIS','PJR12100003','NEW','MD020','ADM','2012-10-11 14:07:36'),('SIS','SJR12040001','NEW','MO103','ADM','2012-10-12 14:25:04'),('SIS','SJR12040002','NEW','MO103','ADM','2012-10-12 14:26:22'),('SIS','SJR12040003','NEW','MO103','ADM','2012-10-12 14:26:24'),('SIS','SJR12040004','NEW','MO103','ADM','2012-10-12 14:26:56'),('SIS','SJR12040005','NEW','MO103','ADM','2012-10-12 14:27:00'),('SIS','CRJ12100001','NEW','MC003','ADM','2012-10-12 23:46:02'),('SIS','BRJ12100001','NEW','MC004','ADM','2012-10-12 23:49:47'),('SIS','GJM12100001','NEW','MC007','ADM','2012-10-13 00:42:33'),('SIS','CRJ12100001','NEW','MC003','ADM','2012-10-13 08:14:45'),('SIS','GJM12100001','NEW','MC007','ADM','2012-10-14 01:16:37'),('SIS','SJR12040001','NEW','MO103','ADM','2012-10-14 19:21:42'),('SIS','SJR12040002','NEW','MO103','ADM','2012-10-14 19:22:59'),('SIS','SJR12040003','NEW','MO103','ADM','2012-10-14 19:23:04'),('SIS','SJR12040004','NEW','MO103','ADM','2012-10-14 19:23:07'),('SIS','SJR12040005','NEW','MO103','ADM','2012-10-14 19:23:40'),('SIS','SJR12040006','NEW','MO103','ADM','2012-10-14 19:23:44'),('SIS','BRJ12040001','NEW','MC004','ADM','2012-10-14 19:25:13'),('SIS','SJR12040001','NEW','MO103','ADM','2012-10-14 20:00:13'),('SIS','GJM12040001','NEW','MC007','ADM','2012-10-14 21:43:32'),('SIS','GJM12100001','NEW','MC007','ADM','2012-10-14 22:35:44'),('SIS','SJR12040001','NEW','MO103','ADM','2012-10-15 12:09:38'),('SIS','SJR12040002','NEW','MO103','ADM','2012-10-15 12:10:56'),('SIS','SJR12040003','NEW','MO103','ADM','2012-10-15 12:11:01'),('SIS','SJR12040004','NEW','MO103','ADM','2012-10-15 12:11:04'),('SIS','SJR12040005','NEW','MO103','ADM','2012-10-15 12:11:37'),('SIS','SJR12040006','NEW','MO103','ADM','2012-10-15 12:11:41'),('SIS','BRJ12040001','NEW','MC004','ADM','2012-10-15 12:13:19'),('SIS','SJR12100001','NEW','MO103','ADM','2012-10-18 13:35:24'),('SIS','SJR12100002','NEW','MO103','ADM','2012-10-18 13:35:24'),('SIS','SJR12100003','NEW','MO103','ADM','2012-10-18 13:35:24'),('SIS','SJR12100004','NEW','MO103','ADM','2012-10-18 13:35:24'),('SIS','SJR12040001','NEW','MO103','ADM','2012-10-18 14:56:04'),('SIS','SJR12040001','NEW','MO103','ADM','2012-10-18 15:13:32'),('SIS','SJR12040002','NEW','MO103','ADM','2012-10-18 15:16:12'),('SIS','SJR12040003','NEW','MO103','ADM','2012-10-18 15:16:23'),('SIS','SJR12040004','NEW','MO103','ADM','2012-10-18 15:16:28'),('SIS','SJR12040005','NEW','MO103','ADM','2012-10-18 15:17:31'),('SIS','SJR12040006','NEW','MO103','ADM','2012-10-18 15:17:37'),('SIS','CRJ12100001','NEW','MC003','ADM','2012-10-18 01:55:22'),('SIS','CRJ12040001','NEW','MC003','ADM','2012-10-18 03:26:27'),('SIS','GJM12040001','NEW','MC007','ADM','2012-10-18 22:51:41'),('SIS','GJM12100001','NEW','MC007','ADM','2012-10-18 22:52:34'),('SIS','CPJ12070001','NEW','MC005','ADM','2012-10-18 23:39:53'),('SIS','CRJ12040002','NEW','MC003','ADM','2012-10-19 03:26:57'),('SIS','GJM12100001','DELETE','ME001','ADM','2012-10-19 06:15:50'),('SIS','CRJ12100001','DELETE','ME001','ADM','2012-10-19 06:15:54'),('SIS','BRJ12100001','NEW','MC010','ADM','2012-10-19 07:32:34'),('SIS','BPJ12100001','NEW','MC011','ADM','2012-10-19 08:16:17'),('SIS','CRJ12040001','NEW','MC003','ADM','2012-10-23 04:39:04'),('SIS','CRJ12040002','NEW','MC003','ADM','2012-10-23 04:43:02'),('MP','GRN12100001','NEW','MD001','ADM','2012-10-25 15:42:22'),('MP','PJR12100001','NEW','MD001','ADM','2012-10-25 15:42:24'),('MP','PJR12100002','NEW','MD020','ADM','2012-10-25 15:57:58'),('MP','GJM12100001','NEW','MC007','ADM','2012-10-25 16:13:58'),('MP','GJM12100002','NEW','MC007','ADM','2012-10-25 16:18:00'),('MP','CRJ12100001','NEW','MC003','ADM','2012-10-25 16:21:34'),('MP','GJM12100003','NEW','MC007','ADM','2012-10-29 14:59:53'),('MP','GJM12100004','NEW','MC007','ADM','2012-10-29 15:53:00'),('MP','GJM12100005','NEW','MC007','ADM','2012-10-29 15:54:02'),('MP','GRN12100002','NEW','MD001','ADM','2012-10-29 23:09:08'),('MP','PJR12100003','NEW','MD001','ADM','2012-10-29 23:09:10'),('MP','PJR12100004','NEW','MD020','ADM','2012-10-29 23:09:42'),('MP','PJR12100005','NEW','MD020','ADM','2012-10-29 23:46:37'),('BSP','CRJ12100001','NEW','MC003','ADM','2012-10-30 14:09:42'),('BSP','GJM12100001','NEW','MC007','ADM','2012-10-30 15:08:30'),('BSP','GJM12100002','NEW','MC007','ADM','2012-10-30 15:10:34');

/* Function  structure for function  `fn_COA_HaveLevelUp` */

/*!50003 DROP FUNCTION IF EXISTS `fn_COA_HaveLevelUp` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_COA_HaveLevelUp`(Branchtrx_type VARCHAR(50), acc_acrv VARCHAR(50)) RETURNS tinyint(1)
BEGIN
		DECLARE res VARCHAR(50);
		DECLARE Lengthtrx_type int(2);
		DECLARE acc_acrvLevelUp VARCHAR(50);
		SET Lengthtrx_type = LENGTH(acc_acrv);
		IF Lengthtrx_type = 5 THEN
			RETURN TRUE;
		END IF;
		IF Lengthtrx_type > 9 THEN
			SET acc_acrvLevelUp = LEFT(acc_acrv, 9);
		ELSE
			SET acc_acrvLevelUp = LEFT(acc_acrv, 5);
		END IF;
		SELECT F101.trx_type INTO res FROM F101 WHERE F101.trx_type = acc_acrvLevelUp;
		IF res IS NULL THEN
			RETURN FALSE;
		ELSE
			RETURN TRUE;
		END IF;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_f051_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_f051_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_f051_generateCode`(
    prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(fdoc_no) INTO oldCode
		FROM f051
		WHERE fdoc_no LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_f051_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_f051_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_f051_generatetrx_type`(
    prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(fdoc_no) INTO oldtrx_type
		FROM f051
		WHERE fdoc_no LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F201_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F201_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F201_generateCode`(
    prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(PODNo) INTO oldCode
		FROM F201
		WHERE PODNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F201_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F201_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F201_generatetrx_type`(
    prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(PODNo) INTO oldtrx_type
		FROM F201
		WHERE PODNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F203_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F203_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F203_generateCode`(
    prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(PRTNo) INTO oldCode
		FROM F203
		WHERE PRTNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F203_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F203_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F203_generatetrx_type`(
    prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(PRTNo) INTO oldtrx_type
		FROM F203
		WHERE PRTNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F205_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F205_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F205_generateCode`(
    prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(PPNo) INTO oldCode
		FROM F205
		WHERE PPNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F205_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F205_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F205_generatetrx_type`(
    prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(PPNo) INTO oldtrx_type
		FROM F205
		WHERE PPNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F207_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F207_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F207_generateCode`(
    prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(PBNo) INTO oldCode
		FROM F207
		WHERE PBNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F207_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F207_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F207_generatetrx_type`(
    prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(PBNo) INTO oldtrx_type
		FROM F207
		WHERE PBNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F301_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F301_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F301_generateCode`(
prmBranchCode VARCHAR(50),
acronimCode VARCHAR(20),
transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
DECLARE oldCode VARCHAR(50);
DECLARE intCode INTEGER(6);
DECLARE newCode VARCHAR(50);
SELECT MAX(GRNNo) INTO oldCode
FROM F301
WHERE GRNNo LIKE CONCAT(acronimCode, "%");
IF oldCode IS NULL THEN
RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
END IF;
SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
SET intCode = intCode + 1;
SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
RETURN newCode;
END */$$
DELIMITER ;

/* Function  structure for function  `fn_F301_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F301_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F301_generatetrx_type`(
prmBranchtrx_type VARCHAR(50),
acronimtrx_type VARCHAR(20),
transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
DECLARE oldtrx_type VARCHAR(50);
DECLARE inttrx_type INTEGER(6);
DECLARE newtrx_type VARCHAR(50);
SELECT MAX(GRNNo) INTO oldtrx_type
FROM F301
WHERE GRNNo LIKE CONCAT(acronimtrx_type, "%");
IF oldtrx_type IS NULL THEN
RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
END IF;
SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
SET inttrx_type = inttrx_type + 1;
SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
RETURN newtrx_type;
END */$$
DELIMITER ;

/* Function  structure for function  `fn_F301_getGRNListPerPODNo` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F301_getGRNListPerPODNo` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` FUNCTION `fn_F301_getGRNListPerPODNo`(
	
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE listGRNNo VARCHAR(50);
		SELECT F301.GRNNo INTO listGRNNo
		FROM F301;
		Return listGRNNo;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F302_get_ItemQuantity` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F302_get_ItemQuantity` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F302_get_ItemQuantity`(
	prmBranchtrx_type VARCHAR(50),
    prmGRNNo VARCHAR(50),
	prmItemtrx_type VARCHAR(50)
) RETURNS decimal(10,0)
BEGIN
		DECLARE Qty DECIMAL;
		SELECT 
			Quantity INTO QTY
		FROM
			F302
		WHERE
			F302.Branchtrx_type = prmBranchtrx_type AND F302.GRNNo = prmGRNNo AND Itemtrx_type = prmItemtrx_type;
		RETURN QTY;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F303_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F303_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F303_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(IINNo) INTO oldCode
		FROM F303
		WHERE IINNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F303_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F303_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F303_generatetrx_type`(
	prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(IINNo) INTO oldtrx_type
		FROM F303
		WHERE IINNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F304_get_ItemQuantity` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F304_get_ItemQuantity` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F304_get_ItemQuantity`(
	prmBranchtrx_type VARCHAR(50),
    prmIINNo VARCHAR(50),
	prmItemtrx_type VARCHAR(50)
) RETURNS decimal(10,0)
BEGIN
		DECLARE Qty DECIMAL;
		SELECT 
			Quantity INTO QTY
		FROM
			F304
		WHERE
			F304.Branchtrx_type = prmBranchtrx_type AND F304.IINNo = prmIINNo AND Itemtrx_type = prmItemtrx_type;
		RETURN QTY;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F305_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F305_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F305_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(IOTNo) INTO oldCode
		FROM F305
		WHERE IOTNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F305_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F305_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F305_generatetrx_type`(
	prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(IOTNo) INTO oldtrx_type
		FROM F305
		WHERE IOTNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F307_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F307_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F307_generateCode`(
prmBranchCode VARCHAR(50),
acronimCode VARCHAR(20),
transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
DECLARE oldCode VARCHAR(50);
DECLARE intCode INTEGER(6);
DECLARE newCode VARCHAR(50);
SELECT MAX(ASMNo) INTO oldCode
FROM F307
WHERE ASMNo LIKE CONCAT(acronimCode, "%");
IF oldCode IS NULL THEN
RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
END IF;
SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
SET intCode = intCode + 1;
SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
RETURN newCode;
END */$$
DELIMITER ;

/* Function  structure for function  `fn_F307_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F307_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F307_generatetrx_type`(
prmBranchtrx_type VARCHAR(50),
acronimtrx_type VARCHAR(20),
transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
DECLARE oldtrx_type VARCHAR(50);
DECLARE inttrx_type INTEGER(6);
DECLARE newtrx_type VARCHAR(50);
SELECT MAX(ASMNo) INTO oldtrx_type
FROM F307
WHERE ASMNo LIKE CONCAT(acronimtrx_type, "%");
IF oldtrx_type IS NULL THEN
RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
END IF;
SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
SET inttrx_type = inttrx_type + 1;
SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
RETURN newtrx_type;
END */$$
DELIMITER ;

/* Function  structure for function  `fn_F309_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F309_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F309_generateCode`(
prmBranchCode VARCHAR(50),
acronimCode VARCHAR(20),
transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
DECLARE oldCode VARCHAR(50);
DECLARE intCode INTEGER(6);
DECLARE newCode VARCHAR(50);
SELECT MAX(WHMNo) INTO oldCode
FROM F309
WHERE WHMNo LIKE CONCAT(acronimCode, "%");
IF oldCode IS NULL THEN
RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
END IF;
SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
SET intCode = intCode + 1;
SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
RETURN newCode;
END */$$
DELIMITER ;

/* Function  structure for function  `fn_F309_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F309_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F309_generatetrx_type`(
prmBranchtrx_type VARCHAR(50),
acronimtrx_type VARCHAR(20),
transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
DECLARE oldtrx_type VARCHAR(50);
DECLARE inttrx_type INTEGER(6);
DECLARE newtrx_type VARCHAR(50);
SELECT MAX(WHMNo) INTO oldtrx_type
FROM F309
WHERE WHMNo LIKE CONCAT(acronimtrx_type, "%");
IF oldtrx_type IS NULL THEN
RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
END IF;
SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
SET inttrx_type = inttrx_type + 1;
SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
RETURN newtrx_type;
END */$$
DELIMITER ;

/* Function  structure for function  `fn_F311_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F311_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F311_generateCode`(
prmBranchCode VARCHAR(50),
acronimCode VARCHAR(20),
transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
DECLARE oldCode VARCHAR(50);
DECLARE intCode INTEGER(6);
DECLARE newCode VARCHAR(50);
SELECT MAX(OPNNo) INTO oldCode
FROM F311
WHERE OPNNo LIKE CONCAT(acronimCode, "%");
IF oldCode IS NULL THEN
RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
END IF;
SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
SET intCode = intCode + 1;
SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
RETURN newCode;
END */$$
DELIMITER ;

/* Function  structure for function  `fn_F311_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F311_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F311_generatetrx_type`(
prmBranchtrx_type VARCHAR(50),
acronimtrx_type VARCHAR(20),
transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
DECLARE oldtrx_type VARCHAR(50);
DECLARE inttrx_type INTEGER(6);
DECLARE newtrx_type VARCHAR(50);
SELECT MAX(OPNNo) INTO oldtrx_type
FROM F311
WHERE OPNNo LIKE CONCAT(acronimtrx_type, "%");
IF oldtrx_type IS NULL THEN
RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
END IF;
SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
SET inttrx_type = inttrx_type + 1;
SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
RETURN newtrx_type;
END */$$
DELIMITER ;

/* Function  structure for function  `fn_F313_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F313_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F313_generateCode`(
prmBranchCode VARCHAR(50),
acronimCode VARCHAR(20),
transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
DECLARE oldCode VARCHAR(50);
DECLARE intCode INTEGER(6);
DECLARE newCode VARCHAR(50);
SELECT MAX(DSMNo) INTO oldCode
FROM F313
WHERE DSMNo LIKE CONCAT(acronimCode, "%");
IF oldCode IS NULL THEN
RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
END IF;
SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
SET intCode = intCode + 1;
SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
RETURN newCode;
END */$$
DELIMITER ;

/* Function  structure for function  `fn_F313_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F313_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F313_generatetrx_type`(
prmBranchtrx_type VARCHAR(50),
acronimtrx_type VARCHAR(20),
transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
DECLARE oldtrx_type VARCHAR(50);
DECLARE inttrx_type INTEGER(6);
DECLARE newtrx_type VARCHAR(50);
SELECT MAX(DSMNo) INTO oldtrx_type
FROM F313
WHERE DSMNo LIKE CONCAT(acronimtrx_type, "%");
IF oldtrx_type IS NULL THEN
RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
END IF;
SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
SET inttrx_type = inttrx_type + 1;
SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
RETURN newtrx_type;
END */$$
DELIMITER ;

/* Function  structure for function  `fn_f501f503_BP_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_f501f503_BP_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_f501f503_BP_generateCode`(
acronimCode
transactionCodeLength TINYINT(2),
		oInvNo VARCHAR(50)
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldCode VARCHAR(50);
        DECLARE intCode INTEGER(6);
        DECLARE newCode VARCHAR(50);
        
	-- IF prmTaxStatus = 1 THEN
	--   SELECT MAX(BPno) INTO oldCode FROM f501f503_fak WHERE 
		-- BPno LIKE CONCAT(acronimCode, "%");
	-- ELSE
	  SELECT MAX(BPno) INTO oldCode FROM f501f503_fak WHERE  BPno LIKE CONCAT(acronimCode, "%");
	-- END IF
	-- ;
                                
        IF oldCode IS NULL THEN
          RETURN CONCAT(LPAD("1", transactionCodeLength, "0"),acronimCode);
        END IF;
                                
	-- SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	SELECT SUBSTRING((oldCode),1,4) AS SIGNED  INTO intCode;
	
        SET intCode = intCode + 1;
        SET newCode = CONCAT(LPAD(intCode, transactionCodeLength, "0"),acronimCode );
        RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_f501f503_fak_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_f501f503_fak_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_f501f503_fak_generateCode`(
		transactionCodeLength TINYINT(2),
		oInvNo VARCHAR(50)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		
		SELECT MAX(FakNo) INTO oldCode
		FROM f501f503_fak 
		-- where SUBSTRING(INVNo,10,2) LIKE SUBSTRING(oInvNo,10,2)
		;
		IF oldCode IS NULL THEN
			RETURN LPAD("1", transactionCodeLength, "0");
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = LPAD(intCode, transactionCodeLength, "0");
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F501_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F501_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F501_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(BKMNo) INTO oldCode
		FROM F501
		WHERE BKMNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F501_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F501_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F501_generatetrx_type`(
	prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(BKMNo) INTO oldtrx_type
		FROM F501
		WHERE BKMNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F503_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F503_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F503_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(BBMNo) INTO oldCode
		FROM F503
		WHERE BBMNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F503_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F503_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F503_generatetrx_type`(
	prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(BBMNo) INTO oldtrx_type
		FROM F503
		WHERE BBMNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F505_ap_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F505_ap_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F505_ap_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(BKKNo) INTO oldCode
		FROM F505_ap
		WHERE BKKNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F505_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F505_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F505_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(BKKNo) INTO oldCode
		FROM F505
		WHERE BKKNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F505_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F505_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F505_generatetrx_type`(
	prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(BKKNo) INTO oldtrx_type
		FROM F505
		WHERE BKKNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F507_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F507_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F507_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(BBKNo) INTO oldCode
		FROM F507
		WHERE BBKNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F507_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F507_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F507_generatetrx_type`(
	prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(BBKNo) INTO oldtrx_type
		FROM F507
		WHERE BBKNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F515_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F515_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F515_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(CDPNo) INTO oldCode
		FROM F515
		WHERE CDPNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F515_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F515_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F515_generatetrx_type`(
	prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(CDPNo) INTO oldtrx_type
		FROM F515
		WHERE CDPNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F517_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F517_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F517_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(SDPNo) INTO oldCode
		FROM F517
		WHERE SDPNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F517_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F517_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F517_generatetrx_type`(
	prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(SDPNo) INTO oldtrx_type
		FROM F517
		WHERE SDPNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F519_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F519_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F519_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(GJMNo) INTO oldCode
		FROM F519
		WHERE GJMNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F603_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F603_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F603_generateCode`(
    prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2),
        prmTaxStatus Boolean
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		IF prmTaxStatus = 1 THEN
		  SELECT MAX(SODNo) INTO oldCode FROM F603 WHERE TaxStatus = 1 AND 
                    BranchCode = prmBranchCode AND SODNo LIKE CONCAT(acronimCode, "%");
		ELSE
		  SELECT MAX(SODNo) INTO oldCode FROM F603 WHERE TaxStatus = 0
		    AND SODNo LIKE CONCAT(acronimCode, "%");
		END IF;
                IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F603_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F603_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F603_generatetrx_type`(
    prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2),
        prmTaxStatus Boolean
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		IF prmTaxStatus = 1 THEN
		  SELECT MAX(SODNo) INTO oldtrx_type FROM F603 WHERE TaxStatus = 1 AND 
                    Branchtrx_type = prmBranchtrx_type AND SODNo LIKE CONCAT(acronimtrx_type, "%");
		ELSE
		  SELECT MAX(SODNo) INTO oldtrx_type FROM F603 WHERE TaxStatus = 0
		    AND SODNo LIKE CONCAT(acronimtrx_type, "%");
		END IF;
                IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F605_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F605_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F605_generateCode`(
prmBranchCode
acronimCode
transactionCodeLength TINYINT(2),
prmTaxStatus Boolean
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldCode VARCHAR(50);
        DECLARE intCode INTEGER(6);
        DECLARE newCode VARCHAR(50);
        
	IF prmTaxStatus = 1 THEN
	  SELECT MAX(DODNo) INTO oldCode FROM F605 WHERE TaxStatus = 1 AND BranchCode = prmBranchCode
		AND DODNo LIKE CONCAT(acronimCode, "%");
	ELSE
	  SELECT MAX(DODNo) INTO oldCode FROM F605 WHERE TaxStatus = 0 AND DODNo LIKE CONCAT(acronimCode, "%");
	END IF;
                                
        IF oldCode IS NULL THEN
          RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
        END IF;
                                
	SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
        SET intCode = intCode + 1;
        SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
        RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F605_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F605_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F605_generatetrx_type`(
prmBranchtrx_type
acronimtrx_type
transactiontrx_typeLength TINYINT(2),
prmTaxStatus Boolean
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldtrx_type VARCHAR(50);
        DECLARE inttrx_type INTEGER(6);
        DECLARE newtrx_type VARCHAR(50);
        
	IF prmTaxStatus = 1 THEN
	  SELECT MAX(DODNo) INTO oldtrx_type FROM F605 WHERE TaxStatus = 1 AND Branchtrx_type = prmBranchtrx_type
		AND DODNo LIKE CONCAT(acronimtrx_type, "%");
	ELSE
	  SELECT MAX(DODNo) INTO oldtrx_type FROM F605 WHERE TaxStatus = 0 AND DODNo LIKE CONCAT(acronimtrx_type, "%");
	END IF;
                                
        IF oldtrx_type IS NULL THEN
          RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
        END IF;
                                
	SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
        SET inttrx_type = inttrx_type + 1;
        SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
        RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F607b_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F607b_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F607b_generateCode`(
		transactionCodeLength TINYINT(2),
		oInvNo VARCHAR(50)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		
		SELECT MAX(FakNo) INTO oldCode
		FROM F607b 
		-- where SUBSTRING(INVNo,10,2) LIKE SUBSTRING(oInvNo,10,2)
		;
		IF oldCode IS NULL THEN
			RETURN LPAD("1", transactionCodeLength, "0");
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = LPAD(intCode, transactionCodeLength, "0");
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F607b_generateCodeBp` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F607b_generateCodeBp` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F607b_generateCodeBp`(
acronimCode
transactionCodeLength TINYINT(2),
oInvNo VARCHAR(50)
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldCode VARCHAR(50);
        DECLARE intCode INTEGER(6);
        DECLARE newCode VARCHAR(50);
        
	-- IF prmTaxStatus = 1 THEN
	--   SELECT MAX(BPno) INTO oldCode FROM f607 WHERE 
		-- BPno LIKE CONCAT(acronimCode, "%");
	-- ELSE
	  SELECT MAX(BPno) INTO oldCode FROM f607 WHERE  BPno LIKE CONCAT(acronimCode, "%");
	-- END IF
	-- ;
                                
        IF oldCode IS NULL THEN
          RETURN CONCAT(LPAD("1", transactionCodeLength, "0"),acronimCode);
        END IF;
                                
	-- SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	SELECT SUBSTRING((oldCode),1,4) AS SIGNED  INTO intCode;
	
        SET intCode = intCode + 1;
        SET newCode = CONCAT(LPAD(intCode, transactionCodeLength, "0"),acronimCode );
        RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F607b_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F607b_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F607b_generatetrx_type`(
		transactiontrx_typeLength TINYINT(2),
		oInvNo VARCHAR(50)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		
		SELECT MAX(FakNo) INTO oldtrx_type
		FROM F607b 
		-- where SUBSTRING(INVNo,10,2) LIKE SUBSTRING(oInvNo,10,2)
		;
		IF oldtrx_type IS NULL THEN
			RETURN LPAD("1", transactiontrx_typeLength, "0");
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = LPAD(inttrx_type, transactiontrx_typeLength, "0");
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F607Fak_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F607Fak_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F607Fak_generateCode`(
transactionCodeLength TINYINT(2)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldCode VARCHAR(50);
        DECLARE intCode INTEGER(6);
        DECLARE newCode VARCHAR(50);
        
	-- IF prmTaxStatus = 1 THEN
	 --  SELECT MAX(FakNo) INTO oldCode FROM F607 WHERE TaxStatus = 1;
		-- AND FakNo LIKE CONCAT("%",acronimCode);
	-- ELSE
	 --  SELECT MAX(FakNo) INTO oldCode FROM F607 WHERE TaxStatus = 0 AND FakNo LIKE CONCAT("%",acronimCode);
	-- END IF;
           
  SELECT MAX(qry1.FakNo) as FakNo from (
select (FakNo) as FakNo FROM F607 WHERE TaxStatus = 1
union
select (FakNoRef) as FakNo FROM F607 WHERE TaxStatus = 1 ) As qry1 INTO oldCode;
                    
        IF oldCode IS NULL THEN
          RETURN LPAD("1", transactionCodeLength, "0");
        END IF;
                                
	SELECT CAST(SUBSTRING(oldCode FROM transactionCodeLength) AS SIGNED) INTO intCode;
        SET intCode = intCode + 1;
        SET newCode = LPAD(intCode, transactionCodeLength, "0");
        RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F607Fak_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F607Fak_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F607Fak_generatetrx_type`(
transactiontrx_typeLength
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldtrx_type VARCHAR(50);
        DECLARE inttrx_type INTEGER(6);
        DECLARE newtrx_type VARCHAR(50);
        
	-- IF prmTaxStatus = 1 THEN
	 --  SELECT MAX(FakNo) INTO oldtrx_type FROM F607 WHERE TaxStatus = 1;
		-- AND FakNo LIKE CONCAT("%",acronimtrx_type);
	-- ELSE
	 --  SELECT MAX(FakNo) INTO oldtrx_type FROM F607 WHERE TaxStatus = 0 AND FakNo LIKE CONCAT("%",acronimtrx_type);
	-- END IF;
           
  SELECT MAX(qry1.FakNo) as FakNo from (
select (FakNo) as FakNo FROM F607 WHERE TaxStatus = 1
union
select (FakNoRef) as FakNo FROM F607 WHERE TaxStatus = 1 ) As qry1 INTO oldtrx_type;
                    
        IF oldtrx_type IS NULL THEN
          RETURN LPAD("1", transactiontrx_typeLength, "0");
        END IF;
                                
	SELECT CAST(SUBSTRING(oldtrx_type FROM transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
        SET inttrx_type = inttrx_type + 1;
        SET newtrx_type = LPAD(inttrx_type, transactiontrx_typeLength, "0");
        RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_f607_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_f607_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_f607_generateCode`(
prmBranchCode
acronimCode
transactionCodeLength TINYINT(2),
prmTaxStatus
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldCode VARCHAR(50);
        DECLARE intCode INTEGER(6);
        DECLARE newCode VARCHAR(50);
        
	IF prmTaxStatus = 1 THEN
	  SELECT MAX(INVNo) INTO oldCode FROM f607 WHERE 
		INVNo LIKE CONCAT(acronimCode, "%");
	ELSE
	  SELECT MAX(INVNo) INTO oldCode FROM f607 WHERE  INVNo LIKE CONCAT(acronimCode, "%");
	END IF;
                                
        IF oldCode IS NULL THEN
          RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
        END IF;
                                
	SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
        SET intCode = intCode + 1;
        SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
        RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F607_generateCode_From_F039` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F607_generateCode_From_F039` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F607_generateCode_From_F039`(
prmBranchCode VARCHAR(50),    
prmAreaCode
acronimCode
transactionCodeLength TINYINT(2), prmTaxStatus Boolean
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldCode VARCHAR(50);
        DECLARE intCode INTEGER(6);
        DECLARE newCode VARCHAR(50);
        
	-- IF prmTaxStatus = 1 THEN
	  SELECT MAX(CutOffInv) INTO oldCode FROM F039 WHERE  substring(CutOffInv,13,3) LIKE CONCAT("%",substring(acronimCode,5,3)) 
		and right(CutOffInv,2) LIKE CONCAT("%",right(acronimCode,2))
		and substring(CutOffInv,10,2) LIKE substring(acronimCode,2,2)
	-- ELSE
	
	  -- SELECT MAX(CutOffInv) INTO oldCode FROM F039 WHERE TaxStatus = 0 
	-- AND  substring(CutOffInv,13,3) LIKE CONCAT("%",substring(acronimCode,5,3)) 
	-- and substring(CutOffInv,10,2) LIKE substring(acronimCode,2,2);
	-- END IF
	;
                                
        IF oldCode IS NULL THEN
          RETURN CONCAT(LPAD("1", transactionCodeLength, "0"),'/',prmAreaCode ,acronimCode);
        END IF;
                                
	SELECT CAST(left(oldCode , transactionCodeLength) AS SIGNED) INTO intCode;
        SET intCode = intCode + 1;
        SET newCode = CONCAT(LPAD(intCode, transactionCodeLength, "0"),'/',prmAreaCode ,acronimCode);
        RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F607_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F607_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F607_generatetrx_type`(
prmBranchtrx_type VARCHAR(50),   
prmAreatrx_type
acronimtrx_type
transactiontrx_typeLength TINYINT(2),
prmTaxStatus Boolean
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldtrx_type VARCHAR(50);
        DECLARE inttrx_type INTEGER(6);
        DECLARE newtrx_type VARCHAR(50);
        
	IF prmTaxStatus = 1 THEN
	  SELECT MAX(INVNo) INTO oldtrx_type FROM F607 WHERE TaxStatus = 1 
	  -- AND Branchtrx_type = prmBranchtrx_type
		-- AND INVNo LIKE CONCAT(acronimtrx_type, "%")
		;
	ELSE
	  SELECT MAX(INVNo) INTO oldtrx_type FROM F607 WHERE TaxStatus = 0 
	  -- AND INVNo LIKE CONCAT(acronimtrx_type, "%")
	  ;
	END IF;
                                
        IF oldtrx_type IS NULL THEN
          RETURN CONCAT(LPAD("1", transactiontrx_typeLength, "0"),'/',prmAreatrx_type,acronimtrx_type);
        END IF;
                                
	-- SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	SELECT CAST(LEFT(oldtrx_type , transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	      SET inttrx_type = inttrx_type + 1;
        SET newtrx_type = CONCAT(LPAD(inttrx_type, transactiontrx_typeLength, "0"),'/',prmAreatrx_type ,acronimtrx_type);
        RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F607_generatetrx_type_From_F039` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F607_generatetrx_type_From_F039` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F607_generatetrx_type_From_F039`(
prmBranchtrx_type VARCHAR(50),    
prmAreatrx_type
acronimtrx_type VARCHAR(20),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
transactiontrx_typeLength TINYINT(2), prmTaxStatus Boolean
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldtrx_type VARCHAR(50);
        DECLARE inttrx_type INTEGER(6);
        DECLARE newtrx_type VARCHAR(50);
        
	-- IF prmTaxStatus = 1 THEN
	  SELECT MAX(CutOffInv) INTO oldtrx_type FROM F039 WHERE  substring(CutOffInv,13,3) LIKE CONCAT("%",substring(acronimtrx_type,5,3)) 
		and right(CutOffInv,2) LIKE CONCAT("%",right(acronimtrx_type,2))
		and substring(CutOffInv,10,2) LIKE substring(acronimtrx_type,2,2)
	-- ELSE
	
	  -- SELECT MAX(CutOffInv) INTO oldtrx_type FROM F039 WHERE TaxStatus = 0 
	-- AND  substring(CutOffInv,13,3) LIKE CONCAT("%",substring(acronimtrx_type,5,3)) 
	-- and substring(CutOffInv,10,2) LIKE substring(acronimtrx_type,2,2);
	-- END IF
	;
                                
        IF oldtrx_type IS NULL THEN
          RETURN CONCAT(LPAD("1", transactiontrx_typeLength, "0"),'/',prmAreatrx_type ,acronimtrx_type);
        END IF;
                                
	SELECT CAST(left(oldtrx_type , transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
        SET inttrx_type = inttrx_type + 1;
        SET newtrx_type = CONCAT(LPAD(inttrx_type, transactiontrx_typeLength, "0"),'/',prmAreatrx_type ,acronimtrx_type);
        RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_f611_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_f611_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_f611_generateCode`(
prmBranchCode
acronimCode
transactionCodeLength TINYINT(2),
prmTaxStatus Boolean
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldCode VARCHAR(50);
        DECLARE intCode INTEGER(6);
        DECLARE newCode VARCHAR(50);
        
	IF prmTaxStatus = 1 THEN
	  SELECT MAX(INVNo) INTO oldCode FROM f611 WHERE 
		INVNo LIKE CONCAT(acronimCode, "%");
	ELSE
	  SELECT MAX(INVNo) INTO oldCode FROM f611 WHERE  INVNo LIKE CONCAT(acronimCode, "%");
	END IF;
                                
        IF oldCode IS NULL THEN
          RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
        END IF;
                                
	SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
        SET intCode = intCode + 1;
        SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
        RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F613_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F613_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F613_generateCode`(
    prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(SRTNo) INTO oldCode
		FROM F613
		WHERE SRTNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F613_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F613_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F613_generatetrx_type`(
    prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(SRTNo) INTO oldtrx_type
		FROM F613
		WHERE SRTNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F701_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F701_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F701_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(IINNo) INTO oldCode
		FROM F701
		WHERE IINNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F701_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F701_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F701_generatetrx_type`(
	prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(IINNo) INTO oldtrx_type
		FROM F701
		WHERE IINNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F703_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F703_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F703_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldCode VARCHAR(50);
		DECLARE intCode INTEGER(6);
		DECLARE newCode VARCHAR(50);
		SELECT MAX(IOTNo) INTO oldCode
		FROM F703
		WHERE IOTNo LIKE CONCAT(acronimCode, "%");
		IF oldCode IS NULL THEN
			RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	
		SET intCode = intCode + 1;
		SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
		RETURN newCode;
    END */$$
DELIMITER ;

/* Function  structure for function  `fn_F703_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `fn_F703_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `fn_F703_generatetrx_type`(
	prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
		DECLARE oldtrx_type VARCHAR(50);
		DECLARE inttrx_type INTEGER(6);
		DECLARE newtrx_type VARCHAR(50);
		SELECT MAX(IOTNo) INTO oldtrx_type
		FROM F703
		WHERE IOTNo LIKE CONCAT(acronimtrx_type, "%");
		IF oldtrx_type IS NULL THEN
			RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
		END IF;
		SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	
		SET inttrx_type = inttrx_type + 1;
		SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
		RETURN newtrx_type;
    END */$$
DELIMITER ;

/* Function  structure for function  `int_to_date` */

/*!50003 DROP FUNCTION IF EXISTS `int_to_date` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `int_to_date`(winsdate INT) RETURNS date
    NO SQL
    DETERMINISTIC
BEGIN 
DECLARE yyyymmdd date ; 
SET yyyymmdd = CONCAT_WS('-',SUBSTR(CAST(winsdate AS CHAR),1,4), 
SUBSTR(CAST(winsdate AS CHAR),5,2),SUBSTR(CAST(winsdate AS CHAR),7,2)) ; 
RETURN yyyymmdd ; 
END */$$
DELIMITER ;

/* Function  structure for function  `usp_F401_generateCode` */

/*!50003 DROP FUNCTION IF EXISTS `usp_F401_generateCode` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `usp_F401_generateCode`(
	prmBranchCode VARCHAR(50), 
	acronimCode VARCHAR(20),
	transactionCodeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldCode VARCHAR(50);
	DECLARE intCode INTEGER(6);
	DECLARE newCode VARCHAR(50);
	SELECT MAX(VoucherNo) INTO oldCode 
	FROM F401 
	WHERE BranchCode = prmBranchCode AND VoucherNo LIKE CONCAT(acronimCode, "%");
	IF oldCode IS NULL THEN
	   RETURN CONCAT(acronimCode, LPAD("1", transactionCodeLength, "0"));
	END IF;
	
	SELECT CAST(SUBSTRING(oldCode FROM -transactionCodeLength) AS SIGNED) INTO intCode;
	SET intCode = intCode + 1;
	SET newCode = CONCAT(acronimCode, LPAD(intCode, transactionCodeLength, "0"));
	RETURN newCode;
	   
    END */$$
DELIMITER ;

/* Function  structure for function  `usp_F401_generatetrx_type` */

/*!50003 DROP FUNCTION IF EXISTS `usp_F401_generatetrx_type` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` FUNCTION `usp_F401_generatetrx_type`(
	prmBranchtrx_type VARCHAR(50), 
	acronimtrx_type VARCHAR(20),
	transactiontrx_typeLength TINYINT(2)
) RETURNS varchar(50) CHARSET latin1
BEGIN
	DECLARE oldtrx_type VARCHAR(50);
	DECLARE inttrx_type INTEGER(6);
	DECLARE newtrx_type VARCHAR(50);
	SELECT MAX(VoucherNo) INTO oldtrx_type 
	FROM F401 
	WHERE Branchtrx_type = prmBranchtrx_type AND VoucherNo LIKE CONCAT(acronimtrx_type, "%");
	IF oldtrx_type IS NULL THEN
	   RETURN CONCAT(acronimtrx_type, LPAD("1", transactiontrx_typeLength, "0"));
	END IF;
	
	SELECT CAST(SUBSTRING(oldtrx_type FROM -transactiontrx_typeLength) AS SIGNED) INTO inttrx_type;
	SET inttrx_type = inttrx_type + 1;
	SET newtrx_type = CONCAT(acronimtrx_type, LPAD(inttrx_type, transactiontrx_typeLength, "0"));
	RETURN newtrx_type;
	   
    END */$$
DELIMITER ;

/* Procedure structure for procedure `db_pekanbaru` */

/*!50003 DROP PROCEDURE IF EXISTS  `db_pekanbaru` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `db_pekanbaru`(
  -- IN prmBranchCode VARCHAR(50),
   IN prmBKMNo varchar(50)
)
BEGIN
	Select 
		F502.BranchCode,
		F502.BKMNo,
		F502.BudgetTypeCode,
		-- F011.Name as BudgetTypeName,
		F502.DocumentNo,
		F502.Description,
		F502.Amount,		
                (F502.Amount * F501.ExchangeRate)	as AmountLocal,
		F502.DPP_PPN_Status,
		F607.CurrencyCode	as CurrencyCode, 
		F607.ExchangeRate,          
		-- F607.Description	as Description,        
		F607.GrandTotal 			as GrandTotal, 
		(F607.GrandTotal * F607.ExchangeRate)	as GrandTotalAmountLocal,
		F607.PaidAmount 			as PaidAmount, 
		(F607.PaidAmount * F607.ExchangeRate) 	as PaidAmountLocal,
		(F607.GrandTotal - F607.PaidAmount) as Balance,
		(F607.GrandTotal - F607.PaidAmount)* F607.ExchangeRate as BalanceLocal		
	From 
		F502
		-- Inner Join F011 On F502.BudgetTypeCode = F011.Code
		INNER JOIN F607 on F502.DocumentNo = F607.INVNo	
		INNER Join F501 on F502.BKMNo = F501.BKMNo
		-- INNER JOIN F611 on F502.BranchCode   = F611.BranchCode and F502.DocumentNo = F611.SRTNo
		-- INNER JOIN F515 on F502.BranchCode   = F515.BranchCode and F502.DocumentNo = F515.CDPNo
	Where 	
		-- F502.BranchCode = prmBranchCode And 
		F502.BKMNo = prmBKMNo
		-- GROUP BY BKMNo
	
union all
Select 
		F502.BranchCode,
		F502.BKMNo,
		F502.BudgetTypeCode,
		-- F011.Name as BudgetTypeName,
		F502.DocumentNo,
		F502.Description,
		F502.Amount,		
                (F502.Amount * F501.ExchangeRate)	as AmountLocal,
		F502.DPP_PPN_Status,
		F618.CurrencyCode	as CurrencyCode, 
		F618.ExchangeRate,          
		-- F607.Description	as Description,        
		F618.GrandTotal 			as GrandTotal, 
		(F618.GrandTotal * F618.ExchangeRate)	as GrandTotalAmountLocal,
		F618.PaidAmount 			as PaidAmount, 
		(F618.PaidAmount * F618.ExchangeRate) 	as PaidAmountLocal,
		(F618.GrandTotal - F618.PaidAmount) as Balance,
		(F618.GrandTotal - F618.PaidAmount)* F618.ExchangeRate as BalanceLocal		
	From 
		F502
		-- Inner Join F011 On F502.BudgetTypeCode = F011.Code
		INNER JOIN F618 on F502.DocumentNo = F618.INVNo	
		Inner Join F501 on F502.BKMNo = F501.BKMNo
		-- INNER JOIN F611 on F502.BranchCode   = F611.BranchCode and F502.DocumentNo = F611.SRTNo
		-- INNER JOIN F515 on F502.BranchCode   = F515.BranchCode and F502.DocumentNo = F515.CDPNo
	Where 	
		-- F502.BranchCode = prmBranchCode And 
		F502.BKMNo = prmBKMNo
		-- GROUP BY BKMNo
union all
Select 
		F502.BranchCode,
		F502.BKMNo,
		F502.BudgetTypeCode,
		-- F011.Name as BudgetTypeName,
		F502.DocumentNo,
		F502.Description,
		F502.Amount,
                (F502.Amount * F501.ExchangeRate)	as AmountLocal,
		F502.DPP_PPN_Status,
		F613.CurrencyCode	as CurrencyCode, 
		F613.ExchangeRate,		
		-- F613.Description	as Description, 	
		F613.GrandTotalAmount				as GrandTotal,
		(F613.GrandTotalAmount * F613.ExchangeRate) 	As GrandTotalAmountLocal, 
		F613.UsedAmount 				as PaidAmount,
		(F613.UsedAmount * F613.ExchangeRate) 		as  PaidAmountLocal,
		(F613.GrandTotalAmount - F613.UsedAmount) as Balance,
		(F613.GrandTotalAmount - F613.UsedAmount)* F613.ExchangeRate as BalanceLocal
	From 
		F502
		-- Inner Join F011 On F502.BudgetTypeCode = F011.Code
		INNER JOIN F613 on F502.DocumentNo = F613.SRTNo	
		Inner Join F501 on F502.BKMNo = F501.BKMNo
		-- INNER JOIN F611 on F502.BranchCode   = F611.BranchCode and F502.DocumentNo = F611.SRTNo
		-- INNER JOIN F515 on F502.BranchCode   = F515.BranchCode and F502.DocumentNo = F515.CDPNo
	Where 	
		-- F502.BranchCode = prmBranchCode And 
		F502.BKMNo = prmBKMNo
		
		-- group by BKMNo
	Order by BKMNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_607b_Get_FakNo_inv` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_607b_Get_FakNo_inv` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_607b_Get_FakNo_inv`(prmBranchCode varchar(50),prmINVNo VARCHAR(50))
BEGIN
		SELECT 	
	F607b.BranchCode,                        
	F607b.INVNo,   
	F607b.FakNo,      
	F607b.FakDate,    
	F607b.StatusRef
		FROM
			F607b
		WHERE
			F607b.BranchCode = prmBranchCode AND F607b.INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_accountreplacement` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_accountreplacement` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_accountreplacement`(
In prmVoucherNo Text,
In prmAccountCode Varchar(50), 
In prmOldCode Varchar(50)
)
BEGIN
Call usp_string_to_mysqlrow(prmVoucherNo, ",");
	Update F402 Set 
		F402.AccountCode = prmAccountCode
	Where 
		F402.VoucherNo In (Select * From Temp_SplitString) 
		And
		F402.AccountCode = prmOldCode;
DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_accountreplacement_getvoucherno` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_accountreplacement_getvoucherno` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_accountreplacement_getvoucherno`(
In prmFirstdate Datetime,
In prmLastdate Datetime,
In prmAccountCode Varchar(50)
)
BEGIN
	Select Distinct
		F401.TransactionDate,
		F401.VoucherNo,
		F402.AccountCode
	From F401
		Inner Join F402 On F401.VoucherNo = F402.VoucherNo
	Where 
		F401.TransactionDate Between prmFirstdate And prmLastdate
		And
		F402.AccountCode = prmAccountCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_balancesheet` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_balancesheet` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_balancesheet`(
    IN prmFirstDate DateTime, 
    IN prmLastDate DateTime,
    IN prmAccountType ENUM("H","G","S")
)
BEGIN
    DECLARE lenCode INT(2);
    IF prmAccountType = "H" THEN
       SET lenCode := 5;
    ELSEIF prmAccountType = "G" THEN
       SET lenCode := 9;
    ELSE
       SET lenCode := 18;
    END IF;
    SELECT * FROM (
	SELECT
	CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), CONVERT(YEAR(TransactionDate), CHAR(5)) ) AS TransactionDate,
	Month(TransactionDate) AS TransactionDateMonth,
	IF( LEFT(AccountCode, 2) IN ("01", "02"), "AKTIVA", "PASIVA") AS IstilahAcc,
	CASE LEFT(AccountCode, 2)
	   WHEN "01" THEN "Aktiva Lancar"
	   WHEN "02" THEN "Aktiva Tetap"
	   WHEN "03" THEN "Hutang Lancar / Kewajiban Lancar"
	   WHEN "04" THEN "Hutang Tetap / Kewajiban Jangka Panjang"
	   WHEN "05" THEN "MODAL"
	END AS IstilahAcc2,
	LEFT(AccountCode, lenCode) as AccountCode,
	F101.Name AS AccountName,
	CASE LEFT(AccountCode, 2)
	   WHEN "01" THEN SUM(IF (Ket = "A", Balance, 0))
	   WHEN "02" THEN SUM(IF (Ket = "A", Balance, 0))
	   WHEN "03" THEN -SUM(IF (Ket = "A", Balance, 0))
	   WHEN "04" THEN -SUM(IF (Ket = "A", Balance, 0))
	   WHEN "05" THEN -SUM(IF (Ket = "A", Balance, 0))
	END AS LastBalance,
	CASE LEFT(AccountCode, 2)
	   WHEN "01" THEN Sum(Debit-Credit) + SUM(IF (Ket = "A", Balance, 0))
	   WHEN "02" THEN Sum(Debit-Credit) + SUM(IF (Ket = "A", Balance, 0))
	   WHEN "03" THEN -Sum(Debit-Credit) - SUM(IF (Ket = "A", Balance, 0))
	   WHEN "04" THEN -Sum(Debit-Credit) - SUM(IF (Ket = "A", Balance, 0))
	   WHEN "05" THEN -Sum(Debit-Credit) - SUM(IF (Ket = "A", Balance, 0))
	END AS Balance
	    FROM
		(
		SELECT 
		   "A" AS Ket,
		   "" AS VoucherNo,
		   AccountCode,
		   "" AS AccountName,
		   prmFirstDate AS TransactionDate, 
		   "" AS RefNo,
		   IF (MONTH(prmFirstDate) = 1 AND DAY(prmFirstDate) = 1, "Openning Balance", "Last Balance") AS Description,   
		   0 AS Debit,   
		   0 AS Credit,   
		   SUM(BalanceIDR) AS Balance
			FROM 
			(  
			SELECT
			   F105.AccountCode,
			   CASE 
			      WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN 
				  (OpeningBalanceForeign)
			      WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN 
				  -(OpeningBalanceForeign) 
			   END AS BalanceForeign,
			   CASE 
			      WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN 
				  (OpeningBalanceForeign * ExchangeRate)
			      WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN 
				  -(OpeningBalanceForeign * ExchangeRate)
			   END AS BalanceIDR
			FROM 
			   F105
			WHERE 
			   PeriodYear = YEAR(prmFirstDate)
			UNION ALL
			SELECT 
			   F402.AccountCode,
			   SUM(F402.Debit - F402.Credit) AS BalanceForeign,
			   SUM((F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate)) AS BalanceIDR  
			FROM
			   F401
			   INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo
			WHERE 
			   F401.TransactionDate < prmFirstDate 
			   AND YEAR(F401.TransactionDate) = YEAR(prmFirstDate)
			   
			   
			GROUP BY F402.AccountCode 
			) as QRYLastBalance
		GROUP BY AccountCode
		UNION ALL
		SELECT 
		    'B' as Ket, 
		    F401.VoucherNo, 
		    F402.AccountCode,
		    F101.Name AS AccountName,   
		    F401.TransactionDate, 
		    F401.RefNo, 
		    F402.Description,   
		    (F402.Debit * F401.ExchangeRate) AS Debit,   
		    (F402.Credit * F401.ExchangeRate) AS Credit,   
		    (F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate) AS Balance   
		FROM 
		     F401 
		     INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo   
		     INNER JOIN F101 ON F402.AccountCode = F101.Code  
		WHERE 
		     TransactionDate BETWEEN prmFirstDate AND prmLastDate
			 
		)   
		AS QryLedger1
	    INNER JOIN F101 ON LEFT(AccountCode, lenCode) = F101.Code
	    WHERE LEFT(QryLedger1.AccountCode, 2) < "06"
	    GROUP BY LEFT(AccountCode, lenCode),
		     CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), YEAR(TransactionDate))
	    
	UNION ALL
	    	
	SELECT
	CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), CONVERT(YEAR(TransactionDate), CHAR(5)) ) AS TransactionDate,
	Month(TransactionDate) AS TransactionDateMonth,
	"PASIVA" AS IstilahAcc,
	"MODAL" AS IstilahAcc2,
	"xx" as AccountCode,
	"Retained Earning" AS AccountName,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "07" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "08" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "09" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "10" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "11" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "12" THEN -SUM(IF (Ket = "A", Balance, 0))
	END AS LastBalance,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "07" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "08" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "09" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "10" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "11" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "12" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	END AS Balance
	    FROM
		(
		SELECT 
		   "A" AS Ket,
		   "" AS VoucherNo,
		   AccountCode,
		   "" AS AccountName,
		   prmFirstDate AS TransactionDate, 
		   "" AS RefNo,
		   IF (MONTH(prmFirstDate) = 1 AND DAY(prmFirstDate) = 1, "Openning Balance", "Last Balance") AS Description,   
		   0 AS Debit,   
		   0 AS Credit,   
		   SUM(BalanceIDR) AS Balance
			FROM 
			(  
				SELECT 
				   F402.AccountCode,
				   SUM(F402.Debit - F402.Credit) AS BalanceForeign,
				   SUM((F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate)) AS BalanceIDR  
				FROM
				   F401
				   INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo
				WHERE 
				   F401.TransactionDate < prmFirstDate 
				   AND YEAR(F401.TransactionDate) = YEAR(prmFirstDate)
				GROUP BY F402.AccountCode 
			) as QRYLastBalance
		GROUP BY AccountCode
		UNION ALL
		SELECT 
		    'B' as Ket, 
		    F401.VoucherNo, 
		    F402.AccountCode,
		    F101.Name AS AccountName,   
		    F401.TransactionDate, 
		    F401.RefNo, 
		    F402.Description,   
		    (F402.Debit * F401.ExchangeRate) AS Debit,   
		    (F402.Credit * F401.ExchangeRate) AS Credit,   
		    (F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate) AS Balance   
		FROM 
		     F401 
		     INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo   
		     INNER JOIN F101 ON F402.AccountCode = F101.Code   
		WHERE 
		     TransactionDate BETWEEN prmFirstDate AND prmLastDate 
			 
		)   
		AS QryLedger
	    INNER JOIN F101 ON LEFT(QryLedger.AccountCode, 20) = F101.Code
	    WHERE QryLedger.AccountCode >= "06"
	    GROUP BY CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), YEAR(TransactionDate))
    )AS QryBalance1
    Order By TransactionDateMonth, IstilahAcc, AccountCode;
    
    
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_balancesheet_division` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_balancesheet_division` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_balancesheet_division`(
    IN prmFirstDate DateTime, 
    IN prmLastDate DateTime,
    IN prmAccountType ENUM("H","G","S"),
    IN prmDivisionCode VARCHAR(3)
)
BEGIN
    DECLARE lenCode INT(2);
    IF prmAccountType = "H" THEN
       SET lenCode := 5;
    ELSEIF prmAccountType = "G" THEN
       SET lenCode := 9;
    ELSE
       SET lenCode := 18;
    END IF;
    SELECT * FROM (
	SELECT
	CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), CONVERT(YEAR(TransactionDate), CHAR(5)) ) AS TransactionDate,
	Month(TransactionDate) AS TransactionDateMonth,
	IF( LEFT(AccountCode, 2) IN ("01", "02"), "AKTIVA", "PASIVA") AS IstilahAcc,
	CASE LEFT(AccountCode, 2)
	   WHEN "01" THEN "Aktiva Lancar"
	   WHEN "02" THEN "Aktiva Tetap"
	   WHEN "03" THEN "Hutang Lancar / Kewajiban Lancar"
	   WHEN "04" THEN "Hutang Tetap / Kewajiban Jangka Panjang"
	   WHEN "05" THEN "MODAL"
	END AS IstilahAcc2,
	LEFT(AccountCode, lenCode) as AccountCode,
	F101.Name AS AccountName,
	CASE LEFT(AccountCode, 2)
	   WHEN "01" THEN SUM(IF (Ket = "A", Balance, 0))
	   WHEN "02" THEN SUM(IF (Ket = "A", Balance, 0))
	   WHEN "03" THEN -SUM(IF (Ket = "A", Balance, 0))
	   WHEN "04" THEN -SUM(IF (Ket = "A", Balance, 0))
	   WHEN "05" THEN -SUM(IF (Ket = "A", Balance, 0))
	END AS LastBalance,
	CASE LEFT(AccountCode, 2)
	   WHEN "01" THEN Sum(Debit-Credit) + SUM(IF (Ket = "A", Balance, 0))
	   WHEN "02" THEN Sum(Debit-Credit) + SUM(IF (Ket = "A", Balance, 0))
	   WHEN "03" THEN -Sum(Debit-Credit) - SUM(IF (Ket = "A", Balance, 0))
	   WHEN "04" THEN -Sum(Debit-Credit) - SUM(IF (Ket = "A", Balance, 0))
	   WHEN "05" THEN -Sum(Debit-Credit) - SUM(IF (Ket = "A", Balance, 0))
	END AS Balance
	    FROM
		(
		SELECT 
		   "A" AS Ket,
		   "" AS VoucherNo,
		   AccountCode,
		   "" AS AccountName,
		   prmFirstDate AS TransactionDate, 
		   "" AS RefNo,
		   IF (MONTH(prmFirstDate) = 1 AND DAY(prmFirstDate) = 1, "Openning Balance", "Last Balance") AS Description,   
		   0 AS Debit,   
		   0 AS Credit,   
		   SUM(BalanceIDR) AS Balance
			FROM 
			(  
			SELECT
			   F105.AccountCode,
			   CASE 
			      WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN 
				  (OpeningBalanceForeign)
			      WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN 
				  -(OpeningBalanceForeign) 
			   END AS BalanceForeign,
			   CASE 
			      WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN 
				  (OpeningBalanceForeign * ExchangeRate)
			      WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN 
				  -(OpeningBalanceForeign * ExchangeRate)
			   END AS BalanceIDR
			FROM 
			   F105
			WHERE 
			   PeriodYear = YEAR(prmFirstDate)
			UNION ALL
			SELECT 
			   F402.AccountCode,
			   SUM(F402.Debit - F402.Credit) AS BalanceForeign,
			   SUM((F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate)) AS BalanceIDR  
			FROM
			   F401
			   INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo
			WHERE 
			   F401.TransactionDate < prmFirstDate 
			   AND YEAR(F401.TransactionDate) = YEAR(prmFirstDate)
			   
			   
			GROUP BY F402.AccountCode 
			) as QRYLastBalance
		GROUP BY AccountCode
		UNION ALL
		SELECT 
		    'B' as Ket, 
		    F401.VoucherNo, 
		    F402.AccountCode,
		    F101.Name AS AccountName,   
		    F401.TransactionDate, 
		    F401.RefNo, 
		    F402.Description,   
		    (F402.Debit * F401.ExchangeRate) AS Debit,   
		    (F402.Credit * F401.ExchangeRate) AS Credit,   
		    (F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate) AS Balance   
		FROM 
		     F401 
		     INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo   
		     INNER JOIN F101 ON F402.AccountCode = F101.Code  
		WHERE 
		     TransactionDate BETWEEN prmFirstDate AND prmLastDate
			 
		)   
		AS QryLedger1
	    INNER JOIN F101 ON LEFT(AccountCode, lenCode) = F101.Code
	    WHERE LEFT(QryLedger1.AccountCode, 2) < "06" AND RIGHT(QryLedger1.AccountCode,3) = prmDivisionCode
	    GROUP BY LEFT(AccountCode, lenCode),
		     CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), YEAR(TransactionDate))
	    
	UNION ALL
	    	
	SELECT
	CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), CONVERT(YEAR(TransactionDate), CHAR(5)) ) AS TransactionDate,
	Month(TransactionDate) AS TransactionDateMonth,
	"PASIVA" AS IstilahAcc,
	"MODAL" AS IstilahAcc2,
	"xx" as AccountCode,
	"Retained Earning" AS AccountName,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "07" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "08" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "09" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "10" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "11" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "12" THEN -SUM(IF (Ket = "A", Balance, 0))
	END AS LastBalance,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "07" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "08" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "09" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "10" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "11" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	    WHEN "12" THEN -SUM(Debit - Credit) - SUM(IF (Ket = "A", Balance, 0))
	END AS Balance
	    FROM
		(
		SELECT 
		   "A" AS Ket,
		   "" AS VoucherNo,
		   AccountCode,
		   "" AS AccountName,
		   prmFirstDate AS TransactionDate, 
		   "" AS RefNo,
		   IF (MONTH(prmFirstDate) = 1 AND DAY(prmFirstDate) = 1, "Openning Balance", "Last Balance") AS Description,   
		   0 AS Debit,   
		   0 AS Credit,   
		   SUM(BalanceIDR) AS Balance
			FROM 
			(  
				SELECT 
				   F402.AccountCode,
				   SUM(F402.Debit - F402.Credit) AS BalanceForeign,
				   SUM((F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate)) AS BalanceIDR  
				FROM
				   F401
				   INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo
				WHERE 
				   F401.TransactionDate < prmFirstDate 
				   AND YEAR(F401.TransactionDate) = YEAR(prmFirstDate)
				GROUP BY F402.AccountCode 
			) as QRYLastBalance
		GROUP BY AccountCode
		UNION ALL
		SELECT 
		    'B' as Ket, 
		    F401.VoucherNo, 
		    F402.AccountCode,
		    F101.Name AS AccountName,   
		    F401.TransactionDate, 
		    F401.RefNo, 
		    F402.Description,   
		    (F402.Debit * F401.ExchangeRate) AS Debit,   
		    (F402.Credit * F401.ExchangeRate) AS Credit,   
		    (F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate) AS Balance   
		FROM 
		     F401 
		     INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo   
		     INNER JOIN F101 ON F402.AccountCode = F101.Code   
		WHERE 
		     TransactionDate BETWEEN prmFirstDate AND prmLastDate 
			 
		)   
		AS QryLedger
	    INNER JOIN F101 ON LEFT(QryLedger.AccountCode, 20) = F101.Code
	    WHERE QryLedger.AccountCode >= "06" AND RIGHT(QryLedger.AccountCode,3) = prmDivisionCode
	    GROUP BY CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), YEAR(TransactionDate))
    )AS QryBalance1
    Order By TransactionDateMonth, IstilahAcc, AccountCode;
    
    
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_GetDivisionCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_GetDivisionCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_acc_GetDivisionCode`()
BEGIN
      SELECT RIGHT(F101.Code,3) AS DivisionCode FROM F101 Where F101.Type = 'S' Group By DivisionCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_lastbalance` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_lastbalance` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_lastbalance`(
    IN prmBranchCode VARCHAR(50),
    IN prmDate DateTime
)
BEGIN
	SELECT 
	   AccountCode, 
	   SUM(BalanceForeign) AS BalanceForeign, 
	   SUM(BalanceIDR) AS BalanceIDR
		FROM 
		(  
		SELECT
		   F105.AccountCode,
		   CASE 
		      WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN 
			  (OpeningBalanceForeign)
		      WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN 
			  -(OpeningBalanceForeign) 
		   END AS BalanceForeign,
		   CASE 
		      WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN 
			  (OpeningBalanceForeign * ExchangeRate)
		      WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN 
			  -(OpeningBalanceForeign * ExchangeRate)
		   END AS BalanceIDR
		FROM 
		   F105
		WHERE 
		   BranchCode = prmBranchCode
		   AND PeriodYear = YEAR(prmDate)
		UNION
		SELECT 
		   F402.AccountCode,
		   SUM(F402.Debit - F402.Credit) AS BalanceForeign,
		   SUM((F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate)) AS BalanceIDR  
		FROM
		   F401
		   INNER JOIN F402 ON F401.BranchCode = F402.BranchCode AND F401.VoucherNo = F402.VoucherNo
		WHERE 
		   F401.TransactionDate < prmDate 
		   AND YEAR(F401.TransactionDate) = YEAR(prmDate)
		   AND F401.BranchCode = prmBranchCode
		GROUP BY F402.AccountCode 
		) as QRYLastBalance
	  GROUP BY AccountCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_ledger` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_ledger` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_ledger`(
	IN prmFirstDate DateTime, 
	IN prmLastDate DateTime,
	IN prmFirstAccount VARCHAR(50),
	IN prmLastAccount VARCHAR(50)
)
BEGIN
	
    SELECT 
        Ket,
		VoucherNo,
		AccountCode,
		F101.Name AS AccountName,
		TransactionDate, 
		RefNo,
		Description,   
		Debit,   
		Credit,   
        balance
    FROM
	(
	SELECT 
	   "A" AS Ket,
	   "" AS VoucherNo,
	   AccountCode,
	   null AS TransactionDate, 
	   "" AS RefNo,
	   IF (MONTH(prmFirstDate) = 1 AND DAY(prmFirstDate) = 1, "Openning Balance", "Last Balance") AS Description,   
	   0 AS Debit,   
	   0 AS Credit,   
	   SUM(BalanceIDR) AS Balance
		FROM 
		(  
		SELECT
		   F105.AccountCode,
		   CASE 
		      -- WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN --AKTIFA	      
			 WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN 
			  (OpeningBalanceForeign)
		     -- WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN 
		     	WHEN LEFT(F105.AccountCode, 2) IN ('30','40','50') THEN  -- PASIVA
			  -(OpeningBalanceForeign) 
		   END AS BalanceForeign,
		   CASE 
		      -- WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN --AKTIFA
		      WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN 
			  (OpeningBalanceForeign * ExchangeRate)
		     -- WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN 
		      WHEN LEFT(F105.AccountCode, 2) IN ('30','40','50') THEN  -- PASIVA
			  -(OpeningBalanceForeign * ExchangeRate)
		   END AS BalanceIDR
		FROM 
		   F105
		WHERE 
		   PeriodYear = YEAR(prmFirstDate)
		UNION
		SELECT 
		   F402.AccountCode,
		   SUM(F402.Debit - F402.Credit) AS BalanceForeign,
		   SUM((F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate)) AS BalanceIDR  
		FROM
		   F401
		   INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo
		WHERE 
		   F401.TransactionDate < prmFirstDate 
		   AND YEAR(F401.TransactionDate) = YEAR(prmFirstDate)
		   
		GROUP BY F402.AccountCode 
		) as QRYLastBalance
	GROUP BY AccountCode
	UNION ALL   
	SELECT 
	    'B' as Ket, 
	    F401.VoucherNo, 
	    F402.AccountCode,
	    F401.TransactionDate, 
	    F401.RefNo, 
	    F402.Description,   
	    (F402.Debit * F401.ExchangeRate) AS Debit,   
	    (F402.Credit * F401.ExchangeRate) AS Credit,   
	    (F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate) AS Balance   
	FROM 
	     F401 
	     INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo
	WHERE 
	     TransactionDate BETWEEN prmFirstDate AND prmLastDate
		 
	)   
	AS QryLedger
    INNER JOIN F101 ON F101.Code = QryLedger.AccountCode
    WHERE QryLedger.AccountCode BETWEEN prmFirstAccount AND prmLastAccount
    ORDER BY AccountCode, Ket, TransactionDate;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_profitandloss` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_profitandloss` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_profitandloss`(
    IN prmFirstDate DateTime,
    IN prmLastDate DateTime,
    IN prmAccountType ENUM("H","G","S")
)
BEGIN
	DECLARE lenCode INT(1);
	IF prmAccountType = "H" THEN
	   SET lenCode := 3;
	ELSEIF prmAccountType = "G" THEN
	   SET lenCode := 6;
	ELSE
	   SET lenCode := 13;
        END IF;
    
	SELECT
	CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), CONVERT(YEAR(TransactionDate), CHAR(5)) ) AS TransactionDate,
	Month(TransactionDate) as TransationDateMonth,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN "Sales"
	    WHEN "07" THEN "Sales"
	    WHEN "08" THEN "Expenses"
	    WHEN "09" THEN "Expenses"
	    WHEN "10" THEN "Expenses"
	    WHEN "11" THEN "Other Revenues"
	    WHEN "12" THEN "Income Tax"
	END AS GroupHeader,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN "Sales"
	    WHEN "07" THEN "Cost Of Goods Sales"
	    WHEN "08" THEN "Marketing Expenses"
	    WHEN "09" THEN "General And Administration Expenses"
	    WHEN "10" THEN "Other Expenses"
	    WHEN "11" THEN "Other Revenues"
	    WHEN "12" THEN "Income Tax"
	END AS Header,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN 1
	    WHEN "07" THEN 1
	    WHEN "08" THEN -1
	    WHEN "09" THEN -1
	    WHEN "10" THEN -1
	    WHEN "11" THEN 1
	    WHEN "12" THEN 1
	END AS TandaGroupHeader,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN 1
	    WHEN "07" THEN -1
	    WHEN "08" THEN 1
	    WHEN "09" THEN 1
	    WHEN "10" THEN 1
	    WHEN "11" THEN 1
	    WHEN "12" THEN 1
	END AS TandaHeader,
	LEFT(AccountCode, lenCode) as AccountCode,
	F101.Name AS AccountName, 
	-- SUM(IF (Ket = "A", Balance, 0)) AS OpeningBalance,
	SUM(Debit) AS Debit,   
	SUM(Credit) AS Credit,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "07" THEN SUM(IF (Ket = "A", Balance, 0))
	    WHEN "08" THEN SUM(IF (Ket = "A", Balance, 0))
	    WHEN "09" THEN SUM(IF (Ket = "A", Balance, 0))
	    WHEN "10" THEN SUM(IF (Ket = "A", Balance, 0))
	    WHEN "11" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "12" THEN SUM(IF (Ket = "A", Balance, 0))
	END AS OpeningBalance,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN -SUM(Debit - Credit) 
	    WHEN "07" THEN SUM(Debit - Credit) 
	    WHEN "08" THEN SUM(Debit - Credit) 
	    WHEN "09" THEN SUM(Debit - Credit) 
	    WHEN "10" THEN SUM(Debit - Credit) 
	    WHEN "11" THEN -SUM(Debit - Credit)
	    WHEN "12" THEN SUM(Debit - Credit) 
	END AS Balance
	    FROM
		(
		SELECT 
		   "A" AS Ket,
		   "" AS VoucherNo,
		   AccountCode,
		   "" AS AccountName,
		   prmFirstDate AS TransactionDate, 
		   "" AS RefNo,
		   IF (MONTH(prmFirstDate) = 1 AND DAY(prmFirstDate) = 1, "Openning Balance", "Last Balance") AS Description,   
		   0 AS Debit,   
		   0 AS Credit,   
		   SUM(BalanceIDR) AS Balance
			FROM 
			(  
			SELECT 
			   F402.AccountCode,
			   SUM(F402.Debit - F402.Credit) AS BalanceForeign,
			   SUM((F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate)) AS BalanceIDR  
			FROM
			   F401
			   INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo
			WHERE 
			   F401.TransactionDate < prmFirstDate 
			   AND YEAR(F401.TransactionDate) = YEAR(prmFirstDate)
			   
			GROUP BY F402.AccountCode 
			) as QRYLastBalance
		GROUP BY AccountCode
		UNION   
		SELECT 
		    'B' as Ket, 
		    F401.VoucherNo, 
		    F402.AccountCode,
		    F101.Name AS AccountName,   
		    F401.TransactionDate, 
		    F401.RefNo, 
		    F402.Description,   
		    (F402.Debit * F401.ExchangeRate) AS Debit,   
		    (F402.Credit * F401.ExchangeRate) AS Credit,   
		    (F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate) AS Balance   
		FROM 
		     F401 
		     INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo   
		     INNER JOIN F101 ON F402.AccountCode = F101.Code   
		WHERE 
		     TransactionDate BETWEEN prmFirstDate AND prmLastDate 
			 
		)   
		AS QryLedger
	    INNER JOIN F101 ON LEFT(QryLedger.AccountCode, lenCode) = F101.Code
	    WHERE QryLedger.AccountCode >= "06"
	    GROUP BY 
		CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), CONVERT(YEAR(TransactionDate), CHAR) ), 
		LEFT(QryLedger.AccountCode, lenCode)
	    ORDER BY 
		YEAR(TransactionDate), 
		MONTH(TransactionDate), 
		QryLedger.AccountCode, 
		QryLedger.Ket DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_profitandlossbydivision` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_profitandlossbydivision` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_profitandlossbydivision`(
    IN prmBranchCode VARCHAR(50),
    IN prmFirstDate DateTime,
    IN prmLastDate DateTime,
    IN prmAccountType ENUM("H","G","S"),
    IN prmDivisionCode VARCHAR(3)
)
BEGIN
	DECLARE lenCode INT(1);
	IF prmAccountType = "H" THEN
	   SET lenCode := 5;
	ELSEIF prmAccountType = "G" THEN
	   SET lenCode := 9;
	ELSE
	   SET lenCode := 18;
        END IF;
    
	SELECT
	CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), CONVERT(YEAR(TransactionDate), CHAR(5)) ) AS TransactionDate,
	Month(TransactionDate) as TransationDateMonth,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN "Sales"
	    WHEN "07" THEN "Sales"
	    WHEN "08" THEN "Expenses"
	    WHEN "09" THEN "Expenses"
	    WHEN "10" THEN "Expenses"
	    WHEN "11" THEN "Other Revenues"
	    WHEN "12" THEN "Income Tax"
	END AS GroupHeader,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN "Sales"
	    WHEN "07" THEN "Cost Of Goods Sales"
	    WHEN "08" THEN "Marketing Expenses"
	    WHEN "09" THEN "General And Administration Expenses"
	    WHEN "10" THEN "Other Expenses"
	    WHEN "11" THEN "Other Revenues"
	    WHEN "12" THEN "Income Tax"
	END AS Header,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN 1
	    WHEN "07" THEN 1
	    WHEN "08" THEN -1
	    WHEN "09" THEN -1
	    WHEN "10" THEN -1
	    WHEN "11" THEN 1
	    WHEN "12" THEN 1
	END AS TandaGroupHeader,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN 1
	    WHEN "07" THEN -1
	    WHEN "08" THEN 1
	    WHEN "09" THEN 1
	    WHEN "10" THEN 1
	    WHEN "11" THEN 1
	    WHEN "12" THEN 1
	END AS TandaHeader,
	LEFT(AccountCode, lenCode) as AccountCode,
	F101.Name AS AccountName, 
	-- SUM(IF (Ket = "A", Balance, 0)) AS OpeningBalance,
	SUM(Debit) AS Debit,   
	SUM(Credit) AS Credit,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "07" THEN SUM(IF (Ket = "A", Balance, 0))
	    WHEN "08" THEN SUM(IF (Ket = "A", Balance, 0))
	    WHEN "09" THEN SUM(IF (Ket = "A", Balance, 0))
	    WHEN "10" THEN SUM(IF (Ket = "A", Balance, 0))
	    WHEN "11" THEN -SUM(IF (Ket = "A", Balance, 0))
	    WHEN "12" THEN SUM(IF (Ket = "A", Balance, 0))
	END AS OpeningBalance,
	CASE LEFT(AccountCode, 2) 
	    WHEN "06" THEN -SUM(Debit - Credit) 
	    WHEN "07" THEN SUM(Debit - Credit) 
	    WHEN "08" THEN SUM(Debit - Credit) 
	    WHEN "09" THEN SUM(Debit - Credit) 
	    WHEN "10" THEN SUM(Debit - Credit) 
	    WHEN "11" THEN -SUM(Debit - Credit)
	    WHEN "12" THEN SUM(Debit - Credit) 
	END AS Balance
	    FROM
		(
		SELECT 
		   "A" AS Ket,
		   "" AS VoucherNo,
		   AccountCode,
		   "" AS AccountName,
		   prmFirstDate AS TransactionDate, 
		   "" AS RefNo,
		   IF (MONTH(prmFirstDate) = 1 AND DAY(prmFirstDate) = 1, "Openning Balance", "Last Balance") AS Description,   
		   0 AS Debit,   
		   0 AS Credit,   
		   SUM(BalanceIDR) AS Balance
			FROM 
			(  
			SELECT 
			   F402.AccountCode,
			   SUM(F402.Debit - F402.Credit) AS BalanceForeign,
			   SUM((F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate)) AS BalanceIDR  
			FROM
			   F401
			   INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo
			WHERE 
			   F401.TransactionDate < prmFirstDate 
			   AND YEAR(F401.TransactionDate) = YEAR(prmFirstDate)
			   
			GROUP BY F402.AccountCode 
			) as QRYLastBalance
		GROUP BY AccountCode
		UNION   
		SELECT 
		    'B' as Ket, 
		    F401.VoucherNo, 
		    F402.AccountCode,
		    F101.Name AS AccountName,   
		    F401.TransactionDate, 
		    F401.RefNo, 
		    F402.Description,   
		    (F402.Debit * F401.ExchangeRate) AS Debit,   
		    (F402.Credit * F401.ExchangeRate) AS Credit,   
		    (F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate) AS Balance   
		FROM 
		     F401 
		     INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo   
		     INNER JOIN F101 ON F402.AccountCode = F101.Code   
		WHERE 
		     TransactionDate BETWEEN prmFirstDate AND prmLastDate 
			 
		)   
		AS QryLedger
	    INNER JOIN F101 ON LEFT(QryLedger.AccountCode, lenCode) = F101.Code
	    WHERE QryLedger.AccountCode >= "06" AND RIGHT(QryLedger.AccountCode,3) = prmDivisionCode
	    GROUP BY 
		CONCAT( CONCAT(MONTHNAME(TransactionDate), " - "), CONVERT(YEAR(TransactionDate), CHAR) ), 
		LEFT(QryLedger.AccountCode, lenCode)
	    ORDER BY 
		YEAR(TransactionDate), 
		MONTH(TransactionDate), 
		QryLedger.AccountCode, 
		QryLedger.Ket DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_trialbalance` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_trialbalance` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_trialbalance`(
    IN prmFirstDate DateTime, 
    IN prmLastDate DateTime,
    IN prmFirstAccount VARCHAR(50),
    IN prmLastAccount VARCHAR(50),
    IN prmAccountType ENUM("H","G","S")
)
BEGIN
	DECLARE lenCode INT(1);
	IF prmAccountType = "H" THEN
	   SET lenCode := 3;
	ELSEIF prmAccountType = "G" THEN
	   SET lenCode := 6;
	ELSE
	   SET lenCode := 13;
        END IF;
    
	SELECT
	LEFT(AccountCode, lenCode) as AccountCode,
	F101.Name AS AccountName,
	-- IF( LEFT(AccountCode, 3) IN ("01", "02", "03", "04", "05"), 1, 2) AS SubTotal, --aktifa
	IF( LEFT(AccountCode, 3) IN ("10", "20", "30"), 1, 2) AS SubTotal,
	SUM(IF (Ket = "A", Balance, 0)) AS OpeningBalance,
	SUM(Debit) AS Debit,   
	SUM(Credit) AS Credit
	    FROM
		(
		SELECT 
		   "A" AS Ket,
		   "" AS VoucherNo,
		   AccountCode,
		   "" AS AccountName,
		   "" AS TransactionDate, 
		   "" AS RefNo,
		   IF (MONTH(prmFirstDate) = 1 AND DAY(prmFirstDate) = 1, "Openning Balance", "Last Balance") AS Description,   
		   0 AS Debit,   
		   0 AS Credit,   
		   SUM(BalanceIDR) AS Balance
			FROM 
			(  
			SELECT
			   F105.AccountCode,
			   CASE 
			     -- WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN -- AKTIFA
			      WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN 
				  (OpeningBalanceForeign)
			     --  WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN  -- PASIVA
			      WHEN LEFT(F105.AccountCode, 2) IN ('30','40','50') THEN  -- PASIVA
				  -(OpeningBalanceForeign) 
			   END AS BalanceForeign,
			   CASE 
			      -- WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN 
			      WHEN LEFT(F105.AccountCode, 2) in ('10','20','60') THEN 
				  (OpeningBalanceForeign * ExchangeRate)
			      -- WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN 
			      WHEN LEFT(F105.AccountCode, 2) in ('30','40','50') THEN 
				  -(OpeningBalanceForeign * ExchangeRate)
			   END AS BalanceIDR
			FROM 
			   F105
			WHERE 
			   PeriodYear = YEAR(prmFirstDate)
			Union ALL
			SELECT 
			   F402.AccountCode,
			   SUM(F402.Debit - F402.Credit) AS BalanceForeign,
			   SUM((F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate)) AS BalanceIDR  
			FROM
			   F401
			   INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo
			WHERE 
			   F401.TransactionDate < prmFirstDate 
			   AND YEAR(F401.TransactionDate) = YEAR(prmFirstDate)
			   
			GROUP BY F402.AccountCode 
			) as QRYLastBalance
		GROUP BY AccountCode
		Union ALL   
		SELECT 
		    'B' as Ket, 
		    F401.VoucherNo, 
		    F402.AccountCode,
		    F101.Name AS AccountName,   
		    F401.TransactionDate, 
		    F401.RefNo, 
		    F402.Description,   
		    (F402.Debit * F401.ExchangeRate) AS Debit,   
		    (F402.Credit * F401.ExchangeRate) AS Credit,   
		    (F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate) AS Balance   
		FROM 
		     F401 
		     INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo   
		     INNER JOIN F101 ON F402.AccountCode = F101.Code   
		WHERE 
		     TransactionDate BETWEEN prmFirstDate AND prmLastDate 
			 
		)   
		AS QryLedger
	    INNER JOIN F101 ON LEFT(QryLedger.AccountCode, lenCode) = F101.Code
	    WHERE QryLedger.AccountCode BETWEEN prmFirstAccount AND prmLastAccount
	    GROUP BY LEFT(QryLedger.AccountCode, lenCode)
	    ORDER BY QryLedger.AccountCode, QryLedger.Ket DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_trialbalance_division` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_trialbalance_division` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_trialbalance_division`(
    IN prmFirstDate DateTime, 
    IN prmLastDate DateTime,
    IN prmFirstAccount VARCHAR(50),
    IN prmLastAccount VARCHAR(50),
    IN prmAccountType ENUM("H","G","S"),
    IN prmDivisionCode VARCHAR(3)
)
BEGIN
	DECLARE lenCode INT(1);
	IF prmAccountType = "H" THEN
	   SET lenCode := 5;
	ELSEIF prmAccountType = "G" THEN
	   SET lenCode := 9;
	ELSE
	   SET lenCode := 18;
        END IF;
    
	SELECT
	LEFT(AccountCode, lenCode) as AccountCode,
	F101.Name AS AccountName,
	IF( LEFT(AccountCode, 2) IN ("01", "02", "03", "04", "05"), 1, 2) AS SubTotal, 
	SUM(IF (Ket = "A", Balance, 0)) AS OpeningBalance,
	SUM(Debit) AS Debit,   
	SUM(Credit) AS Credit
	    FROM
		(
		SELECT 
		   "A" AS Ket,
		   "" AS VoucherNo,
		   AccountCode,
		   "" AS AccountName,
		   "" AS TransactionDate, 
		   "" AS RefNo,
		   IF (MONTH(prmFirstDate) = 1 AND DAY(prmFirstDate) = 1, "Openning Balance", "Last Balance") AS Description,   
		   0 AS Debit,   
		   0 AS Credit,   
		   SUM(BalanceIDR) AS Balance
			FROM 
			(  
			SELECT
			   F105.AccountCode,
			   CASE 
			      WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN 
				  (OpeningBalanceForeign)
			      WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN 
				  -(OpeningBalanceForeign) 
			   END AS BalanceForeign,
			   CASE 
			      WHEN LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') THEN 
				  (OpeningBalanceForeign * ExchangeRate)
			      WHEN LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') THEN 
				  -(OpeningBalanceForeign * ExchangeRate)
			   END AS BalanceIDR
			FROM 
			   F105
			WHERE 
			   PeriodYear = YEAR(prmFirstDate)
			UNION
			SELECT 
			   F402.AccountCode,
			   SUM(F402.Debit - F402.Credit) AS BalanceForeign,
			   SUM((F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate)) AS BalanceIDR  
			FROM
			   F401
			   INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo
			WHERE 
			   F401.TransactionDate < prmFirstDate 
			   AND YEAR(F401.TransactionDate) = YEAR(prmFirstDate)
			   
			GROUP BY F402.AccountCode 
			) as QRYLastBalance
		GROUP BY AccountCode
		UNION   
		SELECT 
		    'B' as Ket, 
		    F401.VoucherNo, 
		    F402.AccountCode,
		    F101.Name AS AccountName,   
		    F401.TransactionDate, 
		    F401.RefNo, 
		    F402.Description,   
		    (F402.Debit * F401.ExchangeRate) AS Debit,   
		    (F402.Credit * F401.ExchangeRate) AS Credit,   
		    (F402.Debit * F401.ExchangeRate) - (F402.Credit * F401.ExchangeRate) AS Balance   
		FROM 
		     F401 
		     INNER JOIN F402 ON F401.VoucherNo = F402.VoucherNo   
		     INNER JOIN F101 ON F402.AccountCode = F101.Code   
		WHERE 
		     TransactionDate BETWEEN prmFirstDate AND prmLastDate 
			 
		)   
		AS QryLedger
	    INNER JOIN F101 ON LEFT(QryLedger.AccountCode, lenCode) = F101.Code
	    WHERE QryLedger.AccountCode BETWEEN prmFirstAccount AND prmLastAccount
		AND RIGHT(QryLedger.AccountCode,3) = prmDivisionCode
	    GROUP BY LEFT(QryLedger.AccountCode, lenCode)
	    ORDER BY QryLedger.AccountCode, QryLedger.Ket DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_unbalance` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_unbalance` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_unbalance`(IN prmBranchCode VARCHAR(50))
BEGIN
select F401.VoucherNo, F401.TransactionDate, F401.RefNo,
		F006.Code 	as CurrencyCode,  
		F006.Name 	as CurrencyName, 
		 qr1.Debit 							as DebitForeign, 
		 qr1.Credit 							as CreditForeign , 
		 (abs(qr1.Debit - qr1.Credit)) as BalanceAmountForeign,  
		 (qr1.Debit * F401.ExchangeRate) 	as DebitIDR, 
		 (qr1.Credit * F401.ExchangeRate) 	as CreditIDR , 
		 (abs((qr1.Debit - qr1.Credit) * F401.ExchangeRate)) as BalanceAmountIDR  
		 from(
			select VoucherNo, sum(Debit) as Debit, sum(Credit) as Credit 
			from F402 INNER JOIN F101 ON F101.Code = F402.AccountCode
			group by VoucherNo) as qr1 
		 inner join F401 on qr1.VoucherNo = F401.VoucherNo 
		 inner join  F006 on F401.CurrencyCode = F006.Code 
		 where qr1.Debit <> qr1.Credit and
F401.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_unbalance_detail` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_unbalance_detail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_unbalance_detail`(
In prmVoucherNo VARCHAR(50)
)
BEGIN
	Select
		F402.VoucherNo,
		F402.AccountCode,
		F101.Name As AccountName,
		F402.Description,
		F402.Debit,
		F402.Credit
	From F402
		LEFT Join F101 On F402.AccountCode = F101.Code 
	Where
		F402.VoucherNo = prmVoucherNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_undetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_undetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_undetail`(IN prmBranchCode VARCHAR(50))
BEGIN
	SELECT distinct F402.VoucherNo
FROM F402 where F402.VoucherNo not in (Select F401.VoucherNo From F401)
and F402.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_undetail_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_undetail_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_undetail_delete`(IN prmBranchCode VARCHAR(50), IN prmVoucherNo VARCHAR(50))
BEGIN
	DELETE FROM F401 WHERE F402.BranchCode = prmBranchCode AND F401.VoucherNo = prmVoucherNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_unheader` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_unheader` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_unheader`(IN prmBranchCode VARCHAR(50))
BEGIN
SELECT F401.VoucherNo
FROM F401 left JOIN F402 ON F401.VoucherNo = F402.VoucherNo AND F401.BranchCode = F401.BranchCode
WHERE F402.VoucherNo is null;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_acc_unheader_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_acc_unheader_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_acc_unheader_delete`(IN prmBranchCode VARCHAR(50), IN prmVoucherNo VARCHAR(50))
BEGIN
	DELETE FROM F402 WHERE F402.BranchCode = prmBranchCode AND F402.VoucherNo = prmVoucherNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_AnnualSalesPerCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_AnnualSalesPerCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_AnnualSalesPerCustomer`(prmFirstDate Datetime, prmLastDate datetime)
BEGIN
  -- CALL usp_string_to_mysqlrow(prmCustomerCode, ",");
SELECT 
	Qry1.CurrencyCode, Qry1.CustomerCode, Qry1.BranchCode, Qry1.CustomerName, Qry1.SalesAmount, Qry1.SalesQuantity, Qry1.TransactionDate,  
    IFNULL(Qry2.ReturnAmount,0) AS ReturnAmount, IFNULL(Qry2.ReturnQuantity,0) AS ReturnQuantity
FROM
	(SELECT 
			F607.CurrencyCode,
		    F607.CustomerCode,
            F607.BranchCode,
            F607.TransactionDate,
            -- F001.Name AS BranchName,
            F106.Name AS CustomerName,   
	   sum(TotalTransaction) AS SalesAmount,
       sum(Quantity) AS SalesQuantity
	   FROM F607
			INNER JOIN F608 ON F607.InvNo = F608.InvNo
           -- INNER JOIN F001 ON F607.BranchCode = F001.Code
            INNER JOIN F106 ON F607.CustomerCode = F106.Code
	   WHERE F607.TransactionDate BETWEEN prmFirstdate AND prmLastdate
	   GROUP BY  CustomerCode
    ) Qry1
	LEFT JOIN
	(
		SELECT
			F613.BranchCode,
			CurrencyCode,
		    CustomerCode,
			sum(TotalTransactionAmount) AS ReturnAmount,
            sum(Quantity) AS ReturnQuantity
		FROM F613
			INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
		WHERE F613.TransactionDate BETWEEN prmFirstdate AND prmLastdate
        GROUP BY  CustomerCode
    ) Qry2
    ON Qry1.CurrencyCode = Qry2.CurrencyCode AND Qry1.CustomerCode = Qry2.CustomerCode 
   -- WHERE Qry1.CustomerCode IN (SELECT * FROM Temp_SplitString);
    --  DROP TEMPORARY TABLE Temp_SplitString
    ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_AnnualSalesPerItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_AnnualSalesPerItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_AnnualSalesPerItem`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
SELECT 
	Qry1.CurrencyCode, Qry1.ItemCode, Qry1.BranchCode, Qry1.BranchName, Qry1.ItemName, Qry1.SalesAmount, Qry1.SalesQuantity, Qry1.TransactionDate,  
    IFNULL(Qry2.ReturnAmount,0) AS ReturnAmount, IFNULL(Qry2.ReturnQuantity,0) AS ReturnQuantity
FROM
	(SELECT 
			F607.CurrencyCode,
		    F608.ItemCode,
            F607.BranchCode,
            F607.TransactionDate,
            F001.Name AS BranchName,
            F013.Name AS ItemName,   
	   sum(TotalTransaction) AS SalesAmount,
       sum(Quantity) AS SalesQuantity
	   FROM F607
			INNER JOIN F608 ON F607.InvNo = F608.InvNo
            INNER JOIN F001 ON F607.BranchCode = F001.Code
            INNER JOIN F013 ON F608.ItemCode = F013.Code
	   WHERE F607.TransactionDate BETWEEN prmFirstdate AND prmLastdate
	   GROUP BY CurrencyCode, ItemCode, BranchName
    ) Qry1
	LEFT JOIN
	(
		SELECT
			F613.BranchCode,
			CurrencyCode,
		    F614.ItemCode,
			sum(TotalTransactionAmount) AS ReturnAmount,
            sum(Quantity) AS ReturnQuantity
		FROM F613
			INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
		WHERE F613.TransactionDate BETWEEN prmFirstdate AND prmLastdate
        GROUP BY CurrencyCode, ItemCode
    ) Qry2
    ON Qry1.CurrencyCode = Qry2.CurrencyCode AND Qry1.ItemCode = Qry2.ItemCode AND Qry1.BranchCode = Qry2.BranchCode
    WHERE Qry1.BranchCode IN (SELECT * FROM Temp_SplitString);
    DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_AnnualSalesPerSalesman` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_AnnualSalesPerSalesman` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_AnnualSalesPerSalesman`(prmSalesmanCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmSalesmanCode, ",");
SELECT 
	Qry1.CurrencyCode, Qry1.SalesmanCode, Qry1.BranchCode, Qry1.BranchName, Qry1.SalesmanName, Qry1.SalesAmount, Qry1.SalesQuantity, Qry1.TransactionDate,  
    IFNULL(Qry2.ReturnAmount,0) AS ReturnAmount, IFNULL(Qry2.ReturnQuantity,0) AS ReturnQuantity
FROM
	(SELECT 
			F607.CurrencyCode,
		    F607.SalesmanCode,
            F607.BranchCode,
            F607.TransactionDate,
            F001.Name AS BranchName,
            F108.Name AS SalesmanName,   
	   sum(TotalTransaction) AS SalesAmount,
       sum(Quantity) AS SalesQuantity
	   FROM F607
			INNER JOIN F608 ON F607.InvNo = F608.InvNo
            INNER JOIN F001 ON F607.BranchCode = F001.Code
            INNER JOIN F108 ON F607.SalesmanCode = F108.Code
	   WHERE F607.TransactionDate BETWEEN prmFirstdate AND prmLastdate
	   GROUP BY CurrencyCode, SalesmanCode, BranchName
    ) Qry1
	LEFT JOIN
	(
		SELECT
			F613.BranchCode,
			CurrencyCode,
		    SalesmanCode,
			sum(TotalTransactionAmount) AS ReturnAmount,
            sum(Quantity) AS ReturnQuantity
		FROM F613
			INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
		WHERE F613.TransactionDate BETWEEN prmFirstdate AND prmLastdate
        GROUP BY CurrencyCode, SalesmanCode
    ) Qry2
    ON Qry1.CurrencyCode = Qry2.CurrencyCode AND Qry1.SalesmanCode = Qry2.SalesmanCode AND Qry1.BranchCode = Qry2.BranchCode
    WHERE Qry1.SalesmanCode IN (SELECT * FROM Temp_SplitString);
    DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_ApDoc_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_ApDoc_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_ApDoc_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate DATETIME,
   IN prmLastDate DATETIME,
   IN prmDocNo VARCHAR(50), 
   IN prmSupplierCode VARCHAR(50),
   IN prmSupplierName VARCHAR(100),   
   IN prmCurrencyCode VARCHAR(50)
)
BEGIN
	SELECT 
	Qry3.TransactionType,
	Qry3.DocNo,
	Qry3.TransactionDate,
	Qry3.SupplierCode,
	Qry3.SupplierName,
		Qry3.BranchCode,
		Qry3.BKKNo,
		Qry3.BudgetTypeCode,
		-- F011.Name AS BudgetTypeName,
		Qry3.DocumentNo,
		Qry3.Description,
		Qry3.GrandTotalAmount,
                Qry3.GrandTotalAmountLocal,
                 IF(ISNULL(Qry3.PaidAmountCash), 0, Qry3.PaidAmountCash)AS PaidAmountBank,
                IF(ISNULL(Qry3.PaidAmountBank), 0, Qry3.PaidAmountBank)AS PaidAmountBank,
		Qry3.GrandTotalAmountLocal-(IF(ISNULL(Qry3.PaidAmountCash), 0, Qry3.PaidAmountCash)+IF(ISNULL(Qry3.PaidAmountBank), 0, Qry3.PaidAmountBank))AS Balance,
			Qry3.GrandTotalAmountLocal-(IF(ISNULL(Qry3.PaidAmountCash), 0, Qry3.PaidAmountCash)+IF(ISNULL(Qry3.PaidAmountBank), 0, Qry3.PaidAmountBank))AS BalanceLocal
		FROM(	
	SELECT 
	Qry1.TransactionType,
	Qry1.DocNo,
	Qry1.TransactionDate,
	Qry1.SupplierCode,
	Qry1.SupplierName,
		Qry1.BranchCode,
		Qry1.BKKNo,
		Qry1.BudgetTypeCode,
		-- F011.Name AS BudgetTypeName,
		Qry1.DocumentNo,
		Qry1.Description,
		Qry1.GrandTotalAmount,
                Qry1.GrandTotalAmountLocal,
                (SELECT SUM(Amount) FROM f506  WHERE f506.DocumentNo= Qry1.DocNo
                 ) AS PaidAmountCash,
		(SELECT SUM(Amount) FROM f508  WHERE f508.DocumentNo= Qry1.DocNo
                 ) AS PaidAmountBank,
		Qry1.DPP_PPN_Status	
		FROM(	
	SELECT 
	'GRN' AS TransactionType,
	f505_ap.BKKNo AS DocNo,
	f505_ap.TransactionDate,
	f505_ap.SupplierCode AS SupplierCode,
	F109.Name 		AS SupplierName,
		f506_AP.BranchCode,
		f506_AP.BKKNo,
		f506_AP.BudgetTypeCode,
		-- F011.Name AS BudgetTypeName,
		f506_AP.DocumentNo,
		f506_AP.Description,
		SUM(f506_AP.Amount )AS GrandTotalAmount,
                SUM((f506_AP.Amount * f505_AP.ExchangeRate))	AS GrandTotalAmountLocal,
		f506_AP.DPP_PPN_Status		
	FROM 
		f506_AP
		LEFT JOIN F301 ON f506_AP.DocumentNo = F301.GRNNo	
		INNER JOIN f505_AP ON f506_AP.BKKNo = f505_AP.BKKNo	
LEFT JOIN F109 ON f505_ap.SupplierCode = F109.Code     
	   WHERE 
		-- F301.BranchCode = prmBranchCode 
		 f505_ap.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		AND f506_ap.BKKNo LIKE prmDocNo
		AND f505_ap.SupplierCode LIKE prmSupplierCode
		AND F109.Name LIKE prmSupplierName	
		GROUP BY BKKNo
	ORDER BY BKKNo DESC
	) AS Qry1 ) AS Qry3	
	WHERE Qry3.GrandTotalAmountLocal-(IF(ISNULL(Qry3.PaidAmountCash), 0, Qry3.PaidAmountCash)+IF(ISNULL(Qry3.PaidAmountBank), 0, Qry3.PaidAmountBank)) > 0
	ORDER BY Qry3.BKKNo DESC	
	;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_balancesheet_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_balancesheet_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_balancesheet_get`(IN prmBranchCode VARCHAR(50), in prmFirstYearDate Date, in prmFirstDate Date, in prmLastDate Date)
BEGIN
	select * from(
	select 
	qr3.AccountCode,
	qr3.AccountName,
	sum(qr3.LastMonthIDR) as LastMonthIDR,
	sum(qr3.ThisMonthIDR) as ThisMonthIDR from(
	select 
	qr2.AccountCode, 
	qr2.AccountName,
	sum(qr2.DebitamountIDR - qr2.CreditAmountIDR) as LastMonthIDR,
	cast(0 as signed) as ThisMonthIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as Signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where 
	F401.PostingStatus = '1' 
	and
	F401.BranchCode = prmBranchCode
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	and
	left(F402.AccountCode,2) in ('10','20') 
	union All 
	select 
	CAST(''  as char)  			as VoucherNo, 
	prmFirstYearDate 			as TransactionDate, 
	CAST(''  as char)  			as RefNo, 
	CAST('1' as signed)			as ExchangeRate, 
	F101.Code 				as AccountCode, 
	F101.Name 				as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	'IDR' 					as CurrencyCode, 
	CAST('' as char) 			as CurrencyName, 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign
		when LEFT(F105.AccountCode, 2) in ('10','20','60') then F105.OpeningBalanceForeign
		else 0 
	end as DebitAmountForeign, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign
		when LEFT(F105.AccountCode, 2) in ('30','40','50') then -F105.OpeningBalanceForeign
		 else 0 
	end as CreditAmountForeign, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign * F105.ExchangeRate 
		when LEFT(F105.AccountCode, 2) in ('10','20','60') then F105.OpeningBalanceForeign * F105.ExchangeRate
			
		else 0 
	end as DebitAmountIDR, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign * F105.ExchangeRate 
		when LEFT(F105.AccountCode, 2) in ('30','40','50') then -F105.OpeningBalanceForeign * F105.ExchangeRate 
		 else 0 
	end as CreditAmountIDR, 
	 
	CAST(0 as signed)						as MutationAmountForeign, 
	CAST(0 as signed)						as MutationAmountIDR, 
	'Saldo Awal' 								as Detail, 
	CAST(0 as signed) 						as SaldoAmountForeign, 
	CAST(0 as signed) 						as SaldoAmountIDR 
	from F105 
	inner join F101 on F105.AccountCode = F101.Code 
	where 
	F101.Type = 'S' 		
	and 	
	F105.PeriodYear = year(prmFirstDate)
	and
	F105.BranchCode = prmBranchCode
	and
	LEFT(F105.AccountCode, 2) in ('10','20')
	)as qr1) 
	as qr2 where qr2.TransactionDate < prmFirstDate
	group By 
	qr2.AccountCode, 
	qr2.AccountName
	union all
	select 
	qr2.AccountCode, 
	qr2.AccountName,
	cast(0 as signed) as LastMonthIDR,
	sum(qr2.DebitamountIDR - qr2.CreditAmountIDR) as ThisMonthIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where 
	F401.PostingStatus = '1' 
	and
	F401.BranchCode = prmBranchCode
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	and
	left(F402.AccountCode,2) in ('10','20') 
	union All 
	select 
	CAST(''  as char)  			as VoucherNo, 
	prmFirstYearDate 			as TransactionDate, 
	CAST(''  as char)  			as RefNo, 
	CAST('1' as signed)			as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name 					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	'IDR' 						as CurrencyCode, 
	CAST('' as char) 			as CurrencyName, 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign 
		WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN F105.OpeningBalanceForeign 
		-- '10','20','60'
		-- '30','40','50'
		else 0 
	end as DebitAmountForeign, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign 
		WHEN LEFT(F105.AccountCode, 2) IN ('30','40','50') THEN -F105.OpeningBalanceForeign 
		else 0 
	end as CreditAmountForeign, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign * F105.ExchangeRate
		WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN F105.OpeningBalanceForeign * F105.ExchangeRate 
		else 0 
	end as DebitAmountIDR, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign * F105.ExchangeRate 
		WHEN LEFT(F105.AccountCode, 2) IN ('30','40','50') THEN -F105.OpeningBalanceForeign * F105.ExchangeRate 
		else 0 
	end as CreditAmountIDR, 
	 
	CAST(0 as signed)						as MutationAmountForeign, 
	CAST(0 as signed)						as MutationAmountIDR, 
	'Saldo Awal' 								as Detail, 
	CAST(0 as signed) 						as SaldoAmountForeign, 
	CAST(0 as signed) 						as SaldoAmountIDR 
	from F105 
	inner join F101 on F105.AccountCode = F101.Code 
	where 
	F101.Type = 'S' 		
	and 	
	F105.PeriodYear = year(prmFirstDate)
	and
	F105.BranchCode = prmBranchCode
	and
	LEFT(F105.AccountCode, 2) in ('10','20')
	)as qr1) 
	as qr2 where qr2.TransactionDate <= prmLastDate
	group By 
	qr2.AccountCode, 
	qr2.AccountName
	) as qr3
	group by 
	qr3.AccountCode, 
	qr3.AccountName
	union all
	select 
	qr3.AccountCode,
	qr3.AccountName,
	-sum(qr3.LastMonthIDR) as LastMonthIDR,
	-sum(qr3.ThisMonthIDR) as ThisMonthIDR from(
	select 
	qr2.AccountCode, 
	qr2.AccountName,
	sum(qr2.DebitamountIDR - qr2.CreditAmountIDR) as LastMonthIDR,
	cast(0 as signed) as ThisMonthIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where 
	F401.PostingStatus = '1' 
	and
	F401.BranchCode = prmBranchCode
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	and
	left(F402.AccountCode,2) in ('30','40', '50') 
	union All 
	select 
	CAST(''  as char)  			as VoucherNo, 
	prmFirstYearDate 					as TransactionDate, 
	CAST(''  as char)  			as RefNo, 
	CAST('1' as signed)			as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name 					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	'IDR' 						as CurrencyCode, 
	CAST('' as char) 			as CurrencyName, 
	case 
	-- '10','20','60'
		-- '30','40','50'
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign 
		WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN F105.OpeningBalanceForeign 
		else 0 
	end as DebitAmountForeign, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign 
		WHEN LEFT(F105.AccountCode, 2) IN ('30','40','50') THEN -F105.OpeningBalanceForeign 
		else 0 
	end as CreditAmountForeign, 
	 
	case 
	-- '10','20','60'
		-- '30','40','50'
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign * F105.ExchangeRate 
		WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN F105.OpeningBalanceForeign * F105.ExchangeRate
		else 0 
	end as DebitAmountIDR, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign * F105.ExchangeRate 
		WHEN LEFT(F105.AccountCode, 2) IN ('30','40','50') THEN -F105.OpeningBalanceForeign * F105.ExchangeRate
		else 0 
	end as CreditAmountIDR, 
	 
	CAST(0 as signed)						as MutationAmountForeign, 
	CAST(0 as signed)						as MutationAmountIDR, 
	'Saldo Awal' 								as Detail, 
	CAST(0 as signed) 						as SaldoAmountForeign, 
	CAST(0 as signed) 						as SaldoAmountIDR 
	from F105 
	inner join F101 on F105.AccountCode = F101.Code 
	where 
	F101.Type = 'S' 		
	and 	
	F105.PeriodYear = year(prmFirstDate)
	and
	F105.BranchCode = prmBranchCode
	and
	LEFT(F105.AccountCode, 2) in ('30','40', '50')
	)as qr1) 
	as qr2 
	where 
	qr2.TransactionDate < prmFirstDate
	group By 
	qr2.AccountCode, 
	qr2.AccountName
	union all
	select 
	qr2.AccountCode, 
	qr2.AccountName,
	cast(0 as signed) as LastMonthIDR,
	sum(qr2.DebitamountIDR - qr2.CreditAmountIDR) as ThisMonthIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where 
	F401.PostingStatus = '1' 
	and
	F401.BranchCode = prmBranchCode
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	and
	left(F402.AccountCode,2) in ('30','40', '50') 
	union All 
	select 
	CAST(''  as char)  			as VoucherNo, 
	prmFirstYearDate 					as TransactionDate, 
	CAST(''  as char)  			as RefNo, 
	CAST('1' as signed)			as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name 					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	'IDR' 						as CurrencyCode, 
	CAST('' as char) 			as CurrencyName, 
	case 
	-- '10','20','60'
		-- '30','40','50'
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign 
		WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN F105.OpeningBalanceForeign 
		else 0 
	end as DebitAmountForeign, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign 
		WHEN LEFT(F105.AccountCode, 2) IN ('30','40','50') THEN -F105.OpeningBalanceForeign 
		else 0 
	end as CreditAmountForeign, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign * F105.ExchangeRate 
		WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN F105.OpeningBalanceForeign * F105.ExchangeRate 
		else 0 
	end as DebitAmountIDR, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign * F105.ExchangeRate 
		WHEN LEFT(F105.AccountCode, 2) IN ('30','40','50') THEN -F105.OpeningBalanceForeign * F105.ExchangeRate 
		else 0 
	end as CreditAmountIDR, 
	 
	CAST(0 as signed)						as MutationAmountForeign, 
	CAST(0 as signed)						as MutationAmountIDR, 
	'Saldo Awal' 								as Detail, 
	CAST(0 as signed) 						as SaldoAmountForeign, 
	CAST(0 as signed) 						as SaldoAmountIDR 
	from F105 
	inner join F101 on F105.AccountCode = F101.Code 
	where 
	F101.Type = 'S' 		
	and 	
	F105.PeriodYear = year(prmFirstDate)
	and
	F105.BranchCode = prmBranchCode
	and
	LEFT(F105.AccountCode, 2) in ('30','40', '50')
	)as qr1) 
	as qr2 
	where 
	qr2.TransactionDate <= prmLastDate
	group By 
	qr2.AccountCode, 
	qr2.AccountName
	) as qr3
	group by 
	qr3.AccountCode, 
	qr3.AccountName
	union all
	select 
	qr3.AccountCode, 
	qr3.AccountName,
	sum(qr3.LastMonthIDR)  as LastMonthIDR,
	sum(qr3.ThisMonthIDR)  as ThisMonthIDR
	from(
	select 
	'Retained Earning' as AccountCode, 
	'Retained Earning' as AccountName,
	-sum(qr2.DebitamountIDR - qr2.CreditAmountIDR)  as LastMonthIDR,
	Cast(0 as signed) 			as ThisMonthIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where 
	F401.PostingStatus = '1' 
	and
	F401.BranchCode = prmBranchCode
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	and
	-- '10','20','60'
		-- '30','40','50'
	-- left(F402.AccountCode,2) in ('06','07','08','09','10','11','12') 
	LEFT(F402.AccountCode,2) IN ('40','50','60')
	 
	union All 
	 
	select 
	CAST(''  as char)  			as VoucherNo, 
	prmFirstYearDate 					as TransactionDate, 
	CAST(''  as char)  			as RefNo, 
	CAST('1' as signed)			as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name 					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	'IDR' 						as CurrencyCode, 
	CAST('' as char) 			as CurrencyName, 
	case 
	-- '10','20','60'
		-- '30','40','50'
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign 
		WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN F105.OpeningBalanceForeign 
		else 0 
	end as DebitAmountForeign, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign 
		when LEFT(F105.AccountCode, 2) in ('30','40','50') then -F105.OpeningBalanceForeign
		else 0 
	end as CreditAmountForeign, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign * F105.ExchangeRate 
		WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN F105.OpeningBalanceForeign * F105.ExchangeRate 
		else 0 
	end as DebitAmountIDR, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign * F105.ExchangeRate 
		when LEFT(F105.AccountCode, 2) in ('30','40','50') then -F105.OpeningBalanceForeign * F105.ExchangeRate
		else 0 
	end as CreditAmountIDR, 
	 
	CAST(0 as signed)						as MutationAmountForeign, 
	CAST(0 as signed)						as MutationAmountIDR, 
	'Saldo Awal' 								as Detail, 
	CAST(0 as signed) 						as SaldoAmountForeign, 
	CAST(0 as signed) 						as SaldoAmountIDR 
	from F105 
	inner join F101 on F105.AccountCode = F101.Code 
	where 
	F101.Type = 'S' 		
	and 	
	F105.PeriodYear = year(prmFirstDate) 
	and
	F105.BranchCode = prmBranchCode
	and
	-- '10','20','60'
		-- '30','40','50'
	-- LEFT(F105.AccountCode, 2) in ('06','07','08','09','10','11','12')
	LEFT(F105.AccountCode, 2) IN ('40','50','60')
	)as qr1) 
	as qr2 
	where 
	qr2.TransactionDate < prmFirstDate
	union all
	select 
	'Retained Earning' as AccountCode, 
	'Retained Earning' as AccountName,
	Cast(0 as signed) 			as LastMonthIDR,
	-sum(qr2.DebitamountIDR - qr2.CreditAmountIDR)  as ThisMonthIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where 
	F401.PostingStatus = '1' 
	and
	F401.BranchCode = prmBranchCode
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	and
	-- left(F402.AccountCode,2) in ('06','07','08','09','10','11','12') 
	LEFT(F402.AccountCode,2) IN ('40','50','60')
	 
	union All 
	 
	select 
	CAST(''  as char)  			as VoucherNo, 
	prmFirstYearDate 					as TransactionDate, 
	CAST(''  as char)  			as RefNo, 
	CAST('1' as signed)			as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name 					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	'IDR' 						as CurrencyCode, 
	CAST('' as char) 			as CurrencyName, 
	case 
	-- '10','20','60'
		-- '30','40','50'
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign 
		WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN F105.OpeningBalanceForeign
		else 0 
	end as DebitAmountForeign, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign 
		WHEN LEFT(F105.AccountCode, 2) IN ('30','40','50') THEN -F105.OpeningBalanceForeign 
		else 0 
	end as CreditAmountForeign, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign * F105.ExchangeRate 
		WHEN LEFT(F105.AccountCode, 2) IN ('10','20','60') THEN F105.OpeningBalanceForeign * F105.ExchangeRate
		else 0 
	end as DebitAmountIDR, 
	 
	case 
		-- when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign * F105.ExchangeRate 
		WHEN LEFT(F105.AccountCode, 2) IN ('30','40','50') THEN -F105.OpeningBalanceForeign * F105.ExchangeRate
		else 0 
	end as CreditAmountIDR, 
	 
	CAST(0 as signed)						as MutationAmountForeign, 
	CAST(0 as signed)						as MutationAmountIDR, 
	'Saldo Awal' 								as Detail, 
	CAST(0 as signed) 						as SaldoAmountForeign, 
	CAST(0 as signed) 						as SaldoAmountIDR 
	from F105 
	inner join F101 on F105.AccountCode = F101.Code 
	where 
	F101.Type = 'S' 		
	and 	
	F105.PeriodYear = year(prmFirstDate)
	and
	F105.BranchCode = prmBranchCode
	and
	-- LEFT(F105.AccountCode, 2) in ('06','07','08','09','10','11','12')
	LEFT(F105.AccountCode, 2) IN ('40','50','60')
	)as qr1) 
	as qr2 
	where 
	qr2.TransactionDate <= prmLastDate
	) as qr3 group By qr3.AccountCode, qr3.AccountName
	) as qr4 order by qr4.AccountCode ;
	END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_BBKNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_BBKNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_BBKNo_get`(
	prmBranchCode VARCHAR(50),
	prmBBKNo VARCHAR(50)
)
BEGIN
		SELECT  
			F507.BranchCode, 
			F001.Name AS BranchName,
			F507.BBKNo,
			F507.BBKTo,
			F507.RefNo,
			F507.TransactionDate,
			F507.BankAccountCode,
			f101.Name AS BankAccountName,
			F507.SupplierCode,
			F109.Name AS SupplierName,
			F507.CurrencyCode,
			F006.Name AS CurrencyName,
			F508.BudgetTypeCode,
			f103.Name AS BudgetTypeName,
			f103.AccountCode AS AccountCode,
			f103.Name,
			F508.DocumentNo,
			F508.Description,
			F508.Amount,
			F507.TotalTransactionAmount			
		FROM F507
			INNER JOIN f101 ON F507.BankAccountCode = f101.Code
            INNER JOIN F001 ON F507.BranchCode = F001.Code
			INNER JOIN F109 ON F507.SupplierCode = F109.Code
			INNER JOIN F006 ON F507.CurrencyCode = F006.Code
			INNER JOIN F508 ON F507.BBKNo = F508.BBKNo
			INNER JOIN f103 ON F508.BudgetTypeCode = f103.Code 
			
		WHERE 
			F507.BBKNo like prmBBKNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_BBMNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_BBMNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_BBMNo_get`(
	-- prmBranchCode VARCHAR(50),
	prmBBMNo VARCHAR(50)
)
BEGIN
		SELECT
			F503.BranchCode,
			-- F001.Name AS BranchName,
			F503.BBMNo,
			F503.TransactionDate AS DATE,
			F503.RefNo,
			F503.CustomerCode,
			f607.WarehouseCode AS BlockUnit,
			f607.Description,
			F106.Name AS CustomerName,
			F503.CurrencyCode,
			-- F006.Name AS CurrencyName,
			F503.BankAccountCode,
			f101.Name AS BankAccountName,
			F504.Amount,
			F504.DPP_PPN_Status,
			F503.TotalTransactionAmount,
			F504.DocumentNo,
			f503.Terbilang,
			F607.PackingFeeAfterPPN++f607.fbill_ppj+F607.OtherFeeBeforePPN+F607.TotalTransaction+
			F607.PPh23FeeAfterPPN+F607.PPNAmount	AS ARBalance,
			f607.PaidAmount
	FROM
		F503
			INNER JOIN F504 ON F503.BBMNo = F504.BBMNo
			-- Inner Join F001 On F503.BranchCode = F001.Code
			INNER JOIN F106 ON F503.CustomerCode = F106.Code
			-- Inner Join F006 On F503.CurrencyCode = F006.Code
			INNER JOIN f101 ON F503.BankAccountCode = f101.Code
			INNER JOIN f607 ON F504.DocumentNo = f607.INVNo
	WHERE
		F503.BBMNo Like prmBBMNo; 	
		
            
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_BillElectricWater_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_BillElectricWater_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_BillElectricWater_get`(
   -- IN prmBranchCode VARCHAR(50),
     --  IN prmRefNo VARCHAR(50)
   -- IN prmSODNo varchar(50),
   -- IN prmCustomerName varchar(100),
   -- IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT Qry1.BillType,  
	  Qry1.INVNo,
		Qry1.TransactionDate,
		Qry1.PrintDate,
	     Qry1.RefNo,
	Qry1.RefDate,
	Qry1.SODNo,
	Qry1.ftradeName,
	Qry1.funit_type,
	Qry1.funit_name,
	Qry1.fkva_no,
	Qry1.fkva_daya,
	-- Qry1.fVirAcc_Owner,
	-- Qry1.fVirAcc_Tenan,
	Qry1.fstatuskios,
	Qry1.fPhase,	
	Qry1.fgolongan,
	Qry1.frp_bulanan,
	Qry1.fjam_rm,
	Qry1.frp_rm,
	Qry1.frp_h1,
	Qry1.ftarif,
	Qry1.CustomerCode,
	F106.NAME AS CustomerName,
	f106.ContactPerson AS CustomerContactPerson,
	f106.Address AS CustomerAddress,
	 Qry1.WarehouseCode,
	 Qry1.funit_sqm,
	 Qry1.funit_long,
	 Qry1.funit_width,
	 Qry1.fkva_code,
	 Qry1.fkva_tariff,
	 Qry1.fkva_load,
	 Qry1.FromDate,
	 Qry1.ToDate,
	 Qry1.StartMeter,
	 Qry1.FinishMeter,
	 Qry1.TotalTransaction,
	Qry1.MinimumFeeBeforePPN,
	Qry1.AbonemenBeforePPN,
	Qry1.AdminBeforePPN,
	Qry1.PJBBeforePPN,
	Qry1.PPNAmount,
	Qry1.PPh23FeeAfterPPN,
Qry1.GrandTotal,
Qry1.PaidAmount,
	 Qry1.ItemCode,
	 Qry1.ItemAlias,
	 
	 Qry1.Description,
	 Qry1.Quantity,
	 Qry1.Price,
	 Qry1.Total,
	Qry1.TenancyCode,
	 Qry1.flower,
	 Qry1.fupper,
	 Qry1.furut,
	 Qry1.CreatedBy,
	 Qry1.CreatedDate,
	 Qry1.UpdatedBy,
	 Qry1.UpdatedDate,
	 0 AS PrevBalance,
	 '' AS TerbilangText
 FROM(
     	  SELECT 
	  'ELECTRICITY' AS BillType,  
	  f611.INVNo,
		f611.TransactionDate,
		f611.PrintDate,
	     f611.RefNo,
	f611.RefDate,
	f611.SODNo,
	f048.ftrade_name AS ftradeName,
	f048.funit_type,
	f048.funit_name,
	f048.fkva_no,
	f048.fkva_daya,	
	-- f048.fVirAcc_Owner,
	-- f048.fVirAcc_Tenan,
	f048.fstatuskios,
	f611.fPhase,
	f042.fgolongan,
	f042.frp_bulanan,
	f042.fjam_rm,
	f042.frp_rm,
	f042.frp_h1,
	0 AS ftarif,
	f611.CustomerCode,
	 f611.WarehouseCode,
	 f611.funit_sqm,
	 f611.funit_long,
	 f611.funit_width,
	 f611.fkva_code,
	 f611.fkva_tariff,
	 f611.fkva_load,
	 f611.FromDate,
	 f611.ToDate,
	 f611.StartMeter,
	 f611.FinishMeter,
	 f611.TotalTransaction,
		f611.MinimumFeeBeforePPN,
		f611.AbonemenBeforePPN,
		f611.AdminBeforePPN,
		f611.PJBBeforePPN,
		f611.PPNAmount,
		f611.PPh23FeeAfterPPN,
		f611.GrandTotal,
		f611.PaidAmount,
	 f612.ItemCode,
	 f612.ItemAlias,
 
 f612.Description,
 f612.Quantity,
 f612.Price,
 f612.Total,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
INNER JOIN f042 ON  f048.fkva_code = f042.fkva_code
WHERE
    f611.WarehouseCode='ELC'
   -- AND f611.RefNo = 'INV-S/MP/I/2012/00000001'
   UNION ALL
    SELECT 
	  'WATER' AS BillType,  
	  f611.INVNo,
		f611.TransactionDate,
		f611.PrintDate,
	     f611.RefNo,
	f611.RefDate,
	f611.SODNo,
	f048.ftrade_name AS ftradeName,
	f048.funit_type,
	f048.funit_name,
	f048.fkva_no,
	f048.fkva_daya,	
	-- f048.fVirAcc_Owner,
	-- f048.fVirAcc_Tenan,
	f048.fstatuskios,
	f611.fPhase,
	'' AS fgolongan,
	f044.frp_bulanan,
	0 AS fjam_rm,
	0 AS frp_rm,
	0 AS frp_h1,
	0 AS ftarif,
	f611.CustomerCode,
	 f611.WarehouseCode,
	 f611.funit_sqm,
	 f611.funit_long,
	 f611.funit_width,
	 f611.fkva_code,
	 f611.fkva_tariff,
	 f611.fkva_load,
	 f611.FromDate,
	 f611.ToDate,
	 f611.StartMeter,
	 f611.FinishMeter,
	 f611.TotalTransaction,
		f611.MinimumFeeBeforePPN,
		f611.AbonemenBeforePPN,
		f611.AdminBeforePPN,
		f611.PJBBeforePPN,
		f611.PPNAmount,
		f611.PPh23FeeAfterPPN,
		f611.GrandTotal,
		f611.PaidAmount,
	 f612.ItemCode,
	 f612.ItemAlias,
 
 f612.Description,
 f612.Quantity,
 f612.Price,
 f612.Total,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
INNER JOIN f044 ON  f048.fwtr_code = f044.fwtr_code
WHERE
    f611.WarehouseCode='WTR'
   -- AND f611.RefNo = 'INV-S/MP/I/2012/00000001'
    )AS Qry1
      INNER JOIN f106 ON Qry1.CustomerCode = f106.Code
      -- WHERE Qry1.RefNo= prmRefNo
      -- ORDER BY BillType
      
;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_BillElectric_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_BillElectric_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_BillElectric_get`(
   -- IN prmBranchCode VARCHAR(50),
     --  IN prmRefNo VARCHAR(50)
   -- IN prmSODNo varchar(50),
   -- IN prmCustomerName varchar(100),
   -- IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT Qry1.BillType,  
	  Qry1.INVNo,
		Qry1.TransactionDate,
		Qry1.PrintDate,
	     Qry1.RefNo,
	Qry1.RefDate,
	Qry1.SODNo,
	Qry1.ftradeName,
	Qry1.funit_type,
	Qry1.funit_name,
	Qry1.fkva_no,
	Qry1.fkva_daya,
	-- Qry1.fVirAcc_Owner,
	-- Qry1.fVirAcc_Tenan,
	Qry1.fstatuskios,
	Qry1.fPhase,	
	Qry1.fgolongan,
	Qry1.frp_bulanan,
	Qry1.fjam_rm,
	Qry1.frp_rm,
	Qry1.frp_h1,
	Qry1.ftarif,
	Qry1.CustomerCode,
	F106.NAME AS CustomerName,
	f106.ContactPerson AS CustomerContactPerson,
	f106.Address AS CustomerAddress,
	 Qry1.WarehouseCode,
	 Qry1.funit_sqm,
	 Qry1.funit_long,
	 Qry1.funit_width,
	 Qry1.fkva_code,
	 Qry1.fkva_tariff,
	 Qry1.fkva_load,
	 Qry1.FromDate,
	 Qry1.ToDate,
	 Qry1.StartMeter,
	 Qry1.FinishMeter,
	 Qry1.TotalTransaction,
	Qry1.MinimumFeeBeforePPN,
	Qry1.AbonemenBeforePPN,
	Qry1.AdminBeforePPN,
	Qry1.PJBBeforePPN,
	Qry1.PPNAmount,
	Qry1.PPh23FeeAfterPPN,
Qry1.GrandTotal,
Qry1.PaidAmount,
	 Qry1.ItemCode,
	 Qry1.ItemAlias,
	 
	 Qry1.Description,
	 Qry1.Quantity,
	 Qry1.Price,
	 Qry1.Total,
	Qry1.TenancyCode,
	 Qry1.flower,
	 Qry1.fupper,
	 Qry1.furut,
	 Qry1.CreatedBy,
	 Qry1.CreatedDate,
	 Qry1.UpdatedBy,
	 Qry1.UpdatedDate,
	 0 AS PrevBalance,
	 '' AS TerbilangText
 FROM(
     	  SELECT 
	  'ELECTRICITY' AS BillType,  
	  f611.INVNo,
		f611.TransactionDate,
		f611.PrintDate,
	     f611.RefNo,
	f611.RefDate,
	f611.SODNo,
	f048.ftrade_name AS ftradeName,
	f048.funit_type,
	f048.funit_name,
	f048.fkva_no,
	f048.fkva_daya,	
	-- f048.fVirAcc_Owner,
	-- f048.fVirAcc_Tenan,
	f048.fstatuskios,
	f611.fPhase,
	f042.fgolongan,
	f042.frp_bulanan,
	f042.fjam_rm,
	f042.frp_rm,
	f042.frp_h1,
	0 AS ftarif,
	f611.CustomerCode,
	 f611.WarehouseCode,
	 f611.funit_sqm,
	 f611.funit_long,
	 f611.funit_width,
	 f611.fkva_code,
	 f611.fkva_tariff,
	 f611.fkva_load,
	 f611.FromDate,
	 f611.ToDate,
	 f611.StartMeter,
	 f611.FinishMeter,
	 f611.TotalTransaction,
		f611.MinimumFeeBeforePPN,
		f611.AbonemenBeforePPN,
		f611.AdminBeforePPN,
		f611.PJBBeforePPN,
		f611.PPNAmount,
		f611.PPh23FeeAfterPPN,
		f611.GrandTotal,
		f611.PaidAmount,
	 f612.ItemCode,
	 f612.ItemAlias,
 
 f612.Description,
 f612.Quantity,
 f612.Price,
 f612.Total,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
INNER JOIN f042 ON  f048.fkva_code = f042.fkva_code
WHERE
    f611.WarehouseCode='ELC'
   -- AND f611.RefNo = 'INV-S/MP/I/2012/00000001'
  
    )AS Qry1
      INNER JOIN f106 ON Qry1.CustomerCode = f106.Code
      -- WHERE Qry1.RefNo= prmRefNo
      -- ORDER BY BillType
      
;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_BILLING_ELC_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_BILLING_ELC_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_BILLING_ELC_get`(
   -- IN prmBranchCode VARCHAR(50),
      IN prmRefNo VARCHAR(50)
   -- IN prmSODNo varchar(50),
   -- IN prmCustomerName varchar(100),
   -- IN prmCurrencyCode varchar(50)
)
BEGIN
   SELECT 
	  'REKENING LISTRIK' AS BillType,  
  f611.INVNo,
	f611.TransactionDate,
     f611.RefNo,
f611.RefDate,
f611.SODNo,
f048.ftrade_name AS ftradeName,
f048.funit_type,
f048.funit_name,
f048.fkva_no,
f048.fkva_daya,	
f042.fgolongan,
f042.frp_bulanan,
f043.ftarif,
f611.CustomerCode,
 f611.WarehouseCode,
 f611.funit_sqm,
 f611.funit_long,
 f611.funit_width,
 f611.fkva_code,
 f611.fkva_tariff,
 f611.fkva_load,
 f611.FromDate,
 f611.ToDate,
 f611.StartMeter,
 f611.FinishMeter,
	
 f612.ItemCode,
 f612.ItemAlias,
 
 'Biaya Beban' AS Description,
 f612.Quantity,
 f612.Price,
 f612.Total,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
INNER JOIN f042 ON  f048.fkva_code = f042.fkva_code
INNER JOIN f043 ON  f042.fkva_code = f043.fkva_code
WHERE
    f611.WarehouseCode='ELC'
    AND f611.RefNo = prmRefNo
    AND f612.furut=06
    UNION ALL
SELECT 
	  'REKENING LISTRIK' AS BillType,  
  f611.INVNo,
	f611.TransactionDate,
     f611.RefNo,
f611.RefDate,
f611.SODNo,
f048.ftrade_name AS ftradeName,
f048.funit_type,
f048.funit_name,
f048.fkva_no,
f048.fkva_daya,	
f042.fgolongan,
f042.frp_bulanan,
f043.ftarif,
f611.CustomerCode,
 f611.WarehouseCode,
 f611.funit_sqm,
 f611.funit_long,
 f611.funit_width,
 f611.fkva_code,
 f611.fkva_tariff,
 f611.fkva_load,
 f611.FromDate,
 f611.ToDate,
 f611.StartMeter,
 f611.FinishMeter,
	
 f612.ItemCode,
 f612.ItemAlias,
 
 'Biaya Pemakaian' AS Description,
 f612.Quantity,
 f612.Price,
 SUM(f612.Total) AS Total,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
INNER JOIN f042 ON  f048.fkva_code = f042.fkva_code
INNER JOIN f043 ON  f042.fkva_code = f043.fkva_code
WHERE
    f611.WarehouseCode='ELC'
    AND f611.RefNo = prmRefNo
    AND f612.furut>=07 AND f612.furut<=09
    GROUP BY F612.ItemCode , f042.fkva_code
    UNION ALL
        SELECT 
	  'REKENING LISTRIK' AS BillType,  
  f611.INVNo,
	f611.TransactionDate,
     f611.RefNo,
f611.RefDate,
f611.SODNo,
f048.ftrade_name AS ftradeName,
f048.funit_type,
f048.funit_name,
f048.fkva_no,
f048.fkva_daya,	
f042.fgolongan,
f042.frp_bulanan,
f043.ftarif,
f611.CustomerCode,
 f611.WarehouseCode,
 f611.funit_sqm,
 f611.funit_long,
 f611.funit_width,
 f611.fkva_code,
 f611.fkva_tariff,
 f611.fkva_load,
 f611.FromDate,
 f611.ToDate,
 f611.StartMeter,
 f611.FinishMeter,
	
 f612.ItemCode,
 f612.ItemAlias,
 
 'PPJ' AS Description,
 0 AS Quantity,
 f612.Total AS Price,
 f612.Total,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
INNER JOIN f042 ON  f048.fkva_code = f042.fkva_code
INNER JOIN f043 ON  f042.fkva_code = f043.fkva_code
WHERE
    f611.WarehouseCode='ELC'
    AND f611.RefNo = prmRefNo
    AND f612.furut=13
    UNION ALL
    SELECT 
	  'REKENING LISTRIK' AS BillType,  
  f611.INVNo,
	f611.TransactionDate,
     f611.RefNo,
f611.RefDate,
f611.SODNo,
f048.ftrade_name AS ftradeName,
f048.funit_type,
f048.funit_name,
f048.fkva_no,
f048.fkva_daya,	
f042.fgolongan,
f042.frp_bulanan,
f043.ftarif,
f611.CustomerCode,
 f611.WarehouseCode,
 f611.funit_sqm,
 f611.funit_long,
 f611.funit_width,
 f611.fkva_code,
 f611.fkva_tariff,
 f611.fkva_load,
 f611.FromDate,
 f611.ToDate,
 f611.StartMeter,
 f611.FinishMeter,
	
 f612.ItemCode,
 f612.ItemAlias,
 
 'Biaya Administrasi' AS Description,
 0 AS Quantity,
 f612.Total AS Price,
 f612.Total,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
INNER JOIN f042 ON  f048.fkva_code = f042.fkva_code
INNER JOIN f043 ON  f042.fkva_code = f043.fkva_code
WHERE
    f611.WarehouseCode='ELC'
    AND f611.RefNo = prmRefNo
    AND f612.furut=10
    UNION ALL 
    SELECT 
	  'REKENING LISTRIK' AS BillType,  
  f611.INVNo,
	f611.TransactionDate,
     f611.RefNo,
f611.RefDate,
f611.SODNo,
f048.ftrade_name AS ftradeName,
f048.funit_type,
f048.funit_name,
f048.fkva_no,
f048.fkva_daya,	
f042.fgolongan,
f042.frp_bulanan,
f043.ftarif,
f611.CustomerCode,
 f611.WarehouseCode,
 f611.funit_sqm,
 f611.funit_long,
 f611.funit_width,
 f611.fkva_code,
 f611.fkva_tariff,
 f611.fkva_load,
 f611.FromDate,
 f611.ToDate,
 f611.StartMeter,
 f611.FinishMeter,
	
 f612.ItemCode,
 f612.ItemAlias,
 
 'PPN' AS Description,
 0 AS Quantity,
 0 AS Price,
 f612.Total,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
INNER JOIN f042 ON  f048.fkva_code = f042.fkva_code
INNER JOIN f043 ON  f042.fkva_code = f043.fkva_code
WHERE
    f611.WarehouseCode='ELC'
    AND f611.RefNo = prmRefNo
    AND f612.furut=11
;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_BILLING_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_BILLING_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_BILLING_get`(
   -- IN prmBranchCode VARCHAR(50),
      IN prmRefNo VARCHAR(50)
   -- IN prmSODNo varchar(50),
   -- IN prmCustomerName varchar(100),
   -- IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT Qry1.BillType,  
  Qry1.INVNo,
	Qry1.TransactionDate,
     Qry1.RefNo,
Qry1.RefDate,
Qry1.SODNo,
Qry1.ftradeName,
Qry1.funit_type,
Qry1.funit_name,
Qry1.fkva_no,
Qry1.fkva_daya,
Qry1.fPhase,	
Qry1.fgolongan,
Qry1.frp_bulanan,
Qry1.ftarif,
Qry1.CustomerCode,
F106.NAME AS CustomerName,
 Qry1.WarehouseCode,
 Qry1.funit_sqm,
 Qry1.funit_long,
 Qry1.funit_width,
 Qry1.fkva_code,
 Qry1.fkva_tariff,
 Qry1.fkva_load,
 Qry1.FromDate,
 Qry1.ToDate,
 Qry1.StartMeter,
 Qry1.FinishMeter,
 Qry1.TotalTransaction,
	Qry1.MinimumFeeBeforePPN,
	Qry1.AbonemenBeforePPN,
	Qry1.AdminBeforePPN,
	Qry1.PJBBeforePPN,
	Qry1.PPNAmount,
	Qry1.PPh23FeeAfterPPN,
 Qry1.ItemCode,
 Qry1.ItemAlias,
 
 Qry1.Description,
 Qry1.Quantity,
 Qry1.Price,
 Qry1.Total,
Qry1.TenancyCode,
 Qry1.flower,
 Qry1.fupper,
 Qry1.furut,
 Qry1.CreatedBy,
 Qry1.CreatedDate,
 Qry1.UpdatedBy,
 Qry1.UpdatedDate
 FROM(
     	  SELECT 
	  'REKENING LISTRIK' AS BillType,  
  f611.INVNo,
	f611.TransactionDate,
     f611.RefNo,
f611.RefDate,
f611.SODNo,
f048.ftrade_name AS ftradeName,
f048.funit_type,
f048.funit_name,
f048.fkva_no,
f048.fkva_daya,	
f611.fPhase,
f042.fgolongan,
f042.frp_bulanan,
f043.ftarif,
f611.CustomerCode,
 f611.WarehouseCode,
 f611.funit_sqm,
 f611.funit_long,
 f611.funit_width,
 f611.fkva_code,
 f611.fkva_tariff,
 f611.fkva_load,
 f611.FromDate,
 f611.ToDate,
 f611.StartMeter,
 f611.FinishMeter,
 f611.TotalTransaction,
	f611.MinimumFeeBeforePPN,
	f611.AbonemenBeforePPN,
	f611.AdminBeforePPN,
	f611.PJBBeforePPN,
	f611.PPNAmount,
	f611.PPh23FeeAfterPPN,
 f612.ItemCode,
 f612.ItemAlias,
 
 f612.Description,
 f612.Quantity,
 f612.Price,
 f612.Total,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
INNER JOIN f042 ON  f048.fkva_code = f042.fkva_code
INNER JOIN f043 ON  f042.fkva_code = f043.fkva_code
WHERE
    f611.WarehouseCode='ELC'
    AND f611.RefNo = prmRefNo
   UNION ALL
   SELECT
 'REKENING AIR' AS BillType,  
  f611.INVNo,
	f611.TransactionDate,
     f611.RefNo,
f611.RefDate,
f611.SODNo,
f048.ftrade_name AS ftradeName,
f048.funit_type,
f048.funit_name,
f048.fkva_no,
f048.fkva_daya,
	0 AS fPhase,
'' AS fgolongan,
0 AS frp_bulanan,
f044.fminimum AS ftarif,
f611.CustomerCode,
 f611.WarehouseCode,
 f611.funit_sqm,
 f611.funit_long,
 f611.funit_width,
 f611.fkva_code,
 f611.fkva_tariff,
 f611.fkva_load,
 f611.FromDate,
 f611.ToDate,
 f611.StartMeter,
 f611.FinishMeter,
 f611.TotalTransaction,
	f611.MinimumFeeBeforePPN,
	f611.AbonemenBeforePPN,
	f611.AdminBeforePPN,
	f611.PJBBeforePPN,
	f611.PPNAmount,
	f611.PPh23FeeAfterPPN,
 f612.ItemCode,
 f612.ItemAlias,
 
 f612.Description,
 f612.Quantity,
 f612.Price,
 f612.Total,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
INNER JOIN f044 ON  f048.fwtr_code = f044.fwtr_code
WHERE
  f611.WarehouseCode='WTR'
  AND
   f611.RefNo = prmRefNo
   UNION ALL
   	  SELECT 
	  'SERVICE CHARGES' AS BillType,  
  f611.INVNo,
	f611.TransactionDate,
     f611.RefNo,
f611.RefDate,
f611.SODNo,
f048.ftrade_name AS ftradeName,
f048.funit_type,
f048.funit_name,
f048.fkva_no,
f048.fkva_daya,	
0 AS fPhase,
'' AS fgolongan,
0 AS frp_bulanan,
0 AS  ftarif,
f611.CustomerCode,
 f611.WarehouseCode,
 f611.funit_sqm,
 f611.funit_long,
 f611.funit_width,
 f611.fkva_code,
 f611.fkva_tariff,
 f611.fkva_load,
 f611.FromDate,
 f611.ToDate,
 f611.StartMeter,
 f611.FinishMeter,
 f611.TotalTransaction,
	f611.MinimumFeeBeforePPN,
	f611.AbonemenBeforePPN,
	f611.AdminBeforePPN,
	f611.PJBBeforePPN,
	f611.PPNAmount,
	f611.PPh23FeeAfterPPN,
 f612.ItemCode,
 f612.ItemAlias,
 
 f612.Description,
 f612.Quantity,
 f612.Price,
 f612.Total,
 -- f612.BiayaBeban,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
 INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
 -- INNER JOIN f042 ON  f048.fkva_code = f042.fkva_code 
 -- INNER JOIN f043 ON  f042.fkva_code = f043.fkva_code
WHERE
    f611.WarehouseCode<>'ELC' AND f611.WarehouseCode<>'WTR'
     AND f611.RefNo = prmRefNo
      )AS Qry1
      INNER JOIN f106 ON Qry1.CustomerCode = f106.Code
      
      
;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_BillWater_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_BillWater_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_BillWater_get`(
   -- IN prmBranchCode VARCHAR(50),
     --  IN prmRefNo VARCHAR(50)
   -- IN prmSODNo varchar(50),
   -- IN prmCustomerName varchar(100),
   -- IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT Qry1.BillType,  
	  Qry1.INVNo,
		Qry1.TransactionDate,
		Qry1.PrintDate,
	     Qry1.RefNo,
	Qry1.RefDate,
	Qry1.SODNo,
	Qry1.ftradeName,
	Qry1.funit_type,
	Qry1.funit_name,
	Qry1.fkva_no,
	Qry1.fkva_daya,
	-- Qry1.fVirAcc_Owner,
	-- Qry1.fVirAcc_Tenan,
	Qry1.fstatuskios,
	Qry1.fPhase,	
	Qry1.fgolongan,
	Qry1.frp_bulanan,
	Qry1.fjam_rm,
	Qry1.frp_rm,
	Qry1.frp_h1,
	Qry1.ftarif,
	Qry1.CustomerCode,
	F106.NAME AS CustomerName,
	f106.ContactPerson AS CustomerContactPerson,
	f106.Address AS CustomerAddress,
	 Qry1.WarehouseCode,
	 Qry1.funit_sqm,
	 Qry1.funit_long,
	 Qry1.funit_width,
	 Qry1.fkva_code,
	 Qry1.fkva_tariff,
	 Qry1.fkva_load,
	 Qry1.FromDate,
	 Qry1.ToDate,
	 Qry1.StartMeter,
	 Qry1.FinishMeter,
	 Qry1.TotalTransaction,
	Qry1.MinimumFeeBeforePPN,
	Qry1.AbonemenBeforePPN,
	Qry1.AdminBeforePPN,
	Qry1.PJBBeforePPN,
	Qry1.PPNAmount,
	Qry1.PPh23FeeAfterPPN,
Qry1.GrandTotal,
Qry1.PaidAmount,
	 Qry1.ItemCode,
	 Qry1.ItemAlias,
	 
	 Qry1.Description,
	 0 AS Price1,
		0 AS Price2,
		0 AS Price3,
		0 AS Total1,
		0 AS Total2,
		0 AS Total3,
	 Qry1.Quantity,
	 Qry1.Price,
	 Qry1.Total,
	Qry1.TenancyCode,
	 Qry1.flower,
	 Qry1.fupper,
	 Qry1.furut,
	 Qry1.CreatedBy,
	 Qry1.CreatedDate,
	 Qry1.UpdatedBy,
	 Qry1.UpdatedDate,
	 0 AS PrevBalance,
	 '' AS TerbilangText
 FROM(
     	  
    SELECT 
	  'WATER' AS BillType,  
	  f611.INVNo,
		f611.TransactionDate,
		f611.PrintDate,
	     f611.RefNo,
	f611.RefDate,
	f611.SODNo,
	f048.ftrade_name AS ftradeName,
	f048.funit_type,
	f048.funit_name,
	f048.fkva_no,
	f048.fkva_daya,	
	-- f048.fVirAcc_Owner,
	-- f048.fVirAcc_Tenan,
	f048.fstatuskios,
	f611.fPhase,
	'' AS fgolongan,
	f044.frp_bulanan,
	0 AS fjam_rm,
	0 AS frp_rm,
	0 AS frp_h1,
	0 AS ftarif,
	f611.CustomerCode,
	 f611.WarehouseCode,
	 f611.funit_sqm,
	 f611.funit_long,
	 f611.funit_width,
	 f611.fkva_code,
	 f611.fkva_tariff,
	 f611.fkva_load,
	 f611.FromDate,
	 f611.ToDate,
	 f611.StartMeter,
	 f611.FinishMeter,
	 f611.TotalTransaction,
		f611.MinimumFeeBeforePPN,
		f611.AbonemenBeforePPN,
		f611.AdminBeforePPN,
		f611.PJBBeforePPN,
		f611.PPNAmount,
		f611.PPh23FeeAfterPPN,
		f611.GrandTotal,
		f611.PaidAmount,
	 f612.ItemCode,
	 f612.ItemAlias,
 
 f612.Description,
 f612.Quantity,
 f612.Price,
 f612.Total,
  f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
  INNER JOIN f048 ON f611.SODNo = f048.funit_code	
INNER JOIN f044 ON  f048.fwtr_code = f044.fwtr_code
WHERE
    f611.WarehouseCode='WTR'
   -- AND f611.RefNo = 'INV-S/MP/I/2012/00000001'
    )AS Qry1
      INNER JOIN f106 ON Qry1.CustomerCode = f106.Code
      -- ORDER BY BillType
     
     
      
      
;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_BKKNo_ap_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_BKKNo_ap_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_BKKNo_ap_get`(
	prmBranchCode VARCHAR(50),
	prmBKKNo VARCHAR(50)
)
BEGIN
		SELECT  
			F505_ap.BranchCode, 
			F001.Name As BranchName,
			F505_ap.BKKNo,
			F505_ap.BKKTo,
			F505_ap.RefNo,
			F505_ap.TransactionDate,
			F505_ap.CashTypeCode,
			F104.Name as CashTypeName,
			F505_ap.SupplierCode,
			F109.Name as SupplierName,
			F505_ap.CurrencyCode,
			F006.Name as CurrencyName,
			F506_ap.BudgetTypeCode,
			F011.Name,
			F506_ap.DocumentNo,
			F506_ap.Description,
			F506_ap.Amount,
			F505_ap.TotalTransactionAmount			
		FROM F505_ap
			Inner Join F104 On F505_ap.CashTypeCode = F104.Code
            Inner Join F001 On F505_ap.BranchCode = F001.Code
			INNER JOIN F109 on F505_ap.SupplierCode = F109.Code
			Inner Join F006 On F505_ap.CurrencyCode = F006.Code
			INNER JOIN F506_ap ON F505_ap.BKKNo = F506_ap.BKKNo
			Inner Join F011 On F506_ap.BudgetTypeCode = F011.Code 
			
		WHERE 
			F505_ap.BKKNo like prmBKKNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_BKKNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_BKKNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_BKKNo_get`(
	prmBranchCode VARCHAR(50),
	prmBKKNo VARCHAR(50)
)
BEGIN
		SELECT  
			F505.BranchCode, 
			F001.Name As BranchName,
			F505.BKKNo,
			F505.BKKTo,
			F505.RefNo,
			F505.TransactionDate,
			F505.CashTypeCode,
			f101.Name as CashTypeName,
			F505.SupplierCode,
			F109.Name as SupplierName,
			F505.CurrencyCode,
			F006.Name as CurrencyName,
			F506.BudgetTypeCode,
			f103.Name,
			F506.DocumentNo,
			F506.Description,
			F506.Amount,
			F505.TotalTransactionAmount			
		FROM F505
			Inner Join f101 On F505.CashTypeCode = f101.Code
            Inner Join F001 On F505.BranchCode = F001.Code
			INNER JOIN F109 on F505.SupplierCode = F109.Code
			Inner Join F006 On F505.CurrencyCode = F006.Code
			INNER JOIN F506 ON F505.BKKNo = F506.BKKNo
			Inner Join f103 On F506.BudgetTypeCode = f103.Code 
			
		WHERE 
			F505.BKKNo like prmBKKNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_BKMNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_BKMNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_BKMNo_get`(
	-- prmBranchCode VARCHAR(50),
	prmBKMNo VARCHAR(50)
)
BEGIN
		SELECT  
			F501.BranchCode, 
          --   F001.Name As BranchName,
			F501.BKMNo,
			F501.BKMFrom,
			F501.RefNo,
			f607.WarehouseCode as BlockUnit,
			f607.Description,
			F501.TransactionDate,
			F501.CashTypeCode,
			f101.Name as CashTypeName,
			F501.CustomerCode,
			F106.Name as CustomerName,
			F501.CurrencyCode,
			-- F006.Name as CurrencyName,
			F502.BudgetTypeCode,
			-- F011.Name,
			F502.DocumentNo,
			F502.Description,
			F502.Amount,
			F502.DPP_PPN_Status,
			F501.TotalTransactionAmount,
			f501.Terbilang,
			F607.PackingFeeAfterPPN++f607.fbill_ppj+F607.OtherFeeBeforePPN+F607.TotalTransaction+
			F607.PPh23FeeAfterPPN+F607.PPNAmount	AS ARBalance,
			f607.PaidAmount
		FROM F501
			INNER JOIN f101 ON F501.CashTypeCode = f101.Code
            -- Inner Join F001 On F501.BranchCode = F001.Code
			INNER JOIN F106 ON F501.CustomerCode = F106.Code
			-- Inner Join F006 On F501.CurrencyCode = F006.Code
			INNER JOIN F502 ON F501.BKMNo = F502.BKMNo
			-- Inner Join F011 On F502.BudgetTypeCode = F011.Code 
			INNER JOIN f607 ON F502.DocumentNo = f607.INVNo
			
		WHERE 
			F501.BKMNo like prmBKMNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_BlockUnitInfo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_BlockUnitInfo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_BlockUnitInfo_get`(
      in prmfunit_code varchar(50)
)
BEGIN
		SELECT Qry1.cust_code, 
	IF(ISNULL(f106.name), "", f106.name) AS cust_name,
	f106.name AS cust_name, 
	Qry1.funit_code,Qry1.funit_type,
        Qry1.fkva_code,
        IF(ISNULL(F042.fkva_name), "", F042.fkva_name) AS fkva_name,
      -- F042.fkva_name AS fkva_name,
        Qry1.fwtr_code,
        IF(ISNULL(F044.fwtr_name), "", F042.fkva_name) AS fwtr_name,
      -- F044.fwtr_name AS fwtr_name,
        Qry1.fkva_daya,
        Qry1.fkva_no,
        Qry1.frent_sqm,
        Qry1.frent_month,
        Qry1.funit_long,
        Qry1.funit_width,
        Qry1.funit_sqm,
        Qry1.funit_land,
        Qry1.funit_sell,
        Qry1.fowner,
        Qry1.ftenant,
        Qry1.fstatus,
        Qry1.fphase,
        Qry1.ftrade_name,
        Qry1.fstatuskios,
        Qry1.ActiveStatus
         FROM (
SELECT 
CASE WHEN ftenant=ISNULL(ftenant) THEN fowner ELSE ftenant END
AS cust_code,
 f048.funit_code,f048.funit_type,
        f048.fkva_code,
       -- F042.fkva_name AS fkva_name,
        f048.fwtr_code,
       -- F042.fkva_name AS fwtr_name,
        f048.fkva_daya,
        f048.fkva_no,
        f048.frent_sqm,
        f048.frent_month,
        f048.funit_long,
        f048.funit_width,
        f048.funit_sqm,
        f048.funit_land,
        f048.funit_sell,
        f048.fowner,
        f048.ftenant,
        f048.fstatus,
        f048.fphase,
        f048.ftrade_name,
        f048.fstatuskios,
        f048.ActiveStatus
         FROM f048 WHERE ftenant=ISNULL(ftenant) OR fowner=ISNULL(fowner)
)AS Qry1
	LEFT JOIN f106 ON  f106.code = Qry1.cust_code
	LEFT JOIN F042 ON Qry1.fkva_code 		= F042.fkva_code	
	LEFT  JOIN F044 ON Qry1.fwtr_code 		= F044.fwtr_code
	where Qry1.funit_code like prmfunit_code
	ORDER BY Qry1.funit_code
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_CDPNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_CDPNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_CDPNo_get`(
	prmBranchCode VARCHAR(50),
	prmCDPNo VARCHAR(50)
)
BEGIN
		SELECT  
			F515.BranchCode, 
			F001.Name As BranchName,
			F515.CDPNo,			
			F515.RefNo,
			F515.TransactionDate,
			F515.CurrencyCode,
			F006.Name as CurrencyName,
			F515.CustomerCode,
			F106.Name as CustomerName,
			F515.CustomerNameAlias,
			F516.CDPDescription,
			F516.Amount,
			F515.TotalTransactionAmount			
		FROM F515			
			Inner Join F001 On F515.BranchCode = F001.Code
			INNER JOIN F106 on F515.CustomerCode = F106.Code
			Inner Join F006 On F515.CurrencyCode = F006.Code
			INNER JOIN F516 ON F515.CDPNo = F516.CDPNo
		WHERE 
			F515.CDPNo like prmCDPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_coa_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_coa_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_coa_delete`()
BEGIN
	DELETE FROM coa;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_coa_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_coa_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_coa_get`()
BEGIN
	SELECT coa.BranchCode,coa.Code, coa.Name, coa.Type, coa.CurrencyCode
	FROM coa
	Order By coa.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_coa_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_coa_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_coa_insert`(
IN prmBranchCode VARCHAR(50),
IN prmCode VARCHAR(20), 
IN prmName VARCHAR(200),
in prmType Enum('H','G','S')
)
BEGIN
	INSERT INTO coa 
	(BranchCode, Code, Name, Type)
	VALUES
	(prmBranchCode, prmCode, prmName,prmType);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_CustInfoHaveBlock_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_CustInfoHaveBlock_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_CustInfoHaveBlock_get`(
       IN prmCode VARCHAR(50), IN prmName VARCHAR(200)
)
BEGIN
				SELECT Qry1.cust_code, 
	IF(ISNULL(f106.name), "", f106.name) AS cust_name,
	IF(ISNULL(f106.ContactPerson), "", f106.ContactPerson) AS cust_Contact,
	-- f106.name as cust_name, 
	Qry1.funit_code,Qry1.funit_type,
        Qry1.fkva_code,
        IF(ISNULL(F042.fkva_name), "", F042.fkva_name) AS fkva_name,
      -- F042.fkva_name AS fkva_name,
        Qry1.fwtr_code,
        IF(ISNULL(F044.fwtr_name), "", F042.fkva_name) AS fwtr_name,
      -- F044.fwtr_name AS fwtr_name,
        Qry1.fkva_daya,
        Qry1.fkva_no,
        Qry1.frent_sqm,
        Qry1.frent_month,
        Qry1.funit_long,
        Qry1.funit_width,
        Qry1.funit_sqm,
        Qry1.funit_land,
        Qry1.funit_sell,
        Qry1.fowner,
        Qry1.ftenant,
        Qry1.fstatus,
        Qry1.fphase,
        Qry1.ftrade_name,
        Qry1.fstatuskios,
        Qry1.ActiveStatus
         FROM (
SELECT 
CASE WHEN ftenant=ISNULL(ftenant) THEN fowner ELSE ftenant END
AS cust_code,
 f048.funit_code,f048.funit_type,
        f048.fkva_code,
       -- F042.fkva_name AS fkva_name,
        f048.fwtr_code,
       -- F042.fkva_name AS fwtr_name,
        f048.fkva_daya,
        f048.fkva_no,
        f048.frent_sqm,
        f048.frent_month,
        f048.funit_long,
        f048.funit_width,
        f048.funit_sqm,
        f048.funit_land,
        f048.funit_sell,
        f048.fowner,
        f048.ftenant,
        f048.fstatus,
        f048.fphase,
        f048.ftrade_name,
        f048.fstatuskios,
        f048.ActiveStatus
         FROM f048 
         -- WHERE ftenant=ISNULL(ftenant) OR fowner=ISNULL(fowner)
)AS Qry1
	LEFT JOIN f106 ON  f106.code = Qry1.cust_code
	LEFT JOIN F042 ON Qry1.fkva_code 		= F042.fkva_code	
	LEFT  JOIN F044 ON Qry1.fwtr_code 		= F044.fwtr_code
	WHERE Qry1.cust_code<>"" AND Qry1.cust_code LIKE prmCode AND F106.name LIKE prmName
	GROUP BY Qry1.cust_code
	ORDER BY Qry1.cust_code
	
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_CustInfo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_CustInfo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_CustInfo_get`(
       
)
BEGIN
			SELECT Qry1.cust_code, 
	IF(ISNULL(f106.name), "", f106.name) AS cust_name,
	IF(ISNULL(f106.ContactPerson), "", f106.ContactPerson) AS cust_Contact,
	-- f106.name as cust_name, 
	Qry1.funit_code,Qry1.funit_type,
        Qry1.fkva_code,
        IF(ISNULL(F042.fkva_name), "", F042.fkva_name) AS fkva_name,
      -- F042.fkva_name AS fkva_name,
        Qry1.fwtr_code,
        IF(ISNULL(F044.fwtr_name), "", F042.fkva_name) AS fwtr_name,
      -- F044.fwtr_name AS fwtr_name,
        Qry1.fkva_daya,
        Qry1.fkva_no,
        Qry1.frent_sqm,
        Qry1.frent_month,
        Qry1.funit_long,
        Qry1.funit_width,
        Qry1.funit_sqm,
        Qry1.funit_land,
        Qry1.funit_sell,
        Qry1.fowner,
        Qry1.ftenant,
        Qry1.fstatus,
        Qry1.fphase,
        Qry1.ftrade_name,
        Qry1.fstatuskios,
        Qry1.ActiveStatus
         FROM (
SELECT 
CASE WHEN ftenant=ISNULL(ftenant) THEN fowner ELSE ftenant END
AS cust_code,
 f048.funit_code,f048.funit_type,
        f048.fkva_code,
       -- F042.fkva_name AS fkva_name,
        f048.fwtr_code,
       -- F042.fkva_name AS fwtr_name,
        f048.fkva_daya,
        f048.fkva_no,
        f048.frent_sqm,
        f048.frent_month,
        f048.funit_long,
        f048.funit_width,
        f048.funit_sqm,
        f048.funit_land,
        f048.funit_sell,
        f048.fowner,
        f048.ftenant,
        f048.fstatus,
        f048.fphase,
        f048.ftrade_name,
        f048.fstatuskios,
        f048.ActiveStatus
         FROM f048 WHERE ftenant=ISNULL(ftenant) OR fowner=ISNULL(fowner)
)AS Qry1
	LEFT JOIN f106 ON  f106.code = Qry1.cust_code
	LEFT JOIN F042 ON Qry1.fkva_code 		= F042.fkva_code	
	LEFT  JOIN F044 ON Qry1.fwtr_code 		= F044.fwtr_code
	WHERE Qry1.cust_code<>""
	GROUP BY Qry1.cust_code
	ORDER BY Qry1.cust_code
	
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_Doc_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_Doc_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_Doc_get`(
   -- IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmDocNo varchar(50)   
   -- IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT
	'INV' as TransactionType,
	F607.BranchCode, 
	F607.INVNo 		as DocNo, 
	F607.TransactionDate,			
	F607.CurrencyCode	as CurrencyCode, 
	-- F006.Name 		as CurrencyName,
	F607.CustomerCode 	as DocCode,
	F106.Name 		as DocName,
	F607.ExchangeRate,        
	(F607.PackingFeeAfterPPN++f607.fbill_ppj+F607.OtherFeeBeforePPN+F607.TotalTransaction+F607.PPh23FeeAfterPPN+F607.PPNAmount) 			AS GrandTotal, 
	((F607.PackingFeeAfterPPN++f607.fbill_ppj+F607.OtherFeeBeforePPN+F607.TotalTransaction+F607.PPh23FeeAfterPPN+F607.PPNAmount) * F607.ExchangeRate)	AS GrandTotalAmountLocal,
	F607.PaidAmount 			AS PaidAmount, 
	(F607.PaidAmount * F607.ExchangeRate) 	AS PaidAmountLocal,
        -- (F607.GrandTotal - F607.PaidAmount) AS Balance,
	-- (F607.GrandTotal - F607.PaidAmount)* F607.ExchangeRate AS BalanceLocal,
	((F607.PackingFeeAfterPPN++f607.fbill_ppj+F607.OtherFeeBeforePPN+F607.TotalTransaction+F607.PPh23FeeAfterPPN+F607.PPNAmount)  - F607.PaidAmount) AS Balance,
	((F607.PackingFeeAfterPPN++f607.fbill_ppj+F607.OtherFeeBeforePPN+F607.TotalTransaction+F607.PPh23FeeAfterPPN+F607.PPNAmount) - F607.PaidAmount)* F607.ExchangeRate AS BalanceLocal
from F607 
	    -- INNER JOIN F006 on F607.CurrencyCode = F006.Code  
	    INNER JOIN F106 on  F607.CustomerCode = F106.Code
WHERE 
		-- F607.BranchCode = prmBranchCode 
		 F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate	
		AND F607.INVNo LIKE prmDocNo
		-- AND F607.CurrencyCode LIKE prmCurrencyCode
union all
SELECT
	'INV' as TransactionType,
	F618.BranchCode, 
	F618.INVNo 		as DocNo, 
	F618.TransactionDate,			
	F618.CurrencyCode	as CurrencyCode, 
	-- F006.Name 		as CurrencyName,
	F618.CustomerCode 	as DocCode,
	F106.Name 		as DocName,
	F618.ExchangeRate,        
	F618.GrandTotal 			as GrandTotal, 
	(F618.GrandTotal * F618.ExchangeRate)	as GrandTotalAmountLocal,
	F618.PaidAmount 			as PaidAmount, 
	(F618.PaidAmount * F618.ExchangeRate) 	as PaidAmountLocal,
        (F618.GrandTotal - F618.PaidAmount) as Balance,
	(F618.GrandTotal - F618.PaidAmount)* F618.ExchangeRate as BalanceLocal
from F618 
	    -- INNER JOIN F006 on F618.CurrencyCode = F006.Code  
	    INNER JOIN F106 on  F618.CustomerCode = F106.Code
WHERE 
		-- F618.BranchCode = prmBranchCode 
		 F618.TransactionDate BETWEEN prmFirstDate AND prmLastDate	
		AND F618.INVNo LIKE prmDocNo
		-- AND F618.CurrencyCode LIKE prmCurrencyCode
		
union all
select
	'SRT' as TransactionType,
	F613.BranchCode, 
	F613.SRTNo 		as DocNo, 
	F613.TransactionDate,	
	F613.CurrencyCode 	as CurrencyCode,
	-- F006.Name 		As CurrencyName,
	F613.CustomerCode as DocCode,
        F106.Name         As DocName,
	F613.ExchangeRate,	
	F613.GrandTotalAmount				as GrandTotal,
	(F613.GrandTotalAmount * F613.ExchangeRate) 	As GrandTotalAmountLocal, 
	F613.UsedAmount 				as PaidAmount,
	(F613.UsedAmount * F613.ExchangeRate) 		as  PaidAmountLocal,
	(F613.GrandTotalAmount - F613.UsedAmount) as Balance,
	(F613.GrandTotalAmount - F613.UsedAmount)* F613.ExchangeRate as BalanceLocal
FROM F613	
	--  INNER JOIN F006 ON F613.CurrencyCode = F006.Code
         INNER JOIN F106 on  F613.CustomerCode = F106.Code
WHERE 	
	-- F613.BranchCode = prmBranchCode 
 F613.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	AND F613.SRTNo LIKE prmDocNo	
	-- AND F613.CurrencyCode LIKE prmCurrencyCode
union all
select
	'CDP' as TransactionType,
	F515.BranchCode, 
	F515.CDPNo 		as DocNo, 
	F515.TransactionDate,	
	F515.CurrencyCode 	as CurrencyCode,
	-- F006.Name 		As CurrencyName,
	F515.CustomerCode as DocCode,
	F106.Name         as DocName,
	F515.ExchangeRate,	
	F515.TotalTransactionAmount				as GrandTotal,
	(F515.TotalTransactionAmount * F515.ExchangeRate) 	As GrandTotalAmountLocal, 
	F515.PaidAmount 				as PaidAmount,
	(F515.PaidAmount * F515.ExchangeRate) 		as  PaidAmountLocal,
	(F515.TotalTransactionAmount - F515.PaidAmount) as Balance,
	(F515.TotalTransactionAmount - F515.PaidAmount)* F515.ExchangeRate as BalanceLocal
FROM F515	
	--  INNER JOIN F006 ON F515.CurrencyCode = F006.Code	
	 INNER JOIN F106 on F515.CustomerCode = F106.Code
WHERE 	
	-- F515.BranchCode = prmBranchCode 
	F515.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	AND F515.CDPNo LIKE prmDocNo	
	-- AND F515.CurrencyCode LIKE prmCurrencyCode
union all
SELECT
	'GRN' as TransactionType,
	F301.BranchCode, 
	F301.GRNNo 		as DocNo, 
	F301.TransactionDate,			
	F301.CurrencyCode	as CurrencyCode, 
	-- F006.Name 		as CurrencyName,
	F301.SupplierCode as DocCode, 	
	F109.Name         As DocName,
	F301.ExchangeRate,   
	F301.GrandTotal 				as GrandTotalAmount, 
	(F301.GrandTotal * F301.ExchangeRate)	as GrandTotalAmountLocal,
	F301.PaidAmount 			as PaidAmount, 
	(F301.PaidAmount * F301.ExchangeRate) 	as PaidAmountLocal,
        (F301.GrandTotal - F301.PaidAmount) as Balance,
	(F301.GrandTotal - F301.PaidAmount)* F301.ExchangeRate as BalanceLocal
from F301 
	    -- INNER JOIN F006 on F301.CurrencyCode = F006.Code 
            Left JOIN F109 ON F301.SupplierCode 	= F109.Code            	    
	   WHERE 
		-- F301.BranchCode = prmBranchCode 
		 F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		AND F301.GRNNo LIKE prmDocNo		
		-- AND F301.CurrencyCode LIKE prmCurrencyCode
		
union all
select
	'PRT' as TransactionType,
	F203.BranchCode, 
	F203.PRTNo 		as DocNo, 
	F203.TransactionDate,		
	F203.CurrencyCode 	as CurrencyCode,
	-- F006.Name 		As CurrencyName,
        F203.SupplierCode as DocCode,
	F109.Name 	  As DocName,
	F203.ExchangeRate,	
	F203.GrandTotalAmount				as GrandTotalAmount,
	(F203.GrandTotalAmount * F203.ExchangeRate) 	As GrandTotalAmountLocal, 
	F203.UsedAmount 				as PaidAmount,
	(F203.UsedAmount * F203.ExchangeRate) 		as  PaidAmountLocal,
	(F203.GrandTotalAmount - F203.UsedAmount) as Balance,
	(F203.GrandTotalAmount - F203.UsedAmount)* F203.ExchangeRate as BalanceLocal
FROM F203	
	 -- INNER JOIN F006 ON F203.CurrencyCode = F006.Code
	 INNER JOIN F109 ON F203.SupplierCode = F109.Code
WHERE 	
	-- F203.BranchCode = prmBranchCode 
	 F203.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	AND F203.PRTNo LIKE prmDocNo
	-- AND F203.CurrencyCode LIKE prmCurrencyCode
union all
select
	'SDP' as TransactionType,
	F517.BranchCode, 
	F517.SDPNo 		as DocNo, 
	F517.TransactionDate,	
	F517.CurrencyCode 	as CurrencyCode,
	-- F006.Name 		As CurrencyName,
	F517.SupplierCode as DocCode,
	F109.Name 	  as DocName,
	F517.ExchangeRate,	
	F517.TotalTransactionAmount				as GrandTotal,
	(F517.TotalTransactionAmount * F517.ExchangeRate) 	As GrandTotalAmountLocal, 
	F517.PaidAmount 				as PaidAmount,
	(F517.PaidAmount * F517.ExchangeRate) 		as  PaidAmountLocal,
	(F517.TotalTransactionAmount - F517.PaidAmount) as Balance,
	(F517.TotalTransactionAmount - F517.PaidAmount)* F517.ExchangeRate as BalanceLocal
FROM F517
	 -- INNER JOIN F006 ON F517.CurrencyCode = F006.Code
	 INNER JOIN F109 on  F517.SupplierCode = F109.Code
WHERE 	
	-- F517.BranchCode = prmBranchCode 
	 F517.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	AND F517.SDPNo LIKE prmDocNo	
	-- AND F517.CurrencyCode LIKE prmCurrencyCode
	;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_DODNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_DODNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_DODNo_get`(IN prmDODNo VARCHAR(50))
BEGIN
	SELECT
		F605.BranchCode,
                F001.Name As BranchName,
		F001.Address As BranchAddress,
		F001.Phone1 As BranchPhone1,
		F001.Fax As BranchFax,
		F001.CityCode As BranchCityCode,
		F009.Name As BranchCityName,
		F001.EmailAddress As BranchEmail,
		F605.DODNo, 
		F605.TransactionDate, 
		F605.CurrencyCode,
		F006.Name AS CurrencyName, 
		F605.ExchangeRate, 
		F605.CustomerCode, 
		F106.Name AS CustomerName,
		F106.Address AS CustomerAddress,
		F106.CityCode AS CustomerCityCode,
		F009.Name AS CustomerCityName,
		F106.CountryCode AS CustomerCountryCode,
		F010.Name AS CustomerCountryName,
		F106.Phone1 AS CustomerPhone,
		F106.Fax AS CustomerFax,
		F106.ContactPerson AS CustomerContactPerson,
		F603.CustomerPODNo,
		F605.SalesmanCode,
		F108.Name AS SalesmanName, 
		F605.DriverCode,
		F113.Name AS DriverName, 
		F605.Description,  
		F605.SODNo, 
		F605.WarehouseCode,
		F110.Name AS WarehouseName,
		F606.ItemCode,
                F606.ItemAlias,
		F013.Name AS ItemName,
		F013.UnitCode AS UnitItem,
		F606.Quantity,
		F606.BonusQuantity,
		F606.Description
		
	FROM F605
		INNER JOIN F001 ON F605.BranchCode = F001.Code
		INNER JOIN F006 ON F605.CurrencyCode = F006.Code
		INNER JOIN F106 ON F605.CustomerCode = F106.Code
		INNER JOIN F009 ON F106.CityCode = F009.Code
		INNER JOIN F010 ON F106.CountryCode = F010.Code
		INNER JOIN F108 ON F605.SalesmanCode = F108.Code
		INNER JOIN F113 ON F605.DriverCode = F113.Code
		INNER JOIN F110 ON F605.WarehouseCode = F110.Code
		INNER JOIN F606 ON F605.DODNo = F606.DODNo
		INNER JOIN F013 ON F606.ItemCode = F013.Code
		LEFT JOIN F603 ON F605.SODNo = F603.SODNo
	WHERE
		F605.DODNo = prmDODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F000_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F000_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_F000_get`()
BEGIN
	SELECT
	BranchCode,
         CompanyAcronym,
           CompanyName,
	   KodePerusahaan,
	   RekGiro,
           NPWP,
	   HeadOfficeAddress,
	   HeadOfficeAddress2,
        HeadOfficePhone1,
	   HeadOfficePhone2,
	   HeadOfficeFax,
	   HeadOfficeZipCode,
	   CurrencyCode, 
	   AutomaticNo, 
	   CounterType, 
	   TransactionnumberLength, 
	   AutomaticExchangeRate,
	   CounterType,
	   CompanyName,
	   InvDes	 
	FROM F000;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F000_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F000_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_F000_update`(	
	IN prmCompanyName varchar(50),
	-- IN prmPersonaliaName Varchar(50),
	IN prmNPWP varchar(50),
	-- IN prmJenisUsaha varchar(50),
	-- IN prmKLU varchar(6),
	IN prmHeadOfficeAddress text,
	In prmHeadOfficeAddress2 text,
	IN prmHeadOfficePhone1 varchar(20),
	IN prmHeadOfficePhone2 varchar(20),
	IN prmHeadOfficeFax varchar(20),
	IN prmHeadOfficeZipCode varchar(20),
	IN prmInvDes TEXT
)
BEGIN
	UPDATE F000	
	   SET 
           F000.CompanyName = prmCompanyName,
	  -- F000.PersonaliaName = prmPersonaliaName,
	   F000.NPWP = prmNPWP,
	   -- F000.JenisUsaha = prmJenisUsaha,
	   -- F000.KLU = prmKLU,
           F000.HeadOfficeAddress = prmHeadOfficeAddress,
	   F000.HeadOfficeAddress2 = prmHeadOfficeAddress2,
	   F000.HeadOfficePhone1 = prmHeadOfficePhone1,
	   F000.HeadOfficePhone2 = prmHeadOfficePhone2,
	   F000.HeadOfficeFax = prmHeadOfficeFax,
	   F000.HeadOfficeZipCode = prmHeadOfficeZipCode,
	    F000.InvDes = prmInvDes
	   	
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F001_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F001_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F001_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F001 WHERE F001.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F001_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F001_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F001_get`()
BEGIN
	SELECT 
		F001.Code, 
		F001.Name, 
		F001.Address, 
		F001.CityCode,
		F009.Name AS CityName, 
		F001.CountryCode,
		F010.Name AS CountryName, 
		F001.Phone1, 
		F001.Phone2, 
		F001.Fax, 
		F001.ZipCode, 
		F001.ContactPerson, 
		F001.InventoryType, 
		F001.WarehouseCode,
		F110.Name AS WarehouseName, 
		F001.PaymentTermCode,
		F018.Name AS PaymentTermName, 
		F001.CustomerCode,
		F106.Name AS CustomerName, 
		F001.EmailAddress,
		F001.CDPBudgetTypeCode,
		F001.SDPBudgetTypeCode
	FROM F001 
		LEFT JOIN F009 ON F001.CityCode 	= F009.Code
		LEFT JOIN F010 ON F001.CountryCode 	= F010.Code
		LEFT JOIN F018 ON F001.PaymentTermCode = F018.Code
		LEFT JOIN F106 ON F001.CustomerCode 	= F106.Code
		LEFT JOIN F110 ON F001.WarehouseCode 	= F110.Code
		left Join F011 On F001.CDPBudgetTypeCode = F011.Code and F001.SDPBudgetTypeCode = F011.Code		
	WHERE F001.Code <> "-" 
	ORDER BY F001.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F001_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F001_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F001_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),
IN prmAddress VARCHAR(200), IN prmCityCode VARCHAR(50), IN prmCountryCode VARCHAR(50),
IN prmPhone1 VARCHAR(50), IN prmPhone2 VARCHAR(50), IN prmFax VARCHAR(50), IN prmZipCode VARCHAR(50), 
IN prmContactPerson VARCHAR(100), IN prmInventoryType ENUM('FIFO','LIFO','AVERAGE'), 
IN prmWarehouseCode VARCHAR(50), IN prmPaymentTermCode VARCHAR(50), IN prmCustomerCode VARCHAR(50), IN prmEmailAddress VARCHAR(100),
IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F001 
(F001.Code, F001.Name, 
F001.Address, F001.CityCode, F001.CountryCode, 
F001.Phone1, F001.Phone2, F001.Fax, F001.ZipCode, F001.ContactPerson, 
F001.InventoryType, F001.WarehouseCode, F001.PaymentTermCode, F001.CustomerCode, F001.EmailAddress, 
F001.ActiveStatus, F001.CreatedBy, F001.CreatedDate)
VALUES
(prmCode, prmName, 
prmAddress, prmCityCode, prmCountryCode, 
prmPhone1, prmPhone2, prmFax, prmZipCode, prmContactPerson, 
prmInventoryType, prmWarehouseCode, prmPaymentTermCode, prmCustomerCode, prmEmailAddress, 
1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F001_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F001_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F001_search`(
	IN prmCode VARCHAR(50),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			F001.Code, 
			F001.Name,
			F001.Address,
			F001.Phone1,
			F001.Fax,
			F001.EmailAddress,
			F001.CDPBudgetTypeCode,
			F011.Name as CDPBudgetTypeName,
			F001.SDPBudgetTypeCode,
			F011.Name as SDPBudgetTypeName
		FROM F001 
			left Join F011 On F001.CDPBudgetTypeCode = F011.Code and F001.SDPBudgetTypeCode = F011.Code
		WHERE
			F001.Code LIKE prmCode AND F001.Name LIKE prmName
			
			
		Order By F001.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F001_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F001_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F001_search_code`(prmCode VARCHAR(50))
BEGIN
		SELECT 
			F001.*
		FROM 
			F001
		WHERE 
			F001.Code LIKE prmCode And F001.ActiveStatus = 1
		Order By 
			F001.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F001_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F001_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F001_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F001.Code, F001.Name, F001.CDPBudgetTypeCode, F001.SDPBudgetTypeCode
		FROM 
			F001
		WHERE 
			F001.Name LIKE prmName And F001.ActiveStatus = 1
		Order By 
			F001.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F001_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F001_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F001_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),
IN prmAddress VARCHAR(200), IN prmCityCode VARCHAR(50), IN prmCountryCode VARCHAR(50),
IN prmPhone1 VARCHAR(50), IN prmPhone2 VARCHAR(50), IN prmFax VARCHAR(50), IN prmZipCode VARCHAR(50), 
IN prmContactPerson VARCHAR(100), IN prmInventoryType ENUM('FIFO','LIFO','AVERAGE'), 
IN prmWarehouseCode VARCHAR(50), IN prmPaymentTermCode VARCHAR(50), IN prmCustomerCode VARCHAR(50), IN prmEmailAddress VARCHAR(100),
IN prmUpdatedBy VARCHAR(50), IN prmOldCOde VARCHAR(50))
BEGIN
UPDATE F001 SET
	F001.Code 		= prmCode,
	F001.Name 		= prmName, 
	F001.Address 		= prmAddress, 
	F001.CityCode 		= prmCityCode, 
	F001.CountryCode 	= prmCountryCode, 
	F001.Phone1 		= prmPhone1, 
	F001.Phone2 		= prmPhone2, 
	F001.Fax 		= prmFax, 
	F001.ZipCode 		= prmZipCode, 
	F001.ContactPerson 	= prmContactPerson, 
	F001.InventoryType 	= prmInventoryType, 
	F001.WarehouseCode 	= prmWarehouseCode, 
	F001.PaymentTermCode 	= prmPaymentTermCode, 
	F001.CustomerCode 	= prmCustomerCode, 
	F001.EmailAddress 	= prmEmailAddress, 
	F001.ActiveStatus 	= 1, 
	F001.UpdatedBy 		= prmUpdatedBy, 
	F001.UpdatedDate 	= now()
	WHERE
	F001.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F002_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F002_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F002_get`()
BEGIN
	SELECT F002.Code, F002.Name
	FROM F002
	ORDER BY F002.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F003_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F003_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F003_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F003 WHERE F003.Code = prmCode;
	DELETE FROM F004 WHERE F004.GroupCode = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F003_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F003_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F003_get`(IN prmActiveStatus TINYINT(1) )
BEGIN
	IF (prmActiveStatus = 2) THEN
       SELECT F003.Code, F003.Name, F003.ActiveStatus 
       FROM F003 
	   Order By F003.Code;
    ELSE
       SELECT F003.Code, F003.Name, F003.ActiveStatus  
       FROM F003 
	   WHERE ActiveStatus = prmActiveStatus
	   Order By F003.Code;
    END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F003_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F003_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F003_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F003 
		(Code, 
		Name, 
		ActiveStatus, 
		CreatedBy, 
		CreatedDate)
	VALUES
		(prmCode, 
		prmName, 
		1, 
		prmCreatedBy, 
		NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F003_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F003_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F003_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), 
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F003 
	SET F003.Code = prmCode, F003.Name = prmName, F003.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW() 
	WHERE F003.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F004_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F004_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F004_delete`(IN prmGroupCode VARCHAR(50))
BEGIN
	DELETE FROM F004 WHERE F004.GroupCode = prmGroupCode ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F004_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F004_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F004_get`(IN prmGroupCode VARCHAR(50))
BEGIN
	SELECT * FROM (
		SELECT F004.ModuleCode, F002.Name ModuleName,
			   AssignAuthority,  
			   SaveAuthority,
			   PrintAuthority,
			   UpdateAuthority,
			   DeleteAuthority
		FROM F002
			 INNER JOIN F004 ON F002.Code = F004.ModuleCode
		WHERE 
			 F004.GroupCode = prmGroupCode
		
		UNION
		SELECT F002.Code AS ModuleCode, F002.Name ModuleName,
			   false AS AssignAuthority,  
			   false AS SaveAuthority,
			   false AS PrintAuthority,
			   false AS UpdateAuthority,
			   false AS DeleteAuthority
		FROM F002
	)AS QRY1
	GROUP BY QRY1.ModuleCode
	ORDER BY QRY1.ModuleCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F004_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F004_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F004_insert`(IN prmGroupCode VARCHAR(50),IN prmModuleCode VARCHAR(200),
IN prmAssignAuthority BOOLEAN, IN prmSaveAuthority BOOLEAN, IN prmPrintAuthority BOOLEAN,
IN prmUpdateAuthority BOOLEAN, IN prmDeleteAuthority BOOLEAN, IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F004 
	(GroupCode, 
	ModuleCode, 
	AssignAuthority, 
	SaveAuthority, 
	PrintAuthority, 
	UpdateAuthority, 
	DeleteAuthority, 
	ActiveStatus, 
	CreatedBy, 
	CreatedDate)
	VALUES
	(prmGroupCode, 
	prmModuleCode, 
	prmAssignAuthority, 
	prmSaveAuthority, 
	prmPrintAuthority, 
	prmUpdateAuthority, 
	prmDeleteAuthority, 
	1, 
	prmCreatedBy, 
	NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F005_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F005_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F005_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F005 WHERE F005.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F005_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F005_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F005_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT F005.Code, F005.Name, F005.ActiveStatus
		FROM F005 
		Order By F005.Code;
	ELSE
		SELECT F005.Code, F005.Name, F005.ActiveStatus 
		FROM F005 
		WHERE F005.ActiveStatus = prmActiveStatus
		Order By F005.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F005_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F005_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F005_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F005 
		(Code, 
		Name, 
		ActiveStatus, 
		CreatedBy, 
		CreatedDate)
	VALUES
		(prmCode, 
		prmName, 
		1, 
		prmCreatedBy, 
		NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F005_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F005_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F005_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F005 
	SET F005.Code = prmCode, F005.Name = prmName, F005.ActiveStatus = prmActiveStatus,
	    F005.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F005.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F006_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F006_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F006_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F006 WHERE F006.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F006_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F006_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F006_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT F006.Code, F006.Name, F006.ActiveStatus
		FROM F006
		WHERE F006.Code <> "-" 
		Order By F006.Code;
	ELSE
		SELECT F006.Code, F006.Name, F006.ActiveStatus 
		FROM F006 
		WHERE ActiveStatus = prmActiveStatus
		AND F006.Code <> "-"
		Order By F006.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F006_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F006_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F006_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F006 
		(Code, 
		Name, 
		ActiveStatus, 
		CreatedBy, 
		CreatedDate)
	VALUES
		(prmCode, 
		prmName, 
		1, 
		prmCreatedBy, 
		NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F006_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F006_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F006_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F006 
	SET F006.Code = prmCode, F006.Name = prmName, F006.ActiveStatus = prmActiveStatus,
	    F006.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW() 
	WHERE F006.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F007_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F007_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F007_get`()
BEGIN
	SELECT 	F007.CurrencyCode, F007.TransactionDate, F007.ExchangeRate
	FROM F007
	Order By CurrencyCode, TransactionDate;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F007_get_ByDateCurrency` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F007_get_ByDateCurrency` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F007_get_ByDateCurrency`(
IN prmTransDate DATE, IN prmCurrencyCode VARCHAR(50)                                                                                                                                                                                                                                                                                                                                
)
BEGIN
SELECT 	F007.CurrencyCode, F007.ExchangeRate, F007.TransactionDate                                                                                                                                                                                                                                                                                                               
FROM F007                                                                                                                                                                                                                                                                                                                                                                        
WHERE F007.TransactionDate = prmTransDate                                                                                                                                                                                                                                                                                                                        
AND F007.CurrencyCode = prmCurrencyCode;                                                                                                                                                                                                                                                                                                                                             
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F007_get_transactiondate` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F007_get_transactiondate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F007_get_transactiondate`(IN prmDate1 DATE, IN prmDate2 DATE)
BEGIN
	SELECT 	F007.CurrencyCode, F007.TransactionDate, F007.ExchangeRate
	FROM F007
	WHERE F007.TransactionDate BETWEEN prmDate1 AND prmDate2
	Order By CurrencyCode, TransactionDate;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F007_get_transactiondate_currency` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F007_get_transactiondate_currency` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F007_get_transactiondate_currency`(IN prmDate1 DATE, 
    IN prmDate2 DATE, IN prmCurrency VARCHAR(50))
BEGIN
	SELECT 	F007.CurrencyCode, F007.TransactionDate, F007.ExchangeRate
	FROM F007
	WHERE F007.TransactionDate BETWEEN prmDate1 AND prmDate2
	      AND CurrencyCode = prmCurrency
	Order By CurrencyCode, TransactionDate;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F007_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F007_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F007_insert`(prmCurrencyCode VARCHAR(50), 
    prmTransactionDate DATE, prmExchangeRate decimal, prmUser VARCHAR(50))
BEGIN
	INSERT INTO F007 
	(CurrencyCode, TransactionDate, ExchangeRate, CreatedBy, CreatedDate)
	VALUES
	(prmCurrencyCode, prmTransactionDate, prmExchangeRate, prmUser, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F007_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F007_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F007_update`(prmCurrencyCode VARCHAR(50), 
    prmTransactionDate DATE, prmExchangeRate decimal, prmUser VARCHAR(50) )
BEGIN
	UPDATE F007 SET 
	   ExchangeRate = prmExchangeRate, 
	   UpdatedBy = prmUser, 
	   UpdatedDate = NOW()
	WHERE CurrencyCode = prmCurrencyCode AND
	      TransactionDate = prmTransactionDate;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F008_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F008_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F008_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F008 WHERE F008.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F008_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F008_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F008_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT F008.Code, F008.Name, F008.ActiveStatus
		FROM F008
WHERE F008.Code <> "-"  
		Order By F008.Code;
	ELSE
		SELECT F008.Code, F008.Name, F008.ActiveStatus 
		FROM F008 
		WHERE F008.ActiveStatus = prmActiveStatus
AND  F008.Code <> "-" 
		Order By F008.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F008_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F008_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F008_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F008 
		(Code, 
		Name, 
		ActiveStatus, 
		CreatedBy, 
		CreatedDate)
	VALUES
		(prmCode, 
		prmName, 
		1, 
		prmCreatedBy, 
		NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F008_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F008_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F008_search`(
	IN prmCode VARCHAR(50),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			F008.Code, 
			F008.Name
		FROM F008 
		WHERE
			F008.Code LIKE prmCode AND F008.Name LIKE prmName And F008.ActiveStatus = 1
		Order By F008.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F008_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F008_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F008_search_code`(prmCode VARCHAR(50))
BEGIN
		SELECT 
			F008.Code, F008.Name
		FROM 
			F008
		WHERE 
			F008.Code LIKE prmCode And F008.ActiveStatus = 1
		Order By 
			F008.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F008_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F008_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F008_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F008.Code, F008.Name
		FROM 
			F008
		WHERE 
			F008.Name LIKE prmName And F008.ActiveStatus = 1
		Order By 
			F008.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F008_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F008_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F008_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F008 
	SET F008.Code = prmCode, F008.Name = prmName, F008.ActiveStatus = prmActiveStatus,
	    F008.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F008.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F009_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F009_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F009_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F009 WHERE F009.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F009_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F009_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F009_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT F009.Code, F009.Name, F009.ActiveStatus
		FROM F009
		WHERE F009.Code <> "-"
		Order By F009.Code;
	ELSE
		SELECT F009.Code, F009.Name, F009.ActiveStatus 
		FROM F009 
		WHERE F009.ActiveStatus = prmActiveStatus
		AND F009.Code <> "-"
		Order By F009.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F009_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F009_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F009_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F009 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F009_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F009_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F009_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F009 
	SET F009.Code = prmCode, F009.Name = prmName, F009.ActiveStatus = prmActiveStatus,
	    F009.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F009.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F010_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F010_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F010_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F010 WHERE F010.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F010_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F010_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F010_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT F010.Code, F010.Name, F010.ActiveStatus
		FROM F010
		WHERE F010.Code <> "-" 
		Order By F010.Code;
	ELSE
		SELECT F010.Code, F010.Name, F010.ActiveStatus 
		FROM F010 
		WHERE F010.ActiveStatus = prmActiveStatus
		AND F010.Code <> "-"
		Order By F010.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F010_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F010_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F010_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F010 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F010_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F010_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F010_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F010 
	SET F010.Code = prmCode, F010.Name = prmName, F010.ActiveStatus = prmActiveStatus,
	    F010.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F010.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F011_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F011_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F011_delete`(IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F011 WHERE F011.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F011_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F011_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F011_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT  
		F011.Code, 
		F011.Name, 
		F011.AccountCode, 
		F101.Name As AccountName,
		F011.ActiveStatus
		FROM F011 
		left Join F101 On F101.Code = F011.AccountCode
WHERE F011.Code <> "-"  
		Order By F011.Code;
	ELSE
		SELECT 
		F011.Code, 
		F011.Name,
		F011.AccountCode, 
		F101.Name As AccountName,
		F011.ActiveStatus 
		FROM F011
		LEFT Join F101 On F101.Code = F011.AccountCode 
		WHERE F011.ActiveStatus = prmActiveStatus
AND F011.Code <> "-"  
		Order By F011.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F011_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F011_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F011_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), IN prmAccountCode varchar(20), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F011 
	(Code, Name, AccountCode, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, prmAccountCode, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F011_Search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F011_Search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F011_Search`(
	IN prmCode VARCHAR(50),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			F011.Code, 
			F011.Name
		FROM F011 
			
		WHERE
			F011.Code LIKE prmCode AND F011.Name LIKE prmName And F011.ActiveStatus = 1
		Order By F011.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F011_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F011_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F011_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), 
IN prmAccountCode Varchar(20), In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F011 
	SET F011.Code = prmCode, F011.Name = prmName, F011.AccountCode = prmAccountCode, F011.ActiveStatus = prmActiveStatus,
	    F011.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F011.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F012_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F012_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F012_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F012 WHERE F012.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F012_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F012_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F012_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT F012.Code, F012.Name, F012.ActiveStatus
		FROM F012
		WHERE F012.Code <> "-" 
		Order By F012.Code;
	ELSE
		SELECT F012.Code, F012.Name, F012.ActiveStatus 
		FROM F012 
		WHERE F012.ActiveStatus = prmActiveStatus
		AND F012.Code <> "-" 
		Order By F012.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F012_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F012_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F012_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F012 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F012_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F012_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F012_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F012 
	SET F012.Code = prmCode, F012.Name = prmName, F012.ActiveStatus = prmActiveStatus,
	    F012.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F012.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F013_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F013_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F013_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F013 WHERE F013.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F013_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F013_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F013_get`(IN prmCode VARCHAR(50), IN prmName VARCHAR(200), 
IN prmMerkCode VARCHAR(50), IN prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT 
			F013.Code, 
			F013.Name, 
			F013.UnitCode UnitCode, 
			F008.Name AS UnitName, 
			F013.MaxStock, 
			F013.MinStock,
			F013.ItemTypeCode, 
			F015.Name AS ItemTypeName,
			F013.MerkCode,
			F026.Name AS MerkName,
			F013.Price,
			F013.PackageStatus,
			F013.ActiveStatus
		FROM F013 
			INNER JOIN F015 ON F015.Code 	= F013.ItemTypeCode 
			INNER JOIN F008 ON F008.Code 	= F013.UnitCode
			LEFT   JOIN F026 ON F026.Code 	= F013.MerkCode 
		WHERE
			F013.Code LIKE prmCode AND F013.Name LIKE prmName AND F013.MerkCode LIKE prmMerkCode
		ORDER BY F013.Code;
	ELSE
		SELECT 
			F013.Code, 
			F013.Name, 
			F013.UnitCode, 
			F008.Name AS UnitName, 
			F013.MaxStock, 
			F013.MinStock,
			F013.ItemTypeCode, 
			F015.Name AS ItemTypeName,
			F013.MerkCode,
			F026.Name AS MerkName,
			F013.Price,
			F013.PackageStatus,
			F013.ActiveStatus
		FROM F013
			INNER JOIN F015 ON F015.Code 	= F013.ItemTypeCode 
			INNER JOIN F008 ON F008.Code 	= F013.UnitCode
			LEFT   JOIN F026 ON F026.Code 	= F013.MerkCode 
		WHERE 
			F013.ActiveStatus = prmActiveStatus
			AND F013.Code LIKE prmCode AND F013.Name LIKE prmName AND F013.MerkCode LIKE prmMerkCode
		ORDER BY F013.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F013_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F013_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F013_insert`(
IN prmCode VARCHAR(50),
IN prmName VARCHAR(100),
IN prmUnitCode VARCHAR(50), 
IN prmMerkCode VARCHAR(50), 
IN prmMaxStock DECIMAL(18,4),
IN prmMinStock DECIMAL(18,4), 
IN prmItemTypeCode VARCHAR(50), 
IN prmPrice DECIMAL(18,4),
IN prmPackageStatus BOOLEAN, 
IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F013 
		(
		F013.Code, 
		F013.Name, 
		F013.UnitCode, 
		F013.MaxStock, 
		F013.MinStock, 
		F013.ItemTypeCode, 
		F013.MerkCode, 
		F013.Price,
		F013.PackageStatus, 
		F013.ActiveStatus, 
		F013.CreatedBy, 
		F013.CreatedDate
		)
	VALUES
		(
		prmCode, 
		prmName,
		prmUnitCode, 
		prmMaxStock, 
		prmMinStock, 
		prmItemTypeCode, 
		prmMerkCode, 
		prmPrice,
		prmPackageStatus, 
		1, 
		prmCreatedBy, 
		NOW() 
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F013_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F013_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F013_search`(
	IN prmCode VARCHAR(50),
	IN prmName VARCHAR(50),
	IN prmMerkCode VARCHAR(50),
	IN prmItemTypeCode VARCHAR(50),
        IN prmPackageStatus1 TinyINT(1),
	IN prmPackageStatus2 TinyINT(1)
)
BEGIN
		SELECT 
			F013.Code, 
			F013.Name, 
			F013.UnitCode, 
			F008.Name as UnitName, 
			F013.MaxStock, 
			F013.MinStock,
			F013.MerkCode,
			F013.Price,
			F026.Name AS MerkName,
			F013.ItemTypeCode, 
			F015.Name as ItemTypeName,
			F013.PackageStatus
		FROM F013 
			LEFT join F015 on F015.Code = F013.ItemTypeCode 
			LEFT join F008 on F008.Code = F013.UnitCode
			LEFT join F026 on F026.Code = F013.MerkCode
		WHERE
			F013.Code LIKE prmCode AND 
			F013.Name LIKE prmName AND
			F013.MerkCode LIKE prmMerkCode AND
			F013.ItemTypeCode LIKE prmItemTypeCode AND   
			F013.ActiveStatus = 1 AND
			(F013.PackageStatus = prmPackageStatus1 OR F013.PackageStatus = prmPackageStatus2)
			
		Order By F013.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F013_Search_Code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F013_Search_Code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F013_Search_Code`(IN prmCode VARCHAR(50),
	IN prmPackageStatus1 TinyINT(1),IN prmPackageStatus2 TinyINT(1))
BEGIN
		SELECT 
			F013.Code, F013.Name, F013.UnitCode, F008.Name as UnitName, F013.Price
		FROM 
			F013
		Inner Join F008 On F008.Code = F013.UnitCode
		WHERE 
			F013.Code = prmCode And F013.ActiveStatus = 1 AND
			(F013.PackageStatus = prmPackageStatus1 OR F013.PackageStatus = prmPackageStatus2);
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F013_search_Name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F013_search_Name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F013_search_Name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F013.Code, F013.Name, F013.UnitCode, F008.Name as UnitName , F013.Price
		FROM 
			F013
		Inner Join F008 On F008.Code = F013.UnitCode
		WHERE 
			F013.Name LIKE prmName And F013.ActiveStatus = 1
		Order By 
			F013.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F013_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F013_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F013_update`(
IN prmCode VARCHAR(50),
IN prmName VARCHAR(100),
IN prmUnitCode VARCHAR(50), 
IN prmMaxStock DECIMAL(18,4), 
IN prmMinStock DECIMAL(18,4), 
IN prmItemTypeCode VARCHAR(50), 
IN prmMerkCode VARCHAR(50),
IN prmPrice DECIMAL(18,4),
IN prmPackageStatus BOOLEAN,
IN prmActiveStatus BOOLEAN, 
IN prmUpdatedBy VARCHAR(50), 
IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F013 
	SET 	F013.Code 		= prmCode, 
		F013.Name 		= prmName, 
		F013.UnitCode 		= prmUnitCode, 
		F013.MaxStock 		= prmMaxStock, 
		F013.Minstock 		= prmMinStock, 
		F013.ItemTypeCode 	= prmItemTypeCode,
		F013.MerkCode 		= prmMerkCode,
		F013.Price		= prmPrice,
		F013.PackageStatus 	= prmPackageStatus, 
		F013.ActiveStatus 	= prmActiveStatus, 
		F013.UpdatedBy 	= prmUpdatedBy, 
		F013.UpdatedDate 	= NOW()
	WHERE 
		F013.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F014_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F014_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F014_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F014 WHERE F014.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F014_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F014_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F014_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT 
		F014.Code, 
		F014.Name, 
		F014.Address, 
		F014.ZipCode, 
		F014.NPWP, 
		F014.NPWPAddress, 
		F014.CityCode, 
		F009.Name as CityName, 
		F014.CountryCode, 
		F010.Name as CountryName, 
		F014.Phone1, 
		F014.Phone2, 
		F014.Fax, 
		F014.ContactPerson, 
		F014.CompanyTypeCode,
		F012.Name as CompanyTypeName, 
		F014.CreditLimit, 
		F014.EmailAddress,
		F014.ActiveStatus
		FROM F014 
			Inner Join F009 on F009.Code = F014.CityCode
			Inner Join F010 on F010.Code = F014.CountryCode
			Inner join F012 on F012.Code = F014.CompanyTypeCode
		WHERE F014.Code  <> "-"
		Order By F014.Code;
	ELSE
		SELECT 
		F014.Code, 
		F014.Name, 
		F014.Address, 
		F014.ZipCode, 
		F014.NPWP, 
		F014.NPWPAddress, 
		F014.CityCode, 
		F009.Name as CityName, 
		F014.CountryCode, 
		F010.Name as CountryName, 
		F014.Phone1, 
		F014.Phone2, 
		F014.Fax, 
		F014.ContactPerson, 
		F014.CompanyTypeCode,
		F012.Name as CompanyTypeName, 
		F014.CreditLimit, 
		F014.EmailAddress,
		F014.ActiveStatus
		FROM F014
			Inner Join F009 on F009.Code = F014.CityCode
			Inner Join F010 on F010.Code = F014.CountryCode
			inner join F012 on F012.Code = F014.CompanyTypeCode 
		WHERE F014.ActiveStatus = prmActiveStatus
		AND F014.Code <> "-"
		Order By F014.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F014_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F014_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F014_insert`(IN prmCode VARCHAR(50),
							IN prmName VARCHAR(100),
							IN prmAddress TinyText,
							IN prmZipCode Varchar(50),
							IN prmNPWP Varchar(50),
							IN prmNPWPAddress TinyText,
							IN prmCityCode Varchar(50),
							IN prmCountryCode Varchar(50),
							IN prmPhone1 Varchar(20),
							IN prmPhone2 Varchar(20),
							IN prmFax Varchar(20),
							IN prmContactPerson Varchar(50),
							IN prmCompanyTypeCode Varchar(50),
							IN prmCreditLimit Decimal(18,4),
							IN prmEmailAddress Varchar(50),
							IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F014 
	(Code, 
		Name,
		Address,
		ZipCode, 
		NPWP,
		NPWPAddress,
		CityCode,
		CountryCode,
		Phone1,
		Phone2,
		Fax,
		ContactPerson,
		CompanyTypeCode,
		CreditLimit,
		EmailAddress,
		ActiveStatus, 
		CreatedBy, 
		CreatedDate)
	VALUES
	(prmCode, 
		prmName,
		prmAddress,
		prmZipCode,
		prmNPWP,
		prmNPWPAddress,
		prmCityCode,
		prmCountryCode,
		prmPhone1,
		prmPhone2,
		prmFax,
		prmContactPerson,
		prmCompanyTypeCode,
		prmCreditLimit,
		prmEmailAddress, 
		1, 
		prmCreatedBy, 
		NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F014_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F014_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F014_update`(IN prmCode VARCHAR(50),
							IN prmName VARCHAR(100),
							IN prmAddress TinyText,
							IN prmZipCode Varchar(50),
							IN prmNPWP Varchar(50),
							IN prmNPWPAddress TinyText,
							IN prmCityCode Varchar(50),
							IN prmCountryCode Varchar(50),
							IN prmPhone1 Varchar(20),
							IN prmPhone2 Varchar(20),
							IN prmFax Varchar(20),
							IN prmContactPerson Varchar(50),
							IN prmCompanyTypeCode Varchar(50),
							IN prmCreditLimit Decimal(18,4),
							IN prmEmailAddress Varchar(50), 
							In prmActiveStatus boolean,
							IN prmUpdatedBy VARCHAR(50), 
							IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F014 
	SET F014.Code = prmCode, 
		F014.Name = prmName,
		F014.Address = prmAddress,
		F014.ZipCode = prmZipCode, 
		F014.NPWP = prmNPWP,
		F014.NPWPAddress = prmNPWPAddress,
		F014.CityCode = prmCityCode,
		F014.CountryCode = prmCountryCode,
		F014.Phone1 = prmPhone1,
		F014.Phone2 = prmPhone2,
		F014.Fax = prmFax,
		F014.ContactPerson = prmContactPerson,
		F014.CompanyTypeCode = prmCompanyTypeCode,
		F014.CreditLimit = prmCreditLimit,
		F014.EmailAddress = prmEmailAddress, 
		F014.ActiveStatus = prmActiveStatus, 
		F014.UpdatedBy = prmUpdatedBy, 
		F014.UpdatedDate = NOW()
	WHERE F014.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F015_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F015_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F015_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F015 WHERE F015.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F015_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F015_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F015_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT 
		F015.Code, 
		F015.Name, 
		f015.AccountCode,
		F015.ActiveStatus
		FROM F015
		Order By F015.Code;
	ELSE
		SELECT 
		F015.Code, 
		F015.Name, 
		f015.AccountCode,
		F015.ActiveStatus 
		FROM F015 
		WHERE F015.ActiveStatus = prmActiveStatus
		Order By F015.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F015_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F015_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F015_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),
IN prmAccountCode VARCHAR(50),
IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F015 
	(Code, Name, AccountCode ,ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, prmAccountCode,1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F015_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F015_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F015_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),
IN prmAccountCode varchar(50),
 In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F015 
	SET F015.Code = prmCode, F015.Name = prmName, F015.AccountCode=prmAccountCode, F015.ActiveStatus = prmActiveStatus,
	    F015.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F015.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F016_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F016_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F016_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F016 WHERE F016.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F016_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F016_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F016_get`(
	IN prmBranchCode VARCHAR(50),
	IN prmActiveStatus TINYINT(1)
)
BEGIN
	IF (prmActiveStatus = 2) THEN 
		SELECT 
		F016.Code As ReasonCode, 
		F016.Name As ReasonName, 
		IFNULL(tblReasonCOA.DebitAccountCode, '') AS DebitAccountCode, 
		IFNULL(tblReasonCOA.CreditAccountCode, '') AS CreditAccountCode, 
		IFNULL(tblDebitAcc.Name, '') AS DebitAccountName,
		IFNULL(tblCreditAcc.Name, '') AS CreditAccountName,
		F016.ActiveStatus
		FROM F016 
		LEFT JOIN F112 AS tblReasonCOA ON F016.code=tblReasonCOA.reasoncode AND tblReasonCOA.branchcode=prmBranchCode
		LEFT JOIN F101 AS tblDebitAcc  ON tblReasonCOA.DebitAccountCode=tblDebitAcc.code AND tblDebitAcc.branchcode=prmBranchCode 
		LEFT JOIN F101 AS tblCreditAcc ON tblReasonCOA.CreditAccountCode=tblCreditAcc.code AND tblCreditAcc.branchcode=prmBranchCode 
		WHERE F016.Code <> "-"
		ORDER BY F016.Code; 
	ELSE
		SELECT 
		F016.Code, 
		F016.Name, 
		IFNULL(tblReasonCOA.DebitAccountCode, '') AS DebitAccountCode, 
		IFNULL(tblReasonCOA.CreditAccountCode, '') AS CreditAccountCode, 
		IFNULL(tblDebitAcc.Name, '') AS DebitAccountName,
		IFNULL(tblCreditAcc.Name, '') AS CreditAccountName,
		F016.ActiveStatus
		FROM F016 
		LEFT JOIN F112 AS tblReasonCOA ON F016.code=tblReasonCOA.reasoncode AND tblReasonCOA.branchcode=prmBranchCode 
		LEFT JOIN F101 AS tblCreditAcc ON tblReasonCOA.CreditAccountCode=tblCreditAcc.code AND tblCreditAcc.branchcode=prmBranchCode 
		LEFT JOIN F101 AS tblDebitAcc ON tblReasonCOA.DebitAccountCode=tblDebitAcc.code AND tblDebitAcc.branchcode=prmBranchCode 
		WHERE F016.ActiveStatus=prmActiveStatus
		AND F016.Code <> "-" 
		ORDER BY F016.Code; 
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F016_get_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F016_get_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F016_get_search`(
	IN prmActiveStatus TINYINT(1), 
	IN prmBranchCode VARCHAR(50), 
	IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(50) 
)
BEGIN
	SELECT 
	F016.Code, 
	F016.Name, 
	IFNULL(tblReasonCOA.CreditAccountCode, '') AS CreditAccountCode, 
	IFNULL(tblReasonCOA.DebitAccountCode, '') AS DebitAccountCode, 
	IFNULL(tblCreditAcc.Name, '') AS CreditAccountName, 
	IFNULL(tblDebitAcc.Name, '') AS DebitAccountName,
	F016.ActiveStatus 
	FROM F016 
	LEFT JOIN F112 AS tblReasonCOA ON F016.code=tblReasonCOA.reasoncode AND tblReasonCOA.branchcode=prmBranchCode 
	LEFT JOIN F101 AS tblCreditAcc ON tblReasonCOA.CreditAccountCode=tblCreditAcc.code AND tblCreditAcc.branchcode=prmBranchCode 
	LEFT JOIN F101 AS tblDebitAcc ON tblReasonCOA.DebitAccountCode=tblDebitAcc.code AND tblDebitAcc.branchcode=prmBranchCode 
	WHERE (prmActiveStatus NOT IN (0, 1) OR F016.activestatus=prmActiveStatus) 
	AND (prmCode='' OR F016.code LIKE prmCode) 
	AND (prmName='' OR F016.name LIKE prmName)
	And F016.ActiveStatus = 1 
	ORDER BY F016.Code; 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F016_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F016_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F016_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F016 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F016_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F016_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F016_search`(prmCode VARCHAR(50), prmName Varchar(100))
BEGIN
		SELECT 
			F016.Code, F016.Name
		FROM 
			F016
		WHERE 
			F016.Code LIKE prmCode And F016.Name LIKE prmName And F016.ActiveStatus = 1 
		Order By 
			F016.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F016_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F016_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F016_search_code`(prmCode VARCHAR(50))
BEGIN
		SELECT 
			F016.Code, F016.Name
		FROM 
			F016
		WHERE 
			F016.Code LIKE prmCode 	And F016.ActiveStatus = 1 
		Order By 
			F016.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F016_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F016_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F016_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F016 
	SET 	F016.Code = prmCode, 
		F016.Name = prmName, 
		F016.ActiveStatus = prmActiveStatus, 
		F016.UpdatedBy = prmUpdatedBy, 
		F016.UpdatedDate = NOW()
	WHERE F016.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F017_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F017_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F017_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F017 WHERE F017.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F017_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F017_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F017_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT 
		F017.Code, 
		F017.Name, 
		F017.ActiveStatus
		FROM F017
		WHERE F017.Code <> "-" 
		Order By F017.Code;
	ELSE
		SELECT 
		F017.Code, 
		F017.Name, 
		F017.ActiveStatus 
		FROM F017 
		WHERE F017.ActiveStatus = prmActiveStatus
		AND F017.Code <> "-"
		Order By F017.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F017_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F017_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F017_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F017
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F017_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F017_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F017_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F017 
	SET F017.Code = prmCode, F017.Name = prmName, F017.ActiveStatus = prmActiveStatus,
	    F017.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F017.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F018_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F018_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F018_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F018 WHERE F018.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F018_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F018_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F018_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT 
		F018.Code, 
		F018.Name,
		F018.Days, 
		F018.ActiveStatus
		FROM F018
		WHERE F018.Code <> "-" 
		Order By F018.Code;
	ELSE
		SELECT 
		F018.Code, 
		F018.Name,
		F018.Days, 
		F018.ActiveStatus 
		FROM F018 
		WHERE F018.ActiveStatus = prmActiveStatus
		AND F018.Code <> "-" 
		Order By F018.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F018_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F018_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F018_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), IN prmDays Decimal(18,4), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F018 
	(Code, Name, Days, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, prmDays, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F018_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F018_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F018_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmDays Decimal(18,4),
    In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F018 
	SET F018.Code = prmCode, F018.Name = prmName, F018.Days = prmDays, F018.ActiveStatus = prmActiveStatus,
	    F018.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F018.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F019_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F019_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F019_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F019 WHERE F019.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F019_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F019_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F019_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT 
		F019.Code, 
		F019.Name, 
		F019.ActiveStatus
		FROM F019
		WHERE F019.Code <> "-" 
		Order By F019.Code;
	ELSE
		SELECT 
		F019.Code, 
		F019.Name, 
		F019.ActiveStatus 
		FROM F019 
		WHERE F019.ActiveStatus = prmActiveStatus
		AND F019.Code <> "-"
		Order By F019.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F019_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F019_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F019_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F019 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F019_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F019_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F019_search`(prmCode VARCHAR(50), prmName Varchar(100))
BEGIN
		SELECT 
			F019.Code, F019.Name
		FROM 
			F019
		WHERE 
			F019.Code LIKE prmCode And F019.Name LIKE prmName And F019.ActiveStatus = 1 
		Order By 
			F019.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F019_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F019_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F019_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F019 
	SET F019.Code = prmCode, F019.Name = prmName, F019.ActiveStatus = prmActiveStatus, 
	    F019.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F019.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F020_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F020_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F020_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F020 WHERE F020.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F020_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F020_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F020_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT 
		F020.Code, 
		F020.Name, 
		F020.ActiveStatus
		FROM F020 
		WHERE F020.Code <> "-"
		Order By F020.Code;
	ELSE
		SELECT 
		F020.Code, 
		F020.Name, 
		F020.ActiveStatus 
		FROM F020 
		WHERE F020.ActiveStatus = prmActiveStatus
		AND F020.Code <> "-"
		Order By F020.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f020_get_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f020_get_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f020_get_search`(
	IN prmActiveStatus TINYINT(1), 
		IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(50) 
)
BEGIN
	SELECT 
	f020.Code, 
	f020.Name, 
	f020.frupiah,
  f020.finterva,
  f020.fvat,
 --  f020.fadm_fee,
 --  f020.fstatus,
 --  f020.ftrx_type,
	f020.ActiveStatus 
	FROM f020 
	WHERE (prmActiveStatus NOT IN (0, 1) OR f020.activestatus=prmActiveStatus) 
	AND (prmCode='' OR f020.code LIKE prmCode) 
	AND (prmName='' OR f020.name LIKE prmName)
	And f020.ActiveStatus = 1 
	ORDER BY f020.Code; 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F020_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F020_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F020_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F020 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F020_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F020_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F020_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F020 
	SET F020.Code = prmCode, F020.Name = prmName, F020.ActiveStatus = prmActiveStatus,
	    F020.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F020.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F021_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F021_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F021_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F021 WHERE F021.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F021_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F021_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F021_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT 
		F021.Code, 
		F021.Name, 
		F021.ActiveStatus
		FROM F021
		WHERE F021.Code <> "-" 
		Order By F021.Code;
	ELSE
		SELECT 
		F021.Code, 
		F021.Name, 
		F021.ActiveStatus 
		FROM F021 
		WHERE F021.ActiveStatus = prmActiveStatus
		AND F021.Code <> "-"
		Order By F021.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F021_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F021_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F021_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F021 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F021_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F021_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F021_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F021 
	SET F021.Code = prmCode, F021.Name = prmName, F021.ActiveStatus = prmActiveStatus,
	    F021.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F021.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F022_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F022_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F022_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F022 WHERE F022.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F022_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F022_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F022_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT 
		F022.Code, 
		F022.Name, 
		F022.ActiveStatus
		FROM F022
		WHERE F022.Code <> "-"
		Order By F022.Code;
	ELSE
		SELECT 
		F022.Code, 
		F022.Name, 
		F022.ActiveStatus 
		FROM F022 
		WHERE F022.ActiveStatus = prmActiveStatus
		AND F022.Code <> "-" 
		Order By F022.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F022_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F022_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F022_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F022 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f022_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f022_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f022_search_code`(prmCode VARCHAR(50))
BEGIN
		SELECT 
			f022.*
		FROM 
			f022
		WHERE 
			f022.Code LIKE prmCode And f022.ActiveStatus = 1
		Order By 
			f022.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F022_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F022_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F022_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F022 
	SET F022.Code = prmCode, F022.Name = prmName, F022.ActiveStatus = prmActiveStatus,
	    F022.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F022.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F025_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F025_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F025_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F025 WHERE F025.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F025_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F025_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F025_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT F025.Code, F025.Name, F025.ActiveStatus
		FROM F025
		WHERE F025.Code <> "-" 
		Order By F025.Code;
	ELSE
		SELECT F025.Code, F025.Name, F025.ActiveStatus 
		FROM F025 
		WHERE F025.ActiveStatus = prmActiveStatus
		AND F025.Code <> "-"
		Order By F025.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F025_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F025_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F025_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F025 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F025_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F025_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F025_search`(
	IN prmCode VARCHAR(50),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			F025.Code, 
			F025.Name
		FROM F025 
		WHERE
			F025.Code LIKE prmCode AND F025.Name LIKE prmName And F025.ActiveStatus = 1
		Order By F025.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F025_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F025_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F025_search_code`(prmCode VARCHAR(50))
BEGIN
		SELECT 
			F025.Code, F025.Name
		FROM 
			F025
		WHERE 
			F025.Code LIKE prmCode And F025.ActiveStatus = 1
		Order By 
			F025.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F025_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F025_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F025_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F025.Code, F025.Name
		FROM 
			F025
		WHERE 
			F025.Name LIKE prmName And F025.ActiveStatus = 1
		Order By 
			F025.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F025_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F025_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F025_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F025 
	SET F025.Code = prmCode, F025.Name = prmName, F025.ActiveStatus = prmActiveStatus,
	    F025.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F025.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F026_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F026_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F026_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F026 WHERE F026.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F026_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F026_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F026_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT F026.Code, F026.Name,f026.AccountCode, F026.ActiveStatus
		FROM F026
		Order By F026.Code;
	ELSE
		SELECT F026.Code, F026.Name,f026.AccountCode, F026.ActiveStatus 
		FROM F026 
		WHERE F026.ActiveStatus = prmActiveStatus
		Order By F026.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F026_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F026_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F026_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),
IN prmAccountCode VARCHAR(50),
IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F026 
	(Code, Name,AccountCode, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName,prmAccountCode, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F026_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F026_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F026_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmAccountCode VARCHAR(50), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F026 
	SET F026.Code = prmCode, F026.Name = prmName, F026.AccountCode=prmAccountCode ,F026.ActiveStatus = prmActiveStatus,
	    F026.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F026.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F030_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F030_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F030_delete`(prmCode VARCHAR(50)
)
BEGIN
		DELETE FROM F030 WHERE F030.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F030_delete_ChildrenItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F030_delete_ChildrenItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F030_delete_ChildrenItem`(prmCode VARCHAR(50)
)
BEGIN
		DELETE FROM F030 WHERE  F030.ParentItemCode = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F030_get_ChildrenItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F030_get_ChildrenItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F030_get_ChildrenItem`(
	IN prmParentItemCode VARCHAR(50)
)
BEGIN
		SELECT 
			F030.ParentItemCode,
			F030.ChildrenItemCode, 
			F013.Name AS ChildrenItemName, 
			F013.UnitCode, 
			F008.Name as UnitName, 
			F013.ItemTypeCode, 
			F015.Name as ItemTypeName,
			F030.Quantity,
			F030.Percentage
		FROM 
			F030
			INNER JOIN F013 ON F013.Code = F030.ChildrenItemCode
			inner join F015 on F015.Code = F013.ItemTypeCode 
			inner join F008 on F008.Code = F013.UnitCode
	        WHERE
			F030.ParentItemCode = prmParentItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F030_get_ChildrenItem2` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F030_get_ChildrenItem2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F030_get_ChildrenItem2`()
BEGIN
		SELECT 
			F030.ParentItemCode,
			F030.ChildrenItemCode, 
			F013.Name AS ChildrenItemName, 
			F013.UnitCode, 
			F030.Quantity
		FROM 
			F030
			INNER JOIN F013 ON F013.Code = F030.ChildrenItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F030_Get_Percentage` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F030_Get_Percentage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F030_Get_Percentage`(IN prmParentItemCode VARCHAR(50), prmChildrenItemCode VARCHAR(50))
BEGIN 
  SELECT 
    F030.Percentage
FROM F030
WHERE F030.ParentItemCode = prmParentItemCode AND F030.ChildrenItemCode = prmChildrenItemCode
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F030_insert_ChildrenItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F030_insert_ChildrenItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F030_insert_ChildrenItem`(
	IN prmParentItemCode VARCHAR(50), 
	IN prmChildrentItemCode VARCHAR(50),			
	IN prmQuantity Decimal(18,4),
	IN prmPercentage Decimal(18,4), 	
	IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F030 
	(ParentItemCode, ChildrenItemCode, Quantity, Percentage, CreatedBy, CreatedDate)
	VALUES
	(prmParentItemCode, prmChildrentItemCode, prmQuantity, prmPercentage, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F037_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F037_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F037_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F037 WHERE F037.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F037_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F037_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F037_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT F037.Code, F037.Name, F037.ActiveStatus
		FROM F037
		WHERE F037.Code <> "-" 
		Order By F037.Code;
	ELSE
		SELECT F037.Code, F037.Name, F037.ActiveStatus 
		FROM F037 
		WHERE F037.ActiveStatus = prmActiveStatus
		AND F037.Code <> "-"
		Order By F037.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F037_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F037_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F037_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F037 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F037_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F037_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F037_search`(
	IN prmCode VARCHAR(50),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			F037.Code, 
			F037.Name
		FROM F037 
		WHERE
			F037.Code LIKE prmCode AND F037.Name LIKE prmName And F037.ActiveStatus = 1
		Order By F037.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F037_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F037_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F037_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F037 
	SET F037.Code = prmCode, F037.Name = prmName, F037.ActiveStatus = prmActiveStatus,
	    F037.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F037.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F038_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F038_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F038_delete`(IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F038 WHERE F038.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F038_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F038_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F038_get`(IN prmActiveStatus TINYINT(1))
BEGIN
	IF (prmActiveStatus = 2) THEN
		SELECT	
			F038.Code, 
			F038.Name, 
			F038.Address, 
			F038.CityCode,
			F009.Name AS CityName, 
			F038.CountryCode,
			F010.Name AS CountryName, 
			F038.ZipCode, 
			F038.Phone1, 
			F038.Phone2, 
			F038.Fax, 
			F038.ContactPerson, 
			F038.ActiveStatus 
		FROM F038 
			INNER JOIN F009 ON F038.CityCode 		= F009.Code
			INNER JOIN F010 ON F038.CountryCode 	= F010.Code
			ORDER BY F038.Code;
	ELSE
		SELECT	
			F038.Code, 
			F038.Name, 
			F038.Address, 
			F038.CityCode,
			F009.Name AS CityName, 
			F038.CountryCode,
			F010.Name AS CountryName, 
			F038.ZipCode, 
			F038.Phone1, 
			F038.Phone2, 
			F038.Fax, 
			F038.ContactPerson, 
			F038.ActiveStatus 
		FROM F038 
			INNER JOIN F009 ON F038.CityCode 		= F009.Code
			INNER JOIN F010 ON F038.CountryCode 	= F010.Code
		WHERE
			F038.ActiveStatus = prmActiveStatus;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F038_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F038_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F038_insert`(
IN prmCode 		VARCHAR(50),
IN prmName		VARCHAR(100),
IN prmAddress 		TEXT, 
IN prmCityCode 		VARCHAR(50),
IN prmCountryCode 	VARCHAR(50), 
IN prmZipCode 		VARCHAR(50), 
IN prmPhone1 		VARCHAR(50),
IN prmPhone2 		VARCHAR(50), 
IN prmFax 			VARCHAR(50), 
IN prmContactPerson 	VARCHAR(50), 
IN prmCreatedBy 	VARCHAR(50)
)
BEGIN
	INSERT INTO F038 
	(
	F038.Code, 
	F038.Name, 
	F038.Address, 
	F038.CityCode, 
	F038.CountryCode, 
	F038.ZipCode, 
	F038.Phone1, 
	F038.Phone2, 
	F038.Fax, 
	F038.ContactPerson, 
	F038.ActiveStatus, 
	F038.CreatedBy, 
	F038.CreatedDate
	)
VALUES
	(
	prmCode, 
	prmName, 
	prmAddress, 
	prmCityCode, 
	prmCountryCode, 
	prmZipCode, 
	prmPhone1,
	prmPhone2, 
	prmFax, 
	prmContactPerson, 
	1,
	prmCreatedBy, 
	NOW()
	);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F038_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F038_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F038_search`(
	IN prmCode VARCHAR(50),
	IN prmName VARCHAR(50)
)
BEGIN
	SELECT	
		F038.Code, 
		F038.Name, 
		F038.Address, 
		F038.CityCode, 
		F038.CountryCode, 
		F038.ZipCode, 
		F038.Phone1, 
		F038.Phone2, 
		F038.Fax, 
		F038.ContactPerson, 
		F038.ActiveStatus 
	FROM F038 
		INNER JOIN F009 ON F038.CityCode 		= F009.Code
		INNER JOIN F010 ON F038.CountryCode 	= F010.Code
	WHERE
		F038.Code LIKE prmCode AND
		F038.Name LIKE prmName
	ORDER BY F038.Code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F038_search_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F038_search_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F038_search_ByCode`(
	IN prmCode VARCHAR(50)
)
BEGIN
	SELECT	
		F038.Code, 
		F038.Name
	FROM F038
	WHERE
		F038.Code = prmCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F038_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F038_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F038_update`(
IN prmCode 		VARCHAR(50),
IN prmName		VARCHAR(100),
IN prmAddress 		TEXT, 
IN prmCityCode 		VARCHAR(50),
IN prmCountryCode 	VARCHAR(50), 
IN prmZipCode 		VARCHAR(50), 
IN prmPhone1 		VARCHAR(50),
IN prmPhone2 		VARCHAR(50), 
IN prmFax 			VARCHAR(50), 
IN prmContactPerson 	VARCHAR(50),
IN prmActiveStatus 	BOOLEAN, 
IN prmUpdatedBy 	VARCHAR(50),
IN prmOldCode 		VARCHAR(50)
)
BEGIN
	UPDATE F038 SET 
		F038.Code 		= prmCode, 
		F038.Name 		= prmName, 
		F038.Address 		= prmAddress, 
		F038.CityCode 		= prmCityCode,
		F038.CountryCode 	= prmCountryCode, 
		F038.ZipCode	 	= prmZipCode, 
		F038.Phone1 		= prmPhone1,
		F038.Phone2 		= prmPhone2,
		F038.Fax 			= prmFax, 
		F038.ContactPerson 	= prmContactPerson,
		F038.ActiveStatus 	= prmActiveStatus,
		F038.UpdatedBy 	= prmUpdatedBy, 
		F038.UpdatedDate 	= NOW()
	WHERE 
		F038.Code  = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f039_a_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f039_a_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f039_a_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	f039_a.Code, 
	f039_a.Name, 
	f039_a.AreaCode,
	f039_a.CutOffInv,
	f039_a.ActiveStatus
		FROM f039_a
		WHERE f039_a.Code <> "-"  
			Order By f039_a.Code;
ELSE
	SELECT
	f039_a.Code, 
	f039_a.Name, 
	f039_a.AreaCode,
f039_a.CutOffInv,
	f039_a.ActiveStatus
		FROM f039_a 
			WHERE f039_a.ActiveStatus = prmActiveStatus
			AND  f039_a.Code <> "-"  
			Order By f039_a.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f039_a_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f039_a_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f039_a_insert`(IN prmCode VARCHAR(3), in prmAreaCode varchar(2),IN prmCutOffInv VARCHAR(50),
	IN prmName VARCHAR(100), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO f039_a
	(f039_a.Code, f039_a.AreaCode, f039_a.Name, CutOffInv ,ActiveStatus, f039_a.CreatedBy, f039_a.CreatedDate)
	values
	(prmCode, prmAreaCode,prmName,prmCutOffInv, 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f039_a_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f039_a_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f039_a_search`(
	IN prmCode VARCHAR(3),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			f039_a.Code, 
			f039_a.Name
		FROM f039_a 
		WHERE
			f039_a.Code LIKE prmCode AND 
			f039_a.Name LIKE prmName AND
			f039_a.ActiveStatus = 1
		Order By f039_a.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f039_a_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f039_a_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f039_a_search_code`(prmCode VARCHAR(3))
BEGIN
		SELECT 
			f039_a.Code, f039_a.AreaCode,f039_a.Name
		FROM 
			f039_a
		WHERE 
		
			 f039_a.Code LIKE prmCode
		Order By 
			f039_a.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f039_a_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f039_a_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f039_a_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			f039_a.Code, f039_a.AreaCode,f039_a.Name,f039_a.CutOffInv
		FROM 
			f039_a
		WHERE 
				f039_a.Name LIKE prmName
				AND f039_a.ActiveStatus = 1
		Order By 
			f039_a.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f039_a_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f039_a_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f039_a_update`(IN prmCode VARCHAR(3), in prmAreaCode varchar(2), IN prmCutOffInv VARCHAR(50),
	IN prmName VARCHAR(100), In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE f039_a SET
	   f039_a.Code = prmCode, 
	f039_a.AreaCode =prmAreaCode,
	f039_a.CutOffInv=prmCutOffInv,
	   f039_a.Name = prmName, 
	   f039_a.ActiveStatus = prmActiveStatus,
	   f039_a.UpdatedBy = prmUpdatedBy, 
	   f039_a.UpdatedDate = NOW()
	WHERE
	   f039_a.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_b_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_b_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_b_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	F039_b.Code, 
	F039_b.Name, 
	
	F039_b.ActiveStatus
		FROM F039_b
		WHERE F039_b.Code <> "-"  
			Order By F039_b.Code;
ELSE
	SELECT
	F039_b.Code, 
	F039_b.Name, 
	
	F039_b.ActiveStatus
		FROM F039_b 
			WHERE F039_b.ActiveStatus = prmActiveStatus
			AND  F039_b.Code <> "-"  
			Order By F039_b.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_b_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_b_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_b_insert`(IN prmCode VARCHAR(3),
	IN prmName VARCHAR(100), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F039_b
	(F039_b.Code, F039_b.Name, ActiveStatus, F039_b.CreatedBy, F039_b.CreatedDate)
	values
	(prmCode,prmName, 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_b_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_b_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_b_search`(
	IN prmCode VARCHAR(3),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			F039_b.Code, 
			F039_b.Name
		FROM F039_b 
		WHERE
			F039_b.Code LIKE prmCode AND 
			F039_b.Name LIKE prmName AND
			F039_b.ActiveStatus = 1
		Order By F039_b.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_b_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_b_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_b_search_code`(prmCode VARCHAR(3))
BEGIN
		SELECT 
			F039_b.Code, F039_b.AreaCode,F039_b.Name
		FROM 
			F039_b
		WHERE 
		
			 F039_b.Code LIKE prmCode
		Order By 
			F039_b.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_b_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_b_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_b_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F039_b.Code, F039_b.AreaCode,F039_b.Name,F039_b.CutOffInv
		FROM 
			F039_b
		WHERE 
				F039_b.Name LIKE prmName
				AND F039_b.ActiveStatus = 1
		Order By 
			F039_b.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_b_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_b_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_b_update`(IN prmCode VARCHAR(3), 
	IN prmName VARCHAR(100), In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F039_b SET
	   F039_b.Code = prmCode, 
		   F039_b.Name = prmName, 
	   F039_b.ActiveStatus = prmActiveStatus,
	   F039_b.UpdatedBy = prmUpdatedBy, 
	   F039_b.UpdatedDate = NOW()
	WHERE
	   F039_b.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_delete`(IN prmCode VARCHAR(3))
BEGIN
	DELETE FROM F039 WHERE F039.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	F039.Code, 
	F039.Name, 
	F039.AreaCode,
	F039.CutOffInv,
	F039.ActiveStatus
		FROM F039
		WHERE F039.Code <> "-"  
			Order By F039.Code;
ELSE
	SELECT
	F039.Code, 
	F039.Name, 
	F039.AreaCode,
F039.CutOffInv,
	F039.ActiveStatus
		FROM F039 
			WHERE F039.ActiveStatus = prmActiveStatus
			AND  F039.Code <> "-"  
			Order By F039.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_insert`(IN prmCode VARCHAR(3), in prmAreaCode varchar(2),IN prmCutOffInv VARCHAR(50),
	IN prmName VARCHAR(100), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F039
	(F039.Code, F039.AreaCode, F039.Name, CutOffInv ,ActiveStatus, F039.CreatedBy, F039.CreatedDate)
	values
	(prmCode, prmAreaCode,prmName,prmCutOffInv, 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_search`(
	IN prmCode VARCHAR(3),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			F039.Code, 
			F039.Name
		FROM F039 
		WHERE
			F039.Code LIKE prmCode AND 
			F039.Name LIKE prmName AND
			F039.ActiveStatus = 1
		Order By F039.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_search_code`(prmCode VARCHAR(3))
BEGIN
		SELECT 
			F039.Code, F039.AreaCode,F039.Name
		FROM 
			F039
		WHERE 
		
			 F039.Code LIKE prmCode
		Order By 
			F039.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F039.Code, F039.AreaCode,F039.Name,F039.CutOffInv
		FROM 
			F039
		WHERE 
				F039.Name LIKE prmName
				AND F039.ActiveStatus = 1
		Order By 
			F039.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F039_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F039_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F039_update`(IN prmCode VARCHAR(3), in prmAreaCode varchar(2), IN prmCutOffInv VARCHAR(50),
	IN prmName VARCHAR(100), In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F039 SET
	   F039.Code = prmCode, 
	F039.AreaCode =prmAreaCode,
	F039.CutOffInv=prmCutOffInv,
	   F039.Name = prmName, 
	   F039.ActiveStatus = prmActiveStatus,
	   F039.UpdatedBy = prmUpdatedBy, 
	   F039.UpdatedDate = NOW()
	WHERE
	   F039.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F040_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F040_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F040_delete`(IN prmCode VARCHAR(3))
BEGIN
	DELETE FROM F040 WHERE F040.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F040_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F040_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F040_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	F040.Code, 
	F040.Name, 
	
	F040.ActiveStatus
		FROM F040
		WHERE F040.Code <> "-"  
			Order By F040.Code;
ELSE
	SELECT
	F040.Code, 
	F040.Name, 
	
	F040.ActiveStatus
		FROM F040 
			WHERE F040.ActiveStatus = prmActiveStatus
			AND  F040.Code <> "-"  
			Order By F040.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F040_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F040_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F040_insert`(IN prmCode VARCHAR(3), 
	IN prmName VARCHAR(100), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F040
	(F040.Code, F040.Name, ActiveStatus, F040.CreatedBy, F040.CreatedDate)
	values
	(prmCode, prmName, 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F040_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F040_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F040_search`(
	IN prmCode VARCHAR(3),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			F040.Code, 
			F040.Name
		FROM F040 
		WHERE
			F040.Code LIKE prmCode AND 
			F040.Name LIKE prmName AND
			F040.ActiveStatus = 1
		Order By F040.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F040_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F040_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F040_search_code`(prmCode VARCHAR(3))
BEGIN
		SELECT 
			F040.Code, F040.Name
		FROM 
			F040
		WHERE 
		
			 F040.Code LIKE prmCode
		Order By 
			F040.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F040_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F040_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F040_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F040.Code, F040.Name
		FROM 
			F040
		WHERE 
				F040.Name LIKE prmName
				AND F040.ActiveStatus = 1
		Order By 
			F040.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F040_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F040_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F040_update`(IN prmCode VARCHAR(3), 
	IN prmName VARCHAR(100), In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F040 SET
	   F040.Code = prmCode, 
	   F040.Name = prmName, 
	   F040.ActiveStatus = prmActiveStatus,
	   F040.UpdatedBy = prmUpdatedBy, 
	   F040.UpdatedDate = NOW()
	WHERE
	   F040.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F041_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F041_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F041_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM F041 WHERE F041.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F041_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F041_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F041_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT F041.Code, F041.Name, F041.ActiveStatus
		FROM F041
		WHERE F041.Code <> "-" 
		Order By F041.Code;
	ELSE
		SELECT F041.Code, F041.Name, F041.ActiveStatus 
		FROM F041 
		WHERE F041.ActiveStatus = prmActiveStatus
		AND F041.Code <> "-"
		Order By F041.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F041_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F041_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F041_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F041 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F041_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F041_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F041_search`(
	IN prmCode VARCHAR(50),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			F041.Code, 
			F041.Name
		FROM F041 
		WHERE
			F041.Code LIKE prmCode AND F041.Name LIKE prmName And F041.ActiveStatus = 1
		Order By F041.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F041_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F041_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F041_search_code`(prmCode VARCHAR(50))
BEGIN
		SELECT 
			F041.Code, F041.Name
		FROM 
			F041
		WHERE 
			F041.Code LIKE prmCode And F041.ActiveStatus = 1
		Order By 
			F041.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F041_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F041_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F041_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F041.Code, F041.Name
		FROM 
			F041
		WHERE 
			F041.Name LIKE prmName And F041.ActiveStatus = 1
		Order By 
			F041.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F041_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F041_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F041_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F041 
	SET F041.Code = prmCode, F041.Name = prmName, F041.ActiveStatus = prmActiveStatus,
	    F041.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE F041.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F042_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F042_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F042_delete`(
		prmfkva_code VARCHAR(50)
	
)
Begin
	Delete From F043
	WHERE F043.fkva_code = prmfkva_code;
	Delete From F042 
	WHERE F042.fkva_code = prmfkva_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F042_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F042_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F042_get`(
       IN prmfkva_code varchar(50)
)
BEGIN
	Select 
	  fkva_code,
	  fkva_name,
	  frp_bulanan,
	  fjam_rm,
	  frp_rm,
	  fjam_h1,
	  frp_h1,
	  frp_h2,
	  fmax_kva,
	  ftype,
	  fgolongan,
	  fdept_code
	From 
	F042
		-- INNER JOIN F001 ON F042.BranchCode 		= F001.Code		
	Where F042.fkva_code like prmfkva_code
	Order BY F042.fkva_code DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F042_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F042_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F042_insert`(
	  prmfkva_code varchar(50),
	  prmfkva_name varchar(100),
	  prmfrp_bulanan decimal(22,2),
	  prmfjam_rm decimal(22,2),
	  prmfrp_rm decimal(22,2),
	  prmfjam_h1 decimal(22,2),
	  prmfrp_h1 decimal(22,2),
	  prmfrp_h2 decimal(22,2),
	  prmfmax_kva decimal(22,2),
	  prmftype varchar(50),
	  prmfgolongan varchar(50),
	  prmfdept_code varchar(50),
	  prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F042 
		(
			  fkva_code,
			  fkva_name,
			  frp_bulanan,
			  fjam_rm,
			  frp_rm,
			  fjam_h1,
			  frp_h1,
			  frp_h2,
			  fmax_kva,
			  ftype,
			  fgolongan,
			  fdept_code, 
			  CreatedBy, 
			  CreatedDate
		)
		VALUES
		(
			  prmfkva_code,
			  prmfkva_name,
			  prmfrp_bulanan,
			  prmfjam_rm,
			  prmfrp_rm,
			  prmfjam_h1,
			  prmfrp_h1,
			  prmfrp_h2,
			  prmfmax_kva,
			  prmftype,
			  prmfgolongan,
			  prmfdept_code,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F042_Search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F042_Search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F042_Search`(
       
)
BEGIN
	Select 
	  fkva_code,
	  fkva_name,
	  frp_bulanan,
	  fjam_rm,
	  frp_rm,
	  fjam_h1,
	  frp_h1,
	  frp_h2,
	  fmax_kva,
	  ftype,
	  fgolongan,
	  fdept_code
	From 
	F042
		-- INNER JOIN F001 ON F042.BranchCode 		= F001.Code		
	Where F042.ActiveStatus = 1
	Order BY F042.fkva_code DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F042_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F042_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F042_update`(
	prmfkva_code VARCHAR(50),
	  prmfkva_name VARCHAR(100),
	  prmfrp_bulanan DECIMAL(22,2),
	  prmfjam_rm DECIMAL(22,2),
	  prmfrp_rm DECIMAL(22,2),
	  prmfjam_h1 DECIMAL(22,2),
	  prmfrp_h1 DECIMAL(22,2),
	  prmfrp_h2 DECIMAL(22,2),
	  prmfmax_kva DECIMAL(22,2),
	  prmftype VARCHAR(50),
	  prmfgolongan VARCHAR(50),
	  prmfdept_code VARCHAR(50),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F042 SET
			  fkva_code=prmfkva_code,
			  fkva_name=prmfkva_name,
			  frp_bulanan=prmfrp_bulanan,
			  fjam_rm=prmfjam_rm,
			  frp_rm=prmfrp_rm,
			  fjam_h1=prmfjam_h1,
			  frp_h1=prmfrp_h1,
			  frp_h2=prmfrp_h2,
			  fmax_kva=prmfmax_kva,
			  ftype=prmftype,
			  fgolongan=prmfgolongan,
			  fdept_code=prmfdept_code,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			fkva_code 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F043_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F043_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F043_delete`(
		prmfkva_code VARCHAR(50)
)
BEGIN
		DELETE FROM F043 WHERE  fkva_code = prmfkva_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F043_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F043_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F043_get`(
      IN prmfkva_code varchar(50)
)
BEGIN
	Select 
		  fkva_code,
		  flower,
		  fupper,
		  ftarif,
		  fminimum
	From 
		F043
		-- Inner Join F013 On F043.ItemCode = F013.Code		
	Where  F043.fkva_code = prmfkva_code
	Order by F043.fkva_code desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F043_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F043_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F043_insert`(
	prmfkva_code varchar(50),
  prmflower decimal(22,2),
  prmfupper decimal(22,2),
  prmftarif decimal(22,2),
  prmfminimum decimal(22,2),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F043 (
			fkva_code,
		  flower,
		  fupper,
		  ftarif,
		  fminimum, 
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmfkva_code,
			  prmflower,
			  prmfupper,
			  prmftarif,
			  prmfminimum,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f044_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f044_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f044_delete`(
		prmfkva_code VARCHAR(50)
)
Begin
	Delete From f045
	WHERE f045.fkva_code = prmfkva_code;
	Delete From f044 
	WHERE f044.fkva_code = prmfkva_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f044_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f044_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f044_get`(
       IN prmfkva_code varchar(50)
)
BEGIN
	SELECT 
	  f044.fwtr_code,
	  f044.fwtr_name,
	  f044.frp_bulanan,
	  f044.fminimum,
	  f044.ftype,
	  f044.fdept_code
	 
	FROM 
	f044
		-- INNER JOIN F001 ON f044.BranchCode 		= F001.Code		
	Where f044.fwtr_code like prmfkva_code
	Order BY f044.fwtr_code DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f044_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f044_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f044_insert`(
	  prmfkva_code varchar(50),
	  prmfkva_name varchar(100),
	  prmfrp_bulanan decimal(22,2),	
	  prmfmax_kva decimal(22,2),
	  prmftype varchar(50),
	  prmfgolongan varchar(50),
	  prmfdept_code varchar(50),
	  prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO f044 
		(
			  fkva_code,
			  fkva_name,
			  frp_bulanan,			
			  fmax_kva,
			  ftype,
			  fgolongan,
			  fdept_code, 
			  CreatedBy, 
			  CreatedDate
		)
		VALUES
		(
			  prmfkva_code,
			  prmfkva_name,
			  prmfrp_bulanan,
			  prmfmax_kva,
			  prmftype,
			  prmfgolongan,
			  prmfdept_code,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f044_Search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f044_Search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f044_Search`(
      
)
BEGIN
	SELECT 
	  f044.fwtr_code,
	  f044.fwtr_name,
	  f044.frp_bulanan,
	  f044.fminimum,
	  f044.ftype,
	  f044.fdept_code
	 
	FROM 
	f044
		-- INNER JOIN F001 ON f044.BranchCode 		= F001.Code		
	Where f044.ActiveStatus = 1
	Order BY f044.fwtr_code DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f044_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f044_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f044_update`(
	prmfkva_code VARCHAR(50),
	  prmfkva_name VARCHAR(100),
	  prmfrp_bulanan DECIMAL(22,2),	
	  prmfmax_kva DECIMAL(22,2),
	  prmftype VARCHAR(50),
	  prmfgolongan VARCHAR(50),
	  prmfdept_code VARCHAR(50),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE f044 SET
			  fkva_code=prmfkva_code,
			  fkva_name=prmfkva_name,
			  frp_bulanan=prmfrp_bulanan,
			  fmax_kva=prmfmax_kva,
			  ftype=prmftype,
			  fgolongan=prmfgolongan,
			  fdept_code=prmfdept_code,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			fkva_code 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f045_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f045_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f045_delete`(
		prmfkva_code VARCHAR(50)
)
BEGIN
		DELETE FROM f045 WHERE  fkva_code = prmfkva_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f045_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f045_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f045_get`(
      IN prmfkva_code varchar(50)
)
BEGIN
	Select 
		  fkva_code,
		  flower,
		  fupper,
		  ftarif,
		  fminimum
	From 
		f045
		-- Inner Join F013 On f045.ItemCode = F013.Code		
	Where  f045.fkva_code = prmfkva_code
	Order by f045.fkva_code desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f045_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f045_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f045_insert`(
	prmfkva_code varchar(50),
  prmflower decimal(22,2),
  prmfupper decimal(22,2),
  prmftarif decimal(22,2),
  prmfminimum decimal(22,2),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO f045 (
			fkva_code,
		  flower,
		  fupper,
		  ftarif,
		  fminimum, 
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmfkva_code,
			  prmflower,
			  prmfupper,
			  prmftarif,
			  prmfminimum,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_delete`(
		prmfunit_code VARCHAR(50)
)
Begin
	DELETE From f049
	WHERE f049.funit_code = prmfunit_code;
	Delete From f048 
	WHERE f048.funit_code = prmfunit_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_get`(
       IN prmfunit_code varchar(50)
)
BEGIN
	SELECT 
		Qry1.funit_code,
        Qry1.funit_name,
        Qry1.funit_type,
        Qry1.fkva_code,
        Qry1.fkva_name,
        Qry1.fwtr_code,
        Qry1.fwtr_name,
        Qry1.fkva_daya,
        Qry1.fkva_no,
        Qry1.frent_sqm,
        Qry1.frent_month,
        Qry1.funit_long,
        Qry1.funit_width,
        Qry1.funit_sqm,
        Qry1.funit_land,
        Qry1.funit_sell,
        Qry1.fowner,
        (SELECT NAME FROM f106 WHERE f106.Code=Qry1.fowner) AS fownerName,
        Qry1.ftenant,
         (SELECT NAME FROM f106 WHERE f106.Code=Qry1.ftenant) AS ftenantName,
        Qry1.fstatus,
        Qry1.fphase,
        Qry1.ftrade_name,
        Qry1.fstatuskios,
	Qry1.fbill_Date,
        Qry1.fbill_due,
        Qry1.AccountCodeC,
          Qry1.AccountCodeD,
           Qry1.AccountCodeListrikC,
          Qry1.AccountCodeListrikD,
           Qry1.AccountCodeAirC,
          Qry1.AccountCodeAirD,          
        Qry1.ActiveStatus	
		FROM(	
	SELECT 
	f048.funit_code,
        f048.funit_name,
        f048.funit_type,
        f048.fkva_code,
        F042.fkva_name AS fkva_name,
        f048.fwtr_code,
        F042.fkva_name AS fwtr_name,
        f048.fkva_daya,
        f048.fkva_no,
        f048.frent_sqm,
        f048.frent_month,
        f048.funit_long,
        f048.funit_width,
        f048.funit_sqm,
        f048.funit_land,
        f048.funit_sell,
        f048.fowner,
        f048.ftenant,
        f048.fstatus,
        f048.fphase,
        f048.ftrade_name,
        f048.fstatuskios,
	f048.fbill_Date,
        f048.fbill_due,
        f048.AccountCodeC,
          f048.AccountCodeD,
           f048.AccountCodeListrikC,
          f048.AccountCodeListrikD,
           f048.AccountCodeAirC,
          f048.AccountCodeAirD,          
        f048.ActiveStatus
	FROM 
	f048
		left JOIN F042 ON f048.fkva_code 		= F042.fkva_code	
	LEFT JOIN F044 ON f048.fwtr_code 		= F044.fwtr_code
		WHERE f048.funit_code LIKE prmfunit_code 
)AS Qry1
 		ORDER BY Qry1.funit_code DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_getBuyRent` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_getBuyRent` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_getBuyRent`(
       IN prmfunit_code varchar(50)
)
BEGIN
	SELECT 
		Qry1.funit_code,
        Qry1.funit_name,
        Qry1.funit_type,
        Qry1.fkva_code,
        Qry1.fkva_name,
        Qry1.fwtr_code,
        Qry1.fwtr_name,
        Qry1.fkva_daya,
        Qry1.fkva_no,
        Qry1.frent_sqm,
        Qry1.frent_month,
        Qry1.funit_long,
        Qry1.funit_width,
        Qry1.funit_sqm,
        Qry1.funit_land,
        Qry1.funit_sell,
        Qry1.fowner,
        (SELECT NAME FROM f106 WHERE f106.Code=Qry1.fowner) AS fownerName,
        Qry1.ftenant,
         (SELECT NAME FROM f106 WHERE f106.Code=Qry1.ftenant) AS ftenantName,
        Qry1.fstatus,
        Qry1.fphase,
        Qry1.ftrade_name,
        Qry1.fstatuskios,
	Qry1.fbill_Date,
        Qry1.fbill_due,
        Qry1.AccountCodeC,
          Qry1.AccountCodeD,
           Qry1.AccountCodeListrikC,
          Qry1.AccountCodeListrikD,
           Qry1.AccountCodeAirC,
          Qry1.AccountCodeAirD,          
        Qry1.ActiveStatus	
		FROM(	
	SELECT 
	f048.funit_code,
        f048.funit_name,
        f048.funit_type,
        f048.fkva_code,
        F042.fkva_name AS fkva_name,
        f048.fwtr_code,
        F042.fkva_name AS fwtr_name,
        f048.fkva_daya,
        f048.fkva_no,
        f048.frent_sqm,
        f048.frent_month,
        f048.funit_long,
        f048.funit_width,
        f048.funit_sqm,
        f048.funit_land,
        f048.funit_sell,
        f048.fowner,
        f048.ftenant,
        f048.fstatus,
        f048.fphase,
        f048.ftrade_name,
        f048.fstatuskios,
	f048.fbill_Date,
        f048.fbill_due,
        f048.AccountCodeC,
          f048.AccountCodeD,
           f048.AccountCodeListrikC,
          f048.AccountCodeListrikD,
           f048.AccountCodeAirC,
          f048.AccountCodeAirD,          
        f048.ActiveStatus
	FROM 
	f048
		left JOIN F042 ON f048.fkva_code 		= F042.fkva_code	
	LEFT JOIN F044 ON f048.fwtr_code 		= F044.fwtr_code
		WHERE f048.funit_code LIKE prmfunit_code AND f048.fstatuskios<>3
)AS Qry1
 		ORDER BY Qry1.funit_code DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_getExc` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_getExc` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_getExc`(
       IN prmfunit_code varchar(50)
)
BEGIN
	SELECT 
		Qry1.funit_code,
        Qry1.funit_name,
        Qry1.funit_type,
        Qry1.fkva_code,
        Qry1.fkva_name,
        Qry1.fwtr_code,
        Qry1.fwtr_name,
        Qry1.fkva_daya,
        Qry1.fkva_no,
        Qry1.frent_sqm,
        Qry1.frent_month,
        Qry1.funit_long,
        Qry1.funit_width,
        Qry1.funit_sqm,
        Qry1.funit_land,
        Qry1.funit_sell,
        Qry1.fowner,
        (SELECT NAME FROM f106 WHERE f106.Code=Qry1.fowner) AS fownerName,
        Qry1.ftenant,
         (SELECT NAME FROM f106 WHERE f106.Code=Qry1.ftenant) AS ftenantName,
        Qry1.fstatus,
        Qry1.fphase,
        Qry1.ftrade_name,
        Qry1.fstatuskios,
	Qry1.fbill_Date,
        Qry1.fbill_due,
        Qry1.AccountCodeC,
          Qry1.AccountCodeD,
           Qry1.AccountCodeListrikC,
          Qry1.AccountCodeListrikD,
           Qry1.AccountCodeAirC,
          Qry1.AccountCodeAirD,          
        Qry1.ActiveStatus	
		FROM(	
	SELECT 
	f048.funit_code,
        f048.funit_name,
        f048.funit_type,
        f048.fkva_code,
        F042.fkva_name AS fkva_name,
        f048.fwtr_code,
        F042.fkva_name AS fwtr_name,
        f048.fkva_daya,
        f048.fkva_no,
        f048.frent_sqm,
        f048.frent_month,
        f048.funit_long,
        f048.funit_width,
        f048.funit_sqm,
        f048.funit_land,
        f048.funit_sell,
        f048.fowner,
        f048.ftenant,
        f048.fstatus,
        f048.fphase,
        f048.ftrade_name,
        f048.fstatuskios,
	f048.fbill_Date,
        f048.fbill_due,
        f048.AccountCodeC,
          f048.AccountCodeD,
           f048.AccountCodeListrikC,
          f048.AccountCodeListrikD,
           f048.AccountCodeAirC,
          f048.AccountCodeAirD,          
        f048.ActiveStatus
	FROM 
	f048
		left JOIN F042 ON f048.fkva_code 		= F042.fkva_code	
	LEFT JOIN F044 ON f048.fwtr_code 		= F044.fwtr_code
		WHERE f048.funit_code LIKE prmfunit_code AND LEFT(f048.funit_code,3) ='PAM'
)AS Qry1
 		ORDER BY Qry1.funit_code DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_getUnitService` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_getUnitService` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_getUnitService`(
      IN prmfunit_code VARCHAR(50)
)
BEGIN
	SELECT f049.funit_code , f049.fsrv_code,f020.name,f020.finterva AS fsrv_type,
  f049.fsrv_term,CASE WHEN f020.finterva='Sqm' THEN f020.frupiah  * f048.funit_sqm *f049.fsrv_term
  ELSE f020.frupiah*f049.fsrv_term  END AS fsrv_total,
  CASE WHEN f020.finterva='Sqm' THEN f020.frupiah  * f048.funit_sqm 
  ELSE f020.frupiah  END AS fsrv_amount,f020.fvat,f020.fadm_fee,f049.fbill_to,f049.fbill_date,f049.fbill_due
   FROM f049  
  LEFT JOIN f020  ON f049.fsrv_code=f020.code 
  LEFT JOIN f048  ON f048.funit_code=f049.funit_code
  WHERE f048.funit_code = prmfunit_code
    ORDER BY funit_code
  
  -- select * from f048 -- tblUnit
  --   SELECT * FROM f020 -- tblRetribusi
     --  SELECT * FROM f049 -- tblUnitService
     ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_getUnitService_amount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_getUnitService_amount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_getUnitService_amount`(
      -- IN prmfunit_code VARCHAR(50)
)
BEGIN
			SELECT f049.funit_code , f049.fsrv_code,f020.name,f020.finterva AS fsrv_type,
  f049.fsrv_term,CASE WHEN f020.finterva='Sqm' THEN f020.frupiah  * f048.funit_sqm *f049.fsrv_term
  ELSE f020.frupiah*f049.fsrv_term  END AS fsrv_total,
  CASE WHEN f020.finterva='Sqm' THEN f020.frupiah  * f048.funit_sqm 
  ELSE f020.frupiah  END AS fsrv_amount,f020.fvat,f020.fadm_fee,f049.fbill_to,f049.fbill_date,f049.fbill_due
   FROM f049  
  LEFT JOIN f020  ON f049.fsrv_code=f020.code 
  LEFT JOIN f048  ON f048.funit_code=f049.funit_code
  -- WHERE f048.funit_code = prmfunit_code
    ORDER BY funit_code
      
     ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_getUnitService_SUM` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_getUnitService_SUM` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_getUnitService_SUM`(
      -- IN prmfunit_code VARCHAR(50)
)
BEGIN
			SELECT CASE WHEN ftenant=ISNULL(ftenant) THEN fowner ELSE ftenant END
AS cust_code,f049.funit_code ,f048.funit_name,f048.ftrade_name, f049.fsrv_code,f020.name,f020.finterva AS fsrv_type,
  f049.fsrv_term, CASE WHEN f020.finterva='Sqm' THEN SUM(f020.frupiah  * f048.funit_sqm *f049.fsrv_term)
  ELSE SUM(f020.frupiah*f049.fsrv_term)  END AS fsrv_total,
  CASE WHEN f020.finterva='Sqm' THEN f020.frupiah  * f048.funit_sqm 
  ELSE f020.frupiah  END AS fsrv_amount,f020.fvat,f020.fadm_fee,f049.fbill_to,f049.fbill_date,f049.fbill_due,f048.ActiveStatus
   FROM f049  
  LEFT JOIN f020  ON f049.fsrv_code=f020.code 
  LEFT JOIN f048  ON f048.funit_code=f049.funit_code
       -- WHERE f048.funit_code LIKE '%%'
         GROUP BY funit_code
       ORDER BY funit_code 
      
     ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_get_cusName` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_get_cusName` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_get_cusName`(
       IN prmfunit_code varchar(50)
)
BEGIN
		SELECT Qry1.cust_code, 
	IF(ISNULL(f106.name), "", f106.name) AS cust_name,
	f106.name AS cust_name, 
	Qry1.funit_code,Qry1.funit_name,Qry1.funit_type,
        Qry1.fkva_code,
        IF(ISNULL(F042.fkva_name), "", F042.fkva_name) AS fkva_name,
      -- F042.fkva_name AS fkva_name,
        Qry1.fwtr_code,
        IF(ISNULL(F044.fwtr_name), "", F042.fkva_name) AS fwtr_name,
      -- F044.fwtr_name AS fwtr_name,
        Qry1.fkva_daya,
        Qry1.fkva_no,
        Qry1.frent_sqm,
        Qry1.frent_month,
        Qry1.funit_long,
        Qry1.funit_width,
        Qry1.funit_sqm,
        Qry1.funit_land,
        Qry1.funit_sell,
        Qry1.fowner,
        Qry1.ftenant,
        Qry1.fstatus,
        Qry1.fphase,
        Qry1.ftrade_name,
        Qry1.fstatuskios,
        Qry1.ActiveStatus
         FROM (
SELECT 
CASE WHEN ftenant=ISNULL(ftenant) THEN fowner ELSE ftenant END
AS cust_code,
 f048.funit_code,f048.funit_name,f048.funit_type,
        f048.fkva_code,
       -- F042.fkva_name AS fkva_name,
        f048.fwtr_code,
       -- F042.fkva_name AS fwtr_name,
        f048.fkva_daya,
        f048.fkva_no,
        f048.frent_sqm,
        f048.frent_month,
        f048.funit_long,
        f048.funit_width,
        f048.funit_sqm,
        f048.funit_land,
        f048.funit_sell,
        f048.fowner,
        f048.ftenant,
        f048.fstatus,
        f048.fphase,
        f048.ftrade_name,
        f048.fstatuskios,
        f048.ActiveStatus
         FROM f048 WHERE ftenant=ISNULL(ftenant) OR fowner=ISNULL(fowner)
)AS Qry1
	LEFT JOIN f106 ON  f106.code = Qry1.cust_code
	LEFT JOIN F042 ON Qry1.fkva_code 		= F042.fkva_code	
	LEFT  JOIN F044 ON Qry1.fwtr_code 		= F044.fwtr_code
	WHERE Qry1.funit_code LIKE prmfunit_code
	ORDER BY Qry1.funit_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_get_f106Cust` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_get_f106Cust` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_get_f106Cust`(
      -- IN prmfunit_code varchar(50)
)
BEGIN
		SELECT 	IF(ISNULL(Qry1.cust_code), "", Qry1.cust_code) AS cust_code,IF(ISNULL(f106.name), "", f106.name) AS cust_name,
	IF(ISNULL(Qry1.funit_name), "", Qry1.funit_name) AS funit_name, IF(ISNULL(Qry1.fstatuskios), "", Qry1.fstatuskios) AS fstatuskios, 
	IF(ISNULL(Qry1.ftrade_name), "", Qry1.ftrade_name) AS ftrade_name,
	ROUND(IF(ISNULL(Qry1.funit_width), 0, Qry1.funit_width)) AS funit_width,
	-- IF(ISNULL(Qry1.funit_width), 0, Qry1.funit_width) AS funit_width,
	ROUND(IF(ISNULL(Qry1.funit_sqm), 0, Qry1.funit_sqm)) AS funit_sqm,
	-- IF(ISNULL(Qry1.funit_sqm), 0, Qry1.funit_sqm) AS funit_sqm,
	ROUND(IF(ISNULL(Qry1.funit_land), 0, Qry1.funit_land)) AS funit_land,
	-- IF(ISNULL(Qry1.funit_land), 0, Qry1.funit_land) AS funit_land,
	Qry1.funit_code , Qry1.fsrv_code,Qry1.name,Qry1.fsrv_type,
	Qry1.fsrv_term,
	IF(ISNULL(Qry1.fsrv_total), 0, Qry1.fsrv_total) AS fsrv_total,
	IF(ISNULL(Qry1.fsrv_amount), 0, Qry1.fsrv_amount) AS fsrv_amount,
	Qry1.fvat,Qry1.fadm_fee,Qry1.fbill_to,Qry1.fbill_date,Qry1.fbill_due,
	IF(ISNULL(Qry1.ActiveStatus), FALSE , Qry1.ActiveStatus) AS ActiveStatus
FROM (
	SELECT CASE WHEN ftenant=ISNULL(ftenant) THEN fowner ELSE ftenant END
		AS cust_code,f049.funit_code ,
		f048.funit_name,f048.fstatuskios,f048.ftrade_name,
		f048.funit_width,f048.funit_sqm,f048.funit_land,
		f049.fsrv_code,f020.name,f020.finterva AS fsrv_type,
		f049.fsrv_term, 
		CASE WHEN f020.finterva='Sqm' THEN (f020.frupiah  * ROUND(f048.funit_sqm) *f049.fsrv_term)
		ELSE (f020.frupiah*f049.fsrv_term)  END AS fsrv_total,
		CASE WHEN f020.finterva='Sqm' THEN f020.frupiah  * ROUND(f048.funit_sqm) 
		ELSE f020.frupiah END AS fsrv_amount,
		f020.fvat,f020.fadm_fee,f049.fbill_to,f049.fbill_date,f049.fbill_due,f048.ActiveStatus
	FROM f049  
	LEFT JOIN f020  ON f049.fsrv_code=f020.code 
	LEFT JOIN f048  ON f048.funit_code=f049.funit_code
         -- WHERE f048.funit_code LIKE '%%'
        -- GROUP BY funit_code
       -- ORDER BY funit_code 
     ) AS Qry1
       LEFT JOIN f106 ON Qry1.cust_code=f106.Code
       WHERE Qry1.cust_code <> "" -- hanya yg ada pada table block unit saja yg tampil f048
       GROUP BY Qry1.funit_code
       ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_insert`(
	 prmfunit_code VARCHAR(50),
	 prmfunit_name VARCHAR(100),
	 prmfunit_type VARCHAR(50),
	 prmfkva_code VARCHAR(50),
	 prmfwtr_code VARCHAR(50),
	 prmfkva_daya DECIMAL(22,2),
	 prmfkva_no VARCHAR(50),
	 prmfrent_sqm DECIMAL(22,2),
	 prmfrent_month DECIMAL(22,2),
	 prmfunit_long DECIMAL(22,2),
	 prmfunit_width DECIMAL(22,2),
	 prmfunit_sqm DECIMAL(22,2),
	 prmfunit_land DECIMAL(22,2),
	 prmfunit_sell DECIMAL(22,2),
	 prmfowner VARCHAR(50),
	 prmftenant VARCHAR(50),
	 prmfstatus VARCHAR(1),
	 prmfphase DECIMAL(22,2),
	 prmftrade_name VARCHAR(200),
	 prmfstatuskios VARCHAR(1),
	 prmAccountCodeC VARCHAR(50),
	  prmAccountCodeD VARCHAR(50),
	     prmAccountCodeListrikC VARCHAR(50),
	  prmAccountCodeListrikD VARCHAR(50),
	   prmAccountCodeAirC VARCHAR(50),
	  prmAccountCodeAirD VARCHAR(50),
	  prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO f048 
		(
			  funit_code,
			funit_name,
			funit_type,
			fkva_code,
			fwtr_code,
			fkva_daya,
			fkva_no,
			frent_sqm,
			frent_month,
			funit_long,
			funit_width,
			funit_sqm,
			funit_land,
			funit_sell,
			fowner,
			ftenant,
			fstatus,
			fphase,
			ftrade_name,
			fstatuskios,
			 AccountCodeC,
			AccountCodeD,
			 AccountCodeListrikC,
			AccountCodeListrikD,
			 AccountCodeAirC,
			AccountCodeAirD,
			  CreatedBy, 
			  CreatedDate
		)
		VALUES
		(
	 prmfunit_code,
	 prmfunit_name,
	prmfunit_type,
	 prmfkva_code,
	 prmfwtr_code,
	 prmfkva_daya,
	 prmfkva_no,
	 prmfrent_sqm,
	 prmfrent_month,
	 prmfunit_long,
	 prmfunit_width,
	 prmfunit_sqm,
	 prmfunit_land,
	 prmfunit_sell,
	 prmfowner,
	 prmftenant,
	 prmfstatus,
	 prmfphase,
	 prmftrade_name,
	  prmAccountCodeC,
	  prmAccountCodeD,
	    prmAccountCodeListrikC,
	  prmAccountCodeListrikD,
	    prmAccountCodeAirC,
	  prmAccountCodeAirD,
	 prmfstatuskios,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_Search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_Search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_Search`(
       IN prmfunit_code varchar(50),
       IN prmfunit_name varchar(100),
	IN prmftrade_name varchar(200)
)
BEGIN
	Select 
	f048.funit_code,
        f048.funit_name,
        f048.funit_type,
        f048.fkva_code,
        -- F042.fkva_name as fkva_name,
        f048.fwtr_code,
        -- F042.fkva_name AS fwtr_name,
        f048.fkva_daya,
        f048.fkva_no,
        f048.frent_sqm,
        f048.frent_month,
        f048.funit_long,
        f048.funit_width,
        f048.funit_sqm,
        f048.funit_land,
        f048.funit_sell,
        f048.fowner,
        f048.ftenant,
        f048.fstatus,
        f048.fphase,
        f048.ftrade_name,
        f048.fstatuskios,
	f048.fbill_Date,
        f048.fbill_due,
	f048.AccountCodeC,
	f048.AccountCodeD,
	  f048.AccountCodeListrikC,
          f048.AccountCodeListrikD,
           f048.AccountCodeAirC,
          f048.AccountCodeAirD,          
        f048.ActiveStatus
	From 
	f048
	-- INNER JOIN F042 ON f048.fkva_code 		= F042.fkva_code	
	-- INNER JOIN F044 ON f048.fwtr_code 		= F044.fwtr_code
		Where f048.funit_code like prmfunit_code
		and  f048.funit_name like prmfunit_name
		and f048.ftrade_name like prmftrade_name
		Order BY f048.funit_code DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f048_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f048_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f048_update`(
	prmfunit_code VARCHAR(50),
	 prmfunit_name VARCHAR(100),
	 prmfunit_type VARCHAR(50),
	 prmfkva_code VARCHAR(50),
	 prmfwtr_code VARCHAR(50),
	 prmfkva_daya DECIMAL(22,2),
	 prmfkva_no VARCHAR(50),
	 prmfrent_sqm DECIMAL(22,2),
	 prmfrent_month DECIMAL(22,2),
	 prmfunit_long DECIMAL(22,2),
	 prmfunit_width DECIMAL(22,2),
	 prmfunit_sqm DECIMAL(22,2),
	 prmfunit_land DECIMAL(22,2),
	 prmfunit_sell DECIMAL(22,2),
	 prmfowner VARCHAR(50),
	 prmftenant VARCHAR(50),
	 prmfstatus VARCHAR(1),
	 prmfphase DECIMAL(22,2),
	 prmftrade_name VARCHAR(200),
	 prmfstatuskios VARCHAR(1),
	 prmAccountCodeC VARCHAR(50),
	  prmAccountCodeD VARCHAR(50),
	   prmAccountCodeListrikC VARCHAR(50),
	  prmAccountCodeListrikD VARCHAR(50),
	   prmAccountCodeAirC VARCHAR(50),
	  prmAccountCodeAirD VARCHAR(50),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE f048 SET
			 funit_code=prmfunit_code,
			funit_name=prmfunit_name,
			funit_type=prmfunit_type,
			fkva_code=prmfkva_code,
			fwtr_code=prmfwtr_code,
			fkva_daya=prmfkva_daya,
			fkva_no=prmfkva_no,
			frent_sqm=prmfrent_sqm,
			frent_month=prmfrent_month,
			funit_long=prmfunit_long,
			funit_width=prmfunit_width,
			funit_sqm=prmfunit_sqm,
			funit_land=prmfunit_land,
			funit_sell=prmfunit_sell,
			fowner=prmfowner,
			ftenant=prmftenant,
			fstatus=prmfstatus,
			fphase=prmfphase,
			ftrade_name=prmftrade_name,
			fstatuskios=prmfstatuskios,
			AccountCodeC=prmAccountCodeC,
			AccountCodeD=prmAccountCodeD,
			AccountCodeListrikC=prmAccountCodeListrikC,
			AccountCodeListrikD=prmAccountCodeListrikD,
			AccountCodeAirC=prmAccountCodeAirC,
			AccountCodeAirD=prmAccountCodeAirD,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			funit_code 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f049_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f049_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f049_delete`(
		prmfunit_code VARCHAR(50)
)
BEGIN
		DELETE FROM f049 WHERE  funit_code = prmfunit_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f049_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f049_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f049_get`(
      IN prmfunit_code varchar(50)
)
BEGIN
	Select 
		  f049.funit_code,
		 	f049.fsrv_code,
			 F020.name as fsrv_type,
			 f049.fsrv_term,
			 f049.fsrv_amount,
			 f049.fsrv_total,
			 f049.fbill_to,
			 f049.fbill_Date,
			 f049.fbill_due
	From 
		f049
		 Inner Join F020 On f049.fsrv_code = F020.Code		
	Where  f049.funit_code = prmfunit_code
	Order by f049.funit_code desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f049_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f049_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f049_insert`(
	prmfunit_code VARCHAR(50),
	 prmfsrv_code VARCHAR(100),
	 prmfsrv_type VARCHAR(50),
	 prmfsrv_term DECIMAL(22,2),
	 prmfsrv_amount DECIMAL(22,2),
	 prmfsrv_total DECIMAL(22,2),
	 prmfbill_to VARCHAR(200),
	 prmfbill_Date INT(2),
	 prmfbill_due INT(2),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO f049 (
			funit_code,
			fsrv_code,
			 fsrv_type,
			 fsrv_term,
			 fsrv_amount,
			 fsrv_total,
			 fbill_to,
			 fbill_Date,
			 fbill_due,
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmfunit_code,
			 prmfsrv_code,
			 prmfsrv_type,
			 prmfsrv_term,
			 prmfsrv_amount,
			 prmfsrv_total,
			 prmfbill_to,
			 prmfbill_Date,
			 prmfbill_due,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f050_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f050_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f050_delete`(IN prmtrx_type VARCHAR(50) )
BEGIN
	DELETE FROM f050 WHERE f050.trx_type = prmtrx_type;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f050_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f050_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f050_get`(prmtrx_type varchar(50)
	
)
BEGIN
	
		SELECT 
		trx_type,
		trx_desc,
	 trx_modl,
	 trx_clas,
	 trx_bilt,
	 trx_bilg,
	 prx_code,
	 acc_acrv,
	 acc_incm,
	 trx_stmd,
	 trx_pnlt,
	 trx_pnlp,
		f050.ActiveStatus
		FROM f050
		WHERE f050.ActiveStatus = 1 and f050.trx_type=prmtrx_type
		Order By f050.trx_type;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f050_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f050_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f050_insert`(
	prmtrx_type VARCHAR(50),
	prmtrx_desc VARCHAR(100),
 prmtrx_modl varchar(3),
 prmtrx_clas varchar(20),
 prmtrx_bilt varchar(2),
 prmtrx_bilg varchar(20),
 prmprx_code varchar(20),
 prmacc_acrv varchar(20),
 prmacc_incm varchar(20),
 prmtrx_stmd decimal(1,0),
 prmtrx_pnlt decimal(1,0),
 prmtrx_pnlp decimal(12,2),
 prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO f050 
	(
	trx_type,
	trx_desc,
 trx_modl,
 trx_clas,
 trx_bilt,
 trx_bilg,
 prx_code,
 acc_acrv,
 acc_incm,
 trx_stmd,
 trx_pnlt,
 trx_pnlp, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(
	prmtrx_type,
	prmtrx_desc,
 prmtrx_modl,
 prmtrx_clas,
 prmtrx_bilt,
 prmtrx_bilg,
 prmprx_code,
 prmacc_acrv,
 prmacc_incm,
 prmtrx_stmd,
 prmtrx_pnlt,
 prmtrx_pnlp,
  1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f050_search_trx_type` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f050_search_trx_type` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f050_search_trx_type`(prmtrx_type VARCHAR(50))
BEGIN
		SELECT 
			f050.*
		FROM 
			f050
		WHERE 
			f050.trx_type LIKE prmtrx_type And f050.ActiveStatus = 1
		Order By 
			f050.trx_type;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f050_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f050_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f050_update`(prmtrx_type VARCHAR(50),
	prmtrx_desc VARCHAR(100),
 prmtrx_modl VARCHAR(3),
 prmtrx_clas VARCHAR(20),
 prmtrx_bilt VARCHAR(2),
 prmtrx_bilg VARCHAR(20),
 prmprx_code VARCHAR(20),
 prmacc_acrv VARCHAR(20),
 prmacc_incm VARCHAR(20),
 prmtrx_stmd DECIMAL(1,0),
 prmtrx_pnlt DECIMAL(1,0),
 prmtrx_pnlp DECIMAL(12,2), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldtrx_type VARCHAR(50))
BEGIN
	UPDATE f050 
	SET trx_type=prmtrx_type,
	trx_desc=prmtrx_desc,
 trx_modl=prmtrx_modl,
 trx_clas=prmtrx_clas,
 trx_bilt=prmtrx_bilt,
 trx_bilg=prmtrx_bilg,
 prx_code=prmprx_code,
 acc_acrv=prmacc_acrv,
 acc_incm=prmacc_incm,
 trx_stmd=prmtrx_stmd,
 trx_pnlt=prmtrx_pnlt,
 trx_pnlp=pemtrx_pnlp,
  -- ActiveStatus = prmActiveStatus,
	    UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE f050.trx_type = prmOldtrx_type;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
IF (prmActiveStatus = 2) THEN
		SELECT  f051.fdoc_no,
 f051.fdoc_date,
 f051.fcust_code,
 f051.ftrade_name,
 f051.fdesc,
 f051.fcont_no,
 f051.fcont_date,
 f051.fstart_period,
 f051.fend_period,
 f051.fstatus,
 f051.fterminate,
 f051.fdeposit,
 f051.fdepo_plan,
 f051.frent_rate,
 f051.frent_basis,
 f051.frent_total,
 f051.frent_tax,
 f051.funit_sqm,
 f051.frent_plan,
 f051.funit_code,
 f051.fapproved,
 f051.ActiveStatus
		FROM f051
		WHERE f051.fstatus = 1
		ORDER BY f051.funit_code;
	ELSE
		SELECT  f051.fdoc_no,
 f051.fdoc_date,
 f051.fcust_code,
 f051.ftrade_name,
 f051.fdesc,
 f051.fcont_no,
 f051.fcont_date,
 f051.fstart_period,
 f051.fend_period,
 f051.fstatus,
 f051.fterminate,
 f051.fdeposit,
 f051.fdepo_plan,
 f051.frent_rate,
 f051.frent_basis,
 f051.frent_total,
 f051.frent_tax,
 f051.funit_sqm,
 f051.frent_plan,
 f051.funit_code,
 f051.fapproved,
 f051.ActiveStatus
		FROM f051
		WHERE f051.ActiveStatus = prmActiveStatus 
		AND f051.fstatus = 1
		ORDER BY f051.funit_code;
	END IF
	
	;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_getBuyRentReminder` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_getBuyRentReminder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_getBuyRentReminder`(
       IN prmDate date
)
BEGIN
	SELECT *,f048.funit_name,f048.ftrade_name
	FROM f051
	LEFT JOIN f048 ON f051.funit_code = f048.funit_code
	WHERE f051.fend_period= prmDate	
	AND LEFT(f048.funit_code,3) <>'PAM'
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_getExbReminder` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_getExbReminder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_getExbReminder`(
       IN prmDate date
)
BEGIN
	SELECT *,f048.funit_name,f048.ftrade_name
	FROM f051
	LEFT JOIN f048 ON f051.funit_code = f048.funit_code
	WHERE f051.fend_period= prmDate  
	AND LEFT(f048.funit_code,3) ='PAM'	
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_get_1` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_get_1` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_get_1`(
	
)
BEGIN
		SELECT a.*,IF(ISNULL(b.name), "", b.name) AS fcust_name,c.funit_sqm,c.funit_name 
FROM f051 a LEFT JOIN f106 b ON a.fcust_code=b.code 
LEFT JOIN f048 c ON a.funit_code=c.funit_code WHERE a.fstatus=1 ORDER BY fdoc_date,fdoc_no 
	;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_get_ALL` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_get_ALL` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_get_ALL`(
	)
BEGIN
		SELECT a.*,IF(ISNULL(b.name), "", b.name) AS fcust_name,c.funit_sqm,c.funit_name 
FROM f051 a LEFT JOIN f106 b ON a.fcust_code=b.code 
LEFT JOIN f048 c ON a.funit_code=c.funit_code WHERE a.fstatus=1 
ORDER BY fdoc_date,fdoc_no 
	;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_get_ALLPAM` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_get_ALLPAM` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_get_ALLPAM`(
	)
BEGIN
	SELECT a.*,IF(ISNULL(b.name), "", b.name) AS fcust_name,c.funit_sqm,c.funit_name 
FROM f051 a LEFT JOIN f106 b ON a.fcust_code=b.code 
LEFT JOIN f048 c ON a.funit_code=c.funit_code WHERE a.fstatus=1 AND LEFT(a.funit_code,3) = 'PAM'
ORDER BY fdoc_date,fdoc_no 
	;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_get_ALLrent` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_get_ALLrent` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_get_ALLrent`(
	)
BEGIN
	SELECT a.*,IF(ISNULL(b.name), "", b.name) AS fcust_name,c.funit_sqm,c.funit_name 
FROM f051 a LEFT JOIN f106 b ON a.fcust_code=b.code 
LEFT JOIN f048 c ON a.funit_code=c.funit_code WHERE a.fstatus=1 AND LEFT(a.funit_code,3) <> 'PAM'
ORDER BY fdoc_date,fdoc_no 
	;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_get_Unit` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_get_Unit` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_get_Unit`(
	prmfunit_code varchar(50),
	prmfcust_code varchar(50)
)
BEGIN
		SELECT a.*,IF(ISNULL(b.name), "", b.name) AS fcust_name,c.funit_sqm,c.funit_name 
FROM f051 a LEFT JOIN f106 b ON a.fcust_code=b.code 
LEFT JOIN f048 c ON a.funit_code=c.funit_code WHERE a.fstatus=1 AND c.funit_code = prmfunit_code AND a.fcust_code = prmfcust_code
ORDER BY fdoc_date,fdoc_no 
	;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_insert`(
	  prmfdoc_no VARCHAR(25),
	 prmfdoc_date DATETIME,
	 prmqtyshop INT,
	 prmqtycounter INT,
	 prmfcust_code VARCHAR(50),
	 prmftrade_name VARCHAR(200),
	 prmfdesc VARCHAR(200),
	 prmfcont_no VARCHAR(20),
	 prmfcont_date DATETIME,
	 prmfstart_period DATETIME,
	 prmfend_period DATETIME,
	-- prmfstatus VARCHAR(1),
	-- prmfterminate datetime,
	 prmfdeposit DECIMAL(22,2),
	 prmfdepo_plan VARCHAR(200),
	 prmfrent_rate DECIMAL(18,0),
	 prmfrent_basis VARCHAR(10),
	 prmfrent_total DECIMAL(18,0),
	 prmfrent_tax VARCHAR(1),
	 prmfunit_sqm DECIMAL(18,2),
	 prmfrent_plan VARCHAR(200),
	 prmfunit_code VARCHAR(20),
	 -- prmfapproved varchar(1),
	 prmCreatedBy VARCHAR(50)
	
)
BEGIN
		INSERT INTO f051 
		(
			  fdoc_no,
			 fdoc_date,
			 qtyshop,
			 qtycounter,
			 fcust_code,
			 ftrade_name,
			 fdesc,
			 fcont_no,
			 fcont_date,
			 fstart_period,
			 fend_period,
			 fstatus,
			 -- fterminate,
			 fdeposit,
			 fdepo_plan,
			 frent_rate,
			 frent_basis,
			 frent_total,
			 frent_tax,
			 funit_sqm,
			 frent_plan,
			 funit_code,
			 fapproved,
			  CreatedBy, 
			  CreatedDate
		)
		VALUES
		(
			  prmfdoc_no,
	 prmfdoc_date,
	 prmqtyshop,
	 prmqtycounter,
	 prmfcust_code,
	 prmftrade_name,
	 prmfdesc,
	 prmfcont_no,
	 prmfcont_date,
	 prmfstart_period,
	 prmfend_period,
	 1,
	 -- prmfterminate,
	 prmfdeposit,
	 prmfdepo_plan,
	 prmfrent_rate,
	 prmfrent_basis,
	 prmfrent_total,
	 prmfrent_tax,
	 prmfunit_sqm,
	 prmfrent_plan,
	 prmfunit_code,
	 1,
			prmCreatedBy,
			NOW()
		);
		
UPDATE f048 SET ftenant=prmfcust_code, fstatuskios=2, ftrade_name=prmftrade_name  WHERE funit_code=prmfunit_code;
INSERT INTO f053 (fdoc_no,funit_code,fcust_code,fstatusINV) VALUES (prmfdoc_no,prmfunit_code,prmfcust_code,0);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_insert_Owner` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_insert_Owner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_insert_Owner`(
	  prmfdoc_no varchar(25),
	 prmfdoc_date DATETIME,
	 prmfcust_code varchar(50),
	 prmftrade_name VARCHAR(200),
	 prmfdesc varchar(200),
	 prmfcont_no VARCHAR(20),
	 prmfcont_date datetime,
	 prmfstart_period DATETIME,
	 prmfend_period datetime,
	-- prmfstatus VARCHAR(1),
	-- prmfterminate datetime,
	 prmfdeposit DECIMAL(22,2),
	 prmfdepo_plan varchar(50),
	 prmfrent_rate DECIMAL(18,0),
	 prmfrent_basis varchar(10),
	 prmfrent_total DECIMAL(18,0),
	 prmfrent_tax varchar(1),
	 prmfunit_sqm DECIMAL(18,2),
	 prmfrent_plan varchar(50),
	 prmfunit_code VARCHAR(20),
	 -- prmfapproved varchar(1),
	 prmCreatedBy VARCHAR(50)
	
)
BEGIN
		INSERT INTO f051 
		(
			  fdoc_no,
			 fdoc_date,
			 fcust_code,
			 ftrade_name,
			 fdesc,
			 fcont_no,
			 fcont_date,
			 fstart_period,
			 fend_period,
			 fstatus,
			 -- fterminate,
			 fdeposit,
			 fdepo_plan,
			 frent_rate,
			 frent_basis,
			 frent_total,
			 frent_tax,
			 funit_sqm,
			 frent_plan,
			 funit_code,
			 fapproved,
			  CreatedBy, 
			  CreatedDate
		)
		VALUES
		(
			  prmfdoc_no,
	 prmfdoc_date,
	 prmfcust_code,
	 prmftrade_name,
	 prmfdesc,
	 prmfcont_no,
	 prmfcont_date,
	 prmfstart_period,
	 prmfend_period,
	 1,
	 -- prmfterminate,
	 prmfdeposit,
	 prmfdepo_plan,
	 prmfrent_rate,
	 prmfrent_basis,
	 prmfrent_total,
	 prmfrent_tax,
	 prmfunit_sqm,
	 prmfrent_plan,
	 prmfunit_code,
	 1,
			prmCreatedBy,
			now()
		);
		
Update f048 set fowner=prmfcust_code, ftrade_name=prmftrade_name  where funit_code=prmfunit_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_update`(
	 -- prmfdoc_no VARCHAR(25),
	 prmfdoc_date DATETIME,
	 prmqtyshop INT,
	 prmqtycounter INT,
	 prmfcust_code VARCHAR(50),
	 prmftrade_name VARCHAR(200),
	 prmfdesc VARCHAR(200),
	 prmfcont_no VARCHAR(20),
	 prmfcont_date DATETIME,
	 prmfstart_period DATETIME,
	 prmfend_period DATETIME,
	-- prmfstatus VARCHAR(1),
	-- prmfterminate datetime,
	 prmfdeposit DECIMAL(22,2),
	 prmfdepo_plan VARCHAR(50),
	 prmfrent_rate DECIMAL(18,0),
	 prmfrent_basis VARCHAR(10),
	 prmfrent_total DECIMAL(18,0),
	 prmfrent_tax VARCHAR(1),
	 prmfunit_sqm DECIMAL(18,2),
	 prmfrent_plan VARCHAR(50),
	 prmfunit_code VARCHAR(20),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE f051 SET
			 -- fdoc_no,
			 fdoc_date=prmfdoc_date,
			 qtyshop = prmqtyshop,
			 qtycounter = prmqtycounter,
			 fcust_code=prmfcust_code,
			 ftrade_name=prmftrade_name,
			 fdesc=prmfdesc,
			 fcont_no=prmfcont_no,
			 fcont_date=prmfcont_date,
			 fstart_period=prmfstart_period,
			 fend_period=prmfend_period,
			-- fstatus=prmfstatus,
			 -- fterminate,
			 fdeposit=prmfdeposit,
			 fdepo_plan=prmfdepo_plan,
			 frent_rate=prmfrent_rate,
			 frent_basis=prmfrent_basis,
			 frent_total=prmfrent_total,
			 frent_tax=prmfrent_tax,
			 funit_sqm=prmfunit_sqm,
			 frent_plan=prmfrent_plan,
			 funit_code=prmfunit_code,
			 -- fapproved,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	NOW()
		WHERE
			fdoc_no 				= 	prmOldCode;
			
UPDATE f048 SET ftenant=prmfcust_code, fstatuskios=2, ftrade_name=prmftrade_name  WHERE funit_code=prmfunit_code;
UPDATE f053 SET funit_code=prmfunit_code,fcust_code=prmfcust_code WHERE fdoc_no=prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f051_update_Owner` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f051_update_Owner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f051_update_Owner`(
	 -- prmfdoc_no VARCHAR(25),
	 prmfdoc_date DATETIME,
	 prmfcust_code VARCHAR(50),
	 prmftrade_name VARCHAR(200),
	 prmfdesc VARCHAR(200),
	 prmfcont_no VARCHAR(20),
	 prmfcont_date DATETIME,
	 prmfstart_period DATETIME,
	 prmfend_period DATETIME,
	-- prmfstatus VARCHAR(1),
	-- prmfterminate datetime,
	 prmfdeposit DECIMAL(22,2),
	 prmfdepo_plan VARCHAR(50),
	 prmfrent_rate DECIMAL(18,0),
	 prmfrent_basis VARCHAR(10),
	 prmfrent_total DECIMAL(18,0),
	 prmfrent_tax VARCHAR(1),
	 prmfunit_sqm DECIMAL(18,2),
	 prmfrent_plan VARCHAR(50),
	 prmfunit_code VARCHAR(20),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE f051 SET
			 -- fdoc_no,
			 fdoc_date=prmfdoc_date,
			 fcust_code=prmfcust_code,
			 ftrade_name=prmftrade_name,
			 fdesc=prmfdesc,
			 fcont_no=prmfcont_no,
			 fcont_date=prmfcont_date,
			 fstart_period=prmfstart_period,
			 fend_period=prmfend_period,
			-- fstatus=prmfstatus,
			 -- fterminate,
			 fdeposit=prmfdeposit,
			 fdepo_plan=prmfdepo_plan,
			 frent_rate=prmfrent_rate,
			 frent_basis=prmfrent_basis,
			 frent_total=prmfrent_total,
			 frent_tax=prmfrent_tax,
			 funit_sqm=prmfunit_sqm,
			 frent_plan=prmfrent_plan,
			 funit_code=prmfunit_code,
			 -- fapproved,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			fdoc_no 				= 	prmOldCode;
			
UPDATE f048 SET fowner=prmfcust_code,  ftrade_name=prmftrade_name  WHERE funit_code=prmfunit_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f052_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f052_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f052_delete`(IN prmfdoc_no VARCHAR(25) )
BEGIN
	DELETE FROM f052 WHERE f052.fdoc_no = prmfdoc_no;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f052_get_1` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f052_get_1` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f052_get_1`(
	prmfdoc_no VARCHAR(25) 
)
BEGIN
		select * from f052 where fdoc_no=prmfdoc_no and fbill_type=0 order by fbill_date 
	;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f052_get_2` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f052_get_2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f052_get_2`(
	prmfdoc_no VARCHAR(25) 
)
BEGIN
		select * from f052 where fdoc_no=prmfdoc_no and fbill_type=1 order by fbill_date 
	;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f052_get_forINV` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f052_get_forINV` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f052_get_forINV`(
	prmYear varchar(4),prmMonth varchar(2)
)
BEGIN
		SELECT 
f052.fdue_date,
f052.fdoc_no,
f051.fdoc_date,
f051.fcust_code,
f106.ContactPerson,
f106.Name,
f051.ftrade_name,
f051.funit_code,
f048.funit_name,
f051.funit_sqm,
f051.frent_tax,
f051.fapproved,
f051.ActiveStatus,
f052.fbill_rp,
f052.fbill_ppn,
f052.fbill_tot,
f052.ftrx_type,
f052.ftrx_desc,f052.fbill_no,f052.fbill_date
 FROM f052 
INNER JOIN f051 ON f051.fdoc_no = f052.fdoc_no
INNER JOIN f106 ON f106.Code=f051.fcust_code
INNER JOIN F048 ON F048.funit_code = f051.funit_code
WHERE YEAR(f052.fbill_date)=prmYear AND MONTH(f052.fbill_date)=prmMonth AND f052.fbill_no=''  AND f051.ActiveStatus=1
ORDER BY f051.funit_code
 
	;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F052_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F052_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F052_insert`(
	 prmfdoc_no varchar(25),
	 prmfbill_date datetime,
	prmfbill_rp decimal(20,0),
	
	 prmfbill_ppn decimal(20,0),
	 prmfbill_tot decimal(20,0),	
	 prmftrx_type varchar(10),
	 
	 prmftrx_desc varchar(200),	
	 prmfbilling int(1),
	 prmfbilling_date int(1),
	--  prmfbill_type varchar(1),
	 
	 prmfdue_date int(1),
	 prmfdoc_type varchar(10),
	 prmCreatedBy VARCHAR(50)
                 	
)
BEGIN
		INSERT INTO f052
		(
			 fdoc_no,
			 fbill_date,
			fbill_rp,
			
			 fbill_ppn,
			 fbill_tot,			
			 ftrx_type,
			 
			 ftrx_desc,			
			 fbilling,
			 fbilling_date,
			 fbill_type,
			 
			 fdue_date,
			 fdoc_type,
			  CreatedBy, 
			  CreatedDate
		)
		VALUES
		(
		 prmfdoc_no,
		prmfbill_date,		
		 prmfbill_rp,
		 
		 prmfbill_ppn,
		 prmfbill_tot,
		 prmftrx_type,
		 
		 prmftrx_desc,
		 prmfbilling,
		 prmfbilling_date,
		 0,
		 prmfdue_date,
		 prmfdoc_type,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F052_insertDepo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F052_insertDepo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F052_insertDepo`(
	 prmfdoc_no varchar(25),
	 prmfbill_date datetime,
	prmfbill_rp decimal(20,0),
	
	 prmfbill_ppn decimal(20,0),
	 prmfbill_tot decimal(20,0),	
	 prmftrx_type varchar(10),
	 
	 prmftrx_desc varchar(200),	
	 prmfbilling int(1),
	 prmfbilling_date int(1),
	--  prmfbill_type varchar(1),
	 
	 prmfdue_date int(1),
	 prmfdoc_type varchar(10),
	 prmCreatedBy VARCHAR(50)
                 	
)
BEGIN
		INSERT INTO f052
		(
			 fdoc_no,
			 fbill_date,
			fbill_rp,
			
			 fbill_ppn,
			 fbill_tot,			
			 ftrx_type,
			 
			 ftrx_desc,			
			 fbilling,
			 fbilling_date,
			 fbill_type,
			 
			 fdue_date,
			 fdoc_type,
			  CreatedBy, 
			  CreatedDate
		)
		VALUES
		(
		 prmfdoc_no,
		prmfbill_date,		
		 prmfbill_rp,
		 
		 prmfbill_ppn,
		 prmfbill_tot,
		 prmftrx_type,
		 
		 prmftrx_desc,
		 prmfbilling,
		 prmfbilling_date,
		 1,
		 prmfdue_date,
		 prmfdoc_type,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f052_updateBillNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f052_updateBillNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f052_updateBillNo`(
	 prmfdoc_no VARCHAR(25),
	 prmfbill_date date,
	 prmfbill_no VARCHAR(25),
	prmUpdatedBy VARCHAR(50)
)
BEGIN
		UPDATE f052 SET			 
			 fbill_no=prmfbill_no,			
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			fdoc_no 				= 	prmfdoc_no
			and fbill_date = prmfbill_date;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f052_Update_RefNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f052_Update_RefNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f052_Update_RefNo`( 
	prmBillNo VARCHAR(50),     
	prmINVNo VARCHAR(50)
 )
BEGIN 
  UPDATE f052 SET    
	f052.fbill_no = prmINVNo 
  WHERE f052.fdoc_no = prmBillNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F053_get_Cus` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F053_get_Cus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F053_get_Cus`(
	prmfcust_code varchar(50))
BEGIN
	
		SELECT  f053.fdoc_no,
 f053.fdoc_date,
 f053.fcust_code,
 f053.funit_code,
 f053.fstatusINV,
 f053.INV_duedate
		FROM f053
		WHERE f053.fcust_code like prmfcust_code
		Order By f053.funit_code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F053_get_UnitCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F053_get_UnitCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F053_get_UnitCode`(
	prmfunit_code varchar(50))
BEGIN
	
		SELECT  f053.fdoc_no,
 f053.fdoc_date,
 f053.fcust_code,
 f053.funit_code,
 f053.fstatusINV,
 f053.INV_duedate
		FROM f053
		WHERE f053.funit_code like prmfunit_code
		Order By f053.funit_code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f054_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f054_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f054_get`(
	prmfdoc_no VARCHAR(25) 
)
BEGIN
		select * from f054 where fcont_doc=prmfdoc_no
	;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f055_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f055_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f055_get`(
	prmfdoc_no VARCHAR(25) 
)
BEGIN
		select * from f055 where fdoc_no=prmfdoc_no 
	;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f056_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f056_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f056_delete`(IN prmCode VARCHAR(50) )
BEGIN
	DELETE FROM f056 WHERE f056.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f056_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f056_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f056_get`(
	prmActiveStatus TINYINT(1)
)
BEGIN
	if (prmActiveStatus = 2) THEN
		SELECT 
		f056.Code, 
		f056.Name, 
		f056.ActiveStatus
		FROM f056 
		WHERE f056.Code <> "-"
		Order By f056.Code;
	ELSE
		SELECT 
		f056.Code, 
		f056.Name, 
		f056.ActiveStatus 
		FROM f056 
		WHERE f056.ActiveStatus = prmActiveStatus
		AND f056.Code <> "-"
		Order By f056.Code;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f056_get_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f056_get_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f056_get_search`(
	IN prmActiveStatus TINYINT(1), 
		IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(50) 
)
BEGIN
	SELECT 
	f056.Code, 
	f056.Name, 
	f056.ActiveStatus 
	FROM f056 
	WHERE (prmActiveStatus NOT IN (0, 1) OR f056.activestatus=prmActiveStatus) 
	AND (prmCode='' OR f056.code LIKE prmCode) 
	AND (prmName='' OR f056.name LIKE prmName)
	And f056.ActiveStatus = 1 
	ORDER BY f056.Code; 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f056_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f056_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f056_insert`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100),IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO f056 
	(Code, Name, ActiveStatus, CreatedBy, CreatedDate)
	VALUES
	(prmCode, prmName, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f056_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f056_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f056_update`(IN prmCode VARCHAR(50),IN prmName VARCHAR(100), In prmActiveStatus boolean,
    IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE f056 
	SET f056.Code = prmCode, f056.Name = prmName, f056.ActiveStatus = prmActiveStatus,
	    f056.UpdatedBy = prmUpdatedBy, UpdatedDate = NOW()
	WHERE f056.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F057_getPayDepo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F057_getPayDepo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F057_getPayDepo`(
	-- prmBranchCode VARCHAR(50),
	-- prmfdoc_no VARCHAR(50)
)
BEGIN
	SELECT a.*,pln_code,CONCAT(a.pln_code," ",a.pln_desc," ",IF(ISNULL(b.name), "", b.name)) AS fplndesc FROM f057 a 
LEFT JOIN f019 b ON a.fdept_code=b.code WHERE LEFT(prx_type,1)='D'
	; 	
		
            
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F057_getRentGet` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F057_getRentGet` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F057_getRentGet`(
	-- prmBranchCode VARCHAR(50),
	-- prmfdoc_no VARCHAR(50)
)
BEGIN
	SELECT a.*,pln_code,CONCAT(a.pln_code," ",a.pln_desc," ",IF(ISNULL(b.name), "", b.name)) AS fplndesc FROM f057 a 
LEFT JOIN f019 b ON a.fdept_code=b.code WHERE LEFT(prx_type,1)<>'D'
	; 	
		
            
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F058_PrintLetter` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F058_PrintLetter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F058_PrintLetter`(prmCode varchar(50))
BEGIN	
		SELECT  
		F058.Code, 
		F058.EmployeeCode, 
		F057.Name As EmployeeName,
		F057.DepartmentCode as DepartmentCode,
		F050.Name as DepartmentName,
		F057.EmployeePositionCode as EmployeePositionCode,
		F054.Name As EmployeePositionName,
		F057.TglMasukKerja as TglMasukKerja,
		F057.Alamat1 as Alamat1,
		F057.Alamat2 as Alamat2,
		F057.Alamat3 as Alamat3,
		F058.LanguageStatus,
		F058.IsiIndo, 
		F058.IsiEng, 
		F058.ResignDate, 		
		F058.PersonaliaSign,
		F058.Personalia
		FROM F058 
		Inner Join F057 On F057.Code = F058.EmployeeCode
		Inner Join F050 on F050.Code = F057.DepartmentCode
		Inner Join F054 on F054.Code = F057.EmployeePositionCode
	where
		F058.Code like prmCode;
	  
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_accountcode_max` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_accountcode_max` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_accountcode_max`(prmBranchCode VARCHAR(50))
BEGIN
		SELECT MAX(F101.Code) FROM F101 WHERE F101.Type = "S";
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_accountcode_min` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_accountcode_min` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_accountcode_min`(prmBranchCode VARCHAR(50))
BEGIN
		SELECT MIN(F101.Code) FROM F101 WHERE F101.Type = "S";
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_CekParent` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_CekParent` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F101_CekParent`(
	prmAccountCode VARCHAR(50),
	prmType VARCHAR(50)
)
BEGIN
		IF (prmType = "S") THEN
			SELECT 
				CODE
			FROM
				F101
			WHERE
				F101.Code = LEFT(prmAccountCode, 3) AND F101.Type = "G" OR  F101.Type = "H";
		ELSE
			SELECT 
				CODE
			FROM
				F101
			WHERE
			F101.Code = LEFT(prmAccountCode, 3) AND F101.Type = "G";
				-- F101.Code = LEFT(prmAccountCode, 3) AND F101.Type = "H";
		END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_delete`(IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F101 WHERE F101.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_delete_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_delete_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_delete_all`()
BEGIN
	DELETE FROM F101;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_delete_HG` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_delete_HG` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_delete_HG`()
BEGIN
	DELETE FROM F101 Where type = 'G' and type = 'G';
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_delete_SubArea` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_delete_SubArea` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_delete_SubArea`(In PrmCurrencyCode varchar(50), IN prmAreaCode varchar(3))
BEGIN
	DELETE FROM F101 WHERE TYPE = 'S' AND f101.CurrencyCode=PrmCurrencyCode AND RIGHT(f101.Code,3)=prmAreaCode ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_get`()
BEGIN
	SELECT f101.BranchCode,F101.Code, F101.Name, F101.Type,f101.CurrencyCode
	FROM F101
	Order By F101.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_get_accountcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_get_accountcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_get_accountcode`(IN prmCode VARCHAR(50) 
)
BEGIN
	SELECT F101.Code, F101.Name, F101.Type
	FROM F101
	WHERE F101.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_get_type` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_get_type` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_get_type`(IN prmType enum('H','G','S'))
BEGIN
	SELECT F101.Code, F101.Name
	FROM F101
	WHERE F101.Type = prmType
	ORDER BY F101.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_insert`(
In prmBranchCode Varchar(50),
In prmCode Varchar(50), 
In prmName Varchar(100), 
In prmType Enum('H','G','S'), 
IN prmCurrencyCode VARCHAR(50),
In prmCreatedBy Varchar(50) 
)
BEGIN
	Insert Into F101
	(
		F101.BranchCode,
		F101.Code, 
		F101.Name, 
		F101.Type, 
		f101.CurrencyCode,
		F101.CreatedBy, 
		F101.CreatedDate
	)
	Values
	(
		prmBranchCode,
		prmCode, 
		prmName, 
		prmType, 
		prmCurrencyCode,
		prmCreatedBy, 
		Now()
	);
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_insertFromGen` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_insertFromGen` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_insertFromGen`(
IN prmBranchCode VARCHAR(50),
IN prmCode VARCHAR(20), 
IN prmName VARCHAR(200),
in prmType Enum('H','G','S'),
IN prmCurrencyCode varchar(50)
)
BEGIN
	INSERT INTO F101 
	(BranchCode, Code, Name, Type, CurrencyCode)
	VALUES
	(prmBranchCode, prmCode, prmName,prmType,prmCurrencyCode);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_insertFromGenSub` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_insertFromGenSub` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_insertFromGenSub`(
IN prmBranchCode VARCHAR(50),
IN prmCode VARCHAR(22), 
IN prmAreaCode VARCHAR(3),
IN prmSubAreaCode VARCHAR(2),
IN prmDevisiCode VARCHAR(2),
IN prmName VARCHAR(200),
in prmType Enum('H','G','S'),
IN prmCurrencyCode varchar(50)
)
BEGIN
	INSERT INTO F101 
	(BranchCode, Code, Name, Type, CurrencyCode)
	VALUES
	(prmBranchCode, concat(substr(prmCode,1,16),'-',prmAreaCode,prmSubAreaCode,prmDevisiCode), prmName,prmType,prmCurrencyCode);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_search_accountcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_search_accountcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_search_accountcode`(prmAccountCode VARCHAR(50))
BEGIN
		SELECT 
			F101.Code, F101.Name
		FROM 
			F101
		WHERE 
			F101.Code LIKE prmAccountCode AND F101.Type = "S"
		Order By 
			F101.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_search_accountname` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_search_accountname` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_search_accountname`(prmAccountName VARCHAR(50))
BEGIN
		SELECT 
			F101.Code, F101.Name
		FROM 
			F101
		WHERE 
			F101.Name LIKE prmAccountName AND F101.Type = "S"
		Order By 
			F101.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F101_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F101_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F101_update`(
In prmBranchCode Varchar(50), 
In prmCode Varchar(50), 
In prmName Varchar(100), 
IN prmCurrencyCode VARCHAR(50),
In prmUpdatedBy Varchar(50), 
In prmOldCode Varchar(50)
)
BEGIN
	Update F101 Set
		F101.BranchCode = prmBranchCode,
		F101.Code = prmCode, 
		F101.Name = prmName,
		F101.CurrencyCode=prmCurrencyCode,
		F101.UpdatedBy = prmUpdatedBy,
		F101.UpdatedDate = NOW()
	Where
		F101.Code = prmOldCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F102_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F102_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F102_delete`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F102 WHERE F102.BranchCode = prmBranchCode AND F102.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F102_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F102_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F102_get`(IN prmBranchCode VARCHAR(50), prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT 
	F102.Code, 
	F102.Password, 
	F102.GroupCode, 
	F003.Name As GroupName,
	F102.ActiveStatus
		FROM F102 
		Inner Join F003 On F003.Code = F102.GroupCode
			Order By F102.Code;
ELSE
	SELECT 
		F102.Code, 
		F102.Password, 
		F102.GroupCode, 
		F003.Name As GroupName,
		F102.ActiveStatus
			FROM F102 
		Inner Join 
		F003 On F003.Code = F102.GroupCode 
			WHERE F102.ActiveStatus = prmActiveStatus
			Order By F102.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F102_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F102_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F102_insert`(IN prmBranchCode VARCHAR(50), 
IN prmCode VARCHAR(50), prmPassword VARCHAR(50), prmGroupCode VARCHAR(50), prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F102
	(F102.BranchCode, F102.Code, F102.Password, F102.GroupCode, ActiveStatus, F102.CreatedBy, F102.CreatedDate)
	VALUES
	(prmBranchCode, prmCode, prmPassword, prmGroupCode, 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F102_login` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F102_login` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F102_login`(IN prmBranchCode VARCHAR(50), prmCode VARCHAR(50), prmPassword VARCHAR(50))
BEGIN
	SELECT 	F102.Code, F102.GroupCode, F003.Name as GroupName
	FROM F102 INNER JOIN F003 ON F102.GroupCode = F003.Code
	WHERE F102.BranchCode = prmBranchCode AND F102.Code = prmCode AND
	      F102.Password = prmPassword;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F102_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F102_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F102_update`(IN prmBranchCode VARCHAR(50), 
IN prmCode VARCHAR(50), IN prmPassword VARCHAR(50), IN prmGroupCode VARCHAR(50), IN prmActiveStatus boolean,
IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F102 SET
	   F102.Code = prmCode, 
	   F102.Password = prmPassword,
	   F102.GroupCode = prmGroupCode, 
	   F102.ActiveStatus = prmActiveStatus,
	   F102.UpdatedBy = prmUpdatedBy, 
	   F102.UpdatedDate = NOW()
	WHERE
	   F102.Code = prmOldCode AND F102.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F103_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F103_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F103_delete`(IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F103 WHERE F103.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F103_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F103_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F103_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT 
	F103.Code, 
	F103.Name, 
	F103.AccountCode, 
	F103.AccountName as AccountAsName,
	F103.AccountNo,
	F101.Name As AccountName,
	F103.ActiveStatus
		FROM F103 
		left Join F101 On F101.Code = F103.AccountCode
			Order By F103.Code;
ELSE
	SELECT 
	F103.Code, 
	F103.Name, 
	F103.AccountCode, 
	F103.AccountName as AccountAsName,
	F103.AccountNo,
	F101.Name As AccountName,
	F103.ActiveStatus
		FROM F103 
		LEFT Join F101 On F101.Code = F103.AccountCode
			WHERE F103.ActiveStatus = prmActiveStatus
			Order By F103.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F103_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F103_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F103_insert`(
IN prmBranchCode VARCHAR(50), 
IN prmCode VARCHAR(50), 
IN prmName VARCHAR(100), 
In prmAccountCode Varchar(20), 
In prmAccountName Varchar(200), 
In prmAccountNo Varchar(500), 
IN prmCreatedBy VARCHAR(50)
)
BEGIN
	INSERT INTO F103
	(F103.BranchCode, F103.Code, F103.Name, F103.AccountCode, 
F103.AccountName,
F103.AccountNo,
F103.ActiveStatus, F103.CreatedBy, F103.CreatedDate)
	values
	(prmBranchCode, prmCode, prmName, prmAccountCode,
prmAccountName,
AccountNo,
1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F103_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F103_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F103_search`(IN prmCode VARCHAR(50), IN prmName VARCHAR(200))
BEGIN
	SELECT 
	F103.Code, 
	F103.Name,	
	F103.AccountCode, 
	-- F101.Name as AccountName, 
	F103.ActiveStatus
		FROM F103 
		-- Inner Join F101 on F101.Code = F103.AccountCode	
		WHERE F103.Code       Like prmCode And 
		      F103.Name       Like prmName And 
		      F103.ActiveStatus = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F103_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F103_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F103_search_code`(prmCode VARCHAR(50))
BEGIN
		SELECT 
			F103.Code, F103.Name
		FROM 
			F103
		WHERE 
			F103.Code LIKE prmCode And F103.ActiveStatus = 1
		Order By 
			F103.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F103_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F103_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F103_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F103.Code, F103.Name
		FROM 
			F103
		WHERE 
			F103.Name LIKE prmName AND F103.ActiveStatus = 1
		Order By 
			F103.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F103_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F103_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F103_update`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), In prmAccountCode varchar(50), 
In prmAccountName Varchar(200), 
In prmAccountNo Varchar(500),
In prmActiveStatus boolean,
 IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F103 SET
	   F103.Code = prmCode, 
	   F103.Name = prmName, 
F103.AccountName=prmAccountName,
F103.AccountNo=prmAccountNo,
	   F103.AccountCode = prmAccountCode,
	   F103.ActiveStatus = prmActiveStatus,
	   F103.UpdatedBy = prmUpdatedBy, 
	   F103.UpdatedDate = NOW()
	WHERE
	   F103.Code = prmOldCode AND F103.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F104_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F104_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F104_delete`(IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F104 WHERE F104.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F104_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F104_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F104_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	F104.Code, 
	F104.Name, 
	F104.AccountCode, 
	F101.Name As AccountName,
	F104.ActiveStatus
		FROM F104 
		Inner Join F101 On F101.Code = F104.AccountCode
				Order By F104.Code;
ELSE
	SELECT 
	F104.Code, 
	F104.Name, 
	F104.AccountCode, 
	F101.Name As AccountName,
	F104.ActiveStatus
		FROM F104 
		Inner Join F101 On F101.Code = F104.AccountCode
			WHERE F104.ActiveStatus = prmActiveStatus
				Order By F104.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F104_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F104_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F104_insert`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), In prmAccountCode Varchar(20), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F104
	(F104.BranchCode, F104.Code, F104.Name, F104.AccountCode, ActiveStatus, F104.CreatedBy, F104.CreatedDate)
	values
	(prmBranchCode, prmCode, prmName, prmAccountCode, 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F104_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F104_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F104_search`(IN prmCode VARCHAR(50), IN prmName VARCHAR(200))
BEGIN
	SELECT
	F104.Code, 
	F104.Name,	
	F104.AccountCode, 
	-- F101.Name as AccountName, 
	F104.ActiveStatus
		FROM F104 
		-- Inner Join F101 on F101.Code = F104.AccountCode	
		WHERE F104.Code       Like prmCode And 
		      F104.Name       Like prmName And
		      F104.ActiveStatus = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F104_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F104_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F104_search_code`(prmCode VARCHAR(50))
BEGIN
		SELECT 
			F104.Code, F104.Name
		FROM 
			F104
		WHERE 
			F104.Code LIKE prmCode And F104.ActiveStatus = 1
		Order By 
			F104.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F104_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F104_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F104_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F104.Code, F104.Name
		FROM 
			F104
		WHERE 
			F104.Name LIKE prmName And F104.ActiveStatus = 1
		Order By 
			F104.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F104_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F104_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F104_update`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), In prmAccountCode varchar(50), In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F104 SET
	   F104.Code = prmCode, 
	   F104.Name = prmName, 
	   F104.AccountCode = prmAccountCode,
           F104.ActiveStatus = prmActiveStatus,
	   F104.UpdatedBy = prmUpdatedBy, 
	   F104.UpdatedDate = NOW()
	WHERE
	   F104.Code = prmOldCode AND F104.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F105_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F105_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F105_delete`(IN prmAccountCode VARCHAR(50))
BEGIN
	DELETE FROM F105 WHERE F105.AccountCode = prmAccountCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F105_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F105_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F105_get`()
BEGIN
	SELECT 	F105.AccountCode, F101.Name As AccountName, F105.PeriodMonth, F105.PeriodYear, 
		F105.OpeningBalanceForeign, F105.ExchangeRate
	FROM F105 INNER JOIN F101 ON F101.Code = F105.AccountCode
	ORDER BY F105.AccountCode, F105.PeriodYear, F105.PeriodMonth;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F105_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F105_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F105_insert`(IN prmBranchCode VARCHAR(50), IN prmAccountCode VARCHAR(50), 
	IN prmPeriodMonth VARCHAR(50), IN prmPeriodYear DECIMAL, 
	IN prmOpeningBalanceForeign DECIMAL, IN prmExchangeRate DECIMAL, 
	IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F105 
	   ( BranchCode, AccountCode, PeriodMonth, PeriodYear, 
	     OpeningBalanceForeign, ExchangeRate, ActiveStatus, CreatedBy, CreatedDate )
	VALUES
	   ( prmBranchCode, prmAccountCode, prmPeriodMonth, prmPeriodYear, 
	     prmOpeningBalanceForeign, prmExchangeRate, 1, prmCreatedBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F105_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F105_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F105_update`(IN prmBranchCode VARCHAR(50), IN prmAccountCode VARCHAR(50), 
	IN prmPeriodMonth VARCHAR(50), IN prmPeriodYear DECIMAL, 
	IN prmOpeningBalanceForeign DECIMAL, IN prmExchangeRate DECIMAL, 
	IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F105 SET 
	     AccountCode = prmAccountCode, 
	     PeriodMonth = prmPeriodMonth, 
	     PeriodYear = prmPeriodYear, 
	     OpeningBalanceForeign = prmOpeningBalanceForeign, 
	     ExchangeRate = prmExchangeRate, 
	     UpdatedBy = prmUpdatedBy, 
	     UpdatedDate = NOW()
	WHERE
	     BranchCode = prmBranchCode AND AccountCode = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f106_b_get_Pay` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f106_b_get_Pay` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f106_b_get_Pay`(
   IN prmCodeCust VARCHAR(50)
)
BEGIN
  SELECT
	f106_b.CodeCust,
	f106.Name as CustName,
	f106_b.CodeBlock,
	f048.funit_code,
        f048.funit_name,
        f048.funit_type,
        f048.fkva_code,
        F042.fkva_name AS fkva_name,
        f048.fwtr_code,
        F042.fkva_name AS fwtr_name,
        f048.fkva_daya,
        f048.fkva_no,
        f048.frent_sqm,
        f048.frent_month,
        f048.funit_long,
        f048.funit_width,
        f048.funit_sqm,
        f048.funit_land,
        f048.funit_sell,
        f048.fowner,
        f048.ftenant,
        f048.fstatus,
        f048.fphase,
        f048.ftrade_name,
	f106_b.DocNo
  FROM f106_b
  inner join f106 on f106.Code=f106_b.CodeCust
  inner join f048 on f048.funit_code=f106_b.CodeBlock
	LEFT JOIN F042 ON f048.fkva_code 		= F042.fkva_code	
	LEFT JOIN F044 ON f048.fwtr_code 		= F044.fwtr_code
  WHERE 
    f106_b.CodeCust = prmCodeCust;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f106_b_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f106_b_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f106_b_insert`(
	prmCodeCust varchar(50),
            prmCodeBlock VARCHAR(50),
             prmDocNo VARCHAR(50),
            prmCreatedBy varchar(50)    
)
BEGIN
	INSERT INTO f106_b
	(
	 CodeCust,
	CodeBlock,
	DocNo,
	CreatedBy,      
	CreatedDate 
	)
	VALUE
	(
	   prmCodeCust,
	prmCodeBlock,
            prmDocNo,
	prmCreatedBy,
	NOW()
	);          
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F106_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F106_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F106_delete`(IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F106 WHERE F106.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F106_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F106_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F106_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	F106.Code, 
	F106.Name,
	F106.Address, 
	F106.ZipCode, 
	F106.NPWP, 
	F106.NPWPAddress,
	F106.CityCode, 
	F009.Name AS CityName, 
	F106.CountryCode, 
	F010.Name AS CountryName, 
	F106.HoldingCompanyCode, 
	--  F014.Name AS HoldingCompanyName, 
	F106.Phone1, 
	F106.Phone2, 
	F106.Fax, 
	F106.ContactPerson,
	F106.CompanyTypeCode, 
	--  F012.Name AS CompanyTypeName, 
	F106.CreditLimit, 
	F106.EmailAddress,
	F106.PeriodFromDate,
	F106.PeriodFromDate,
	f106.SalesmanCode,
f106.YesChkPPh4,
	f106.AccountCode,
	--  F108.Name AS SalesmanName,
	F106.ActiveStatus
		FROM F106 
		INNER JOIN F009 ON F009.Code = F106.CityCode
		INNER JOIN F010 ON F010.Code = F106.CountryCode
		--  INNER JOIN F014 ON F014.Code = F106.HoldingCompanyCode
		--  INNER JOIN F012 ON F012.Code = F106.CompanyTypeCode
		--  INNER JOIN F108 ON F108.Code = F106.SalesmanCode
		WHERE F106.Code <> "-"
				ORDER BY F106.Code;
ELSE
	SELECT
	F106.Code, 
	F106.Name,
	F106.Address, 
	F106.ZipCode, 
	F106.NPWP, 
	F106.NPWPAddress,
	F106.CityCode, 
	F009.Name AS CityName, 
	F106.CountryCode, 
	F010.Name AS CountryName, 
	F106.HoldingCompanyCode, 
	--  F014.Name AS HoldingCompanyName, 
	F106.Phone1, 
	F106.Phone2, 
	F106.Fax, 
	F106.ContactPerson,
	F106.CompanyTypeCode, 
	--  F012.Name AS CompanyTypeName, 
	F106.CreditLimit, 
	F106.EmailAddress,
	F106.PeriodFromDate,
	F106.PeriodFromDate,
	f106.SalesmanCode,
	f106.YesChkPPh4,
f106.AccountCode,
	--  F108.Name AS SalesmanName,
		F106.ActiveStatus
		FROM F106 
		INNER JOIN F009 ON F009.Code = F106.CityCode
		INNER JOIN F010 ON F010.Code = F106.CountryCode
		--  INNER JOIN F014 ON F014.Code = F106.HoldingCompanyCode
		--  INNER JOIN F012 ON F012.Code = F106.CompanyTypeCode
		--  INNER JOIN F108 ON F108.Code = F106.SalesmanCode
			WHERE F106.ActiveStatus = prmActiveStatus
			AND F106.Code <> "-"
				ORDER BY F106.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F106_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F106_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F106_insert`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), IN prmAddress TINYTEXT, IN prmZipcode VARCHAR(50), IN prmNPWP VARCHAR(50), IN prmNPWPAddress TINYTEXT,
IN prmCityCode VARCHAR(50), IN prmCountryCode VARCHAR(50), IN prmHoldingCompanyCode VARCHAR(50),
IN prmPhone1 VARCHAR(50), IN prmPhone2 VARCHAR(50), IN prmFax VARCHAR(20), 
IN prmContactPerson VARCHAR(50), IN prmCompanyTypeCode VARCHAR(50), IN prmCreditLimit DECIMAL(18,4),
IN prmEmailAddress VARCHAR(50), 
IN prmPeriodFromDate DATE,
	IN prmPeriodTodate DATE,
	IN prmSalesmanCode VARCHAR(50),
	IN prmAccountCode VARCHAR(50),
	IN prmYesChkPPh4 TINYINT(1),
IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F106
	(F106.BranchCode, F106.Code, F106.Name, F106.Address, F106.ZipCode,
F106.NPWP, F106.NPWPAddress, F106.CityCode, F106.CountryCode, F106.HoldingCompanyCode,
F106.Phone1, F106.Phone2, F106.Fax, F106.ContactPerson,F106.CompanyTypeCode, F106.CreditLimit,
F106.EmailAddress, 
F106.PeriodFromDate,
	F106.PeriodTodate,
	F106.SalesmanCode,
	F106.AccountCode,f106.YesChkPPh4,
ActiveStatus, F106.CreatedBy, F106.CreatedDate)
	VALUES
	(prmBranchCode, prmCode, prmName, prmAddress, prmZipCode, prmNPWP, prmNPWPAddress,
prmCityCode, prmCountryCode, prmHoldingCompanyCode, prmPhone1, prmPhone2, prmFax, prmContactPerson, prmCompanyTypeCode, prmCreditLimit,
prmEmailAddress, 
prmPeriodFromDate,
	prmPeriodTodate,
	prmSalesmanCode,
	prmAccountCode,prmYesChkPPh4,
1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F106_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F106_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F106_search`(IN prmCode VARCHAR(50), IN prmName VARCHAR(200))
BEGIN
	SELECT
	F106.Code, 
	F106.Name,
	F106.Address, 
	F106.ZipCode, 
	F106.NPWP, 
	F106.NPWPAddress,
	F106.CityCode, 
	F009.Name as CityName, 
	F106.CountryCode, 
	F010.Name as CountryName, 
	F106.HoldingCompanyCode, 
	F014.Name As HoldingCompanyName, 
	F106.Phone1, 
	F106.Phone2, 
	F106.Fax, 
	F106.ContactPerson,
	F106.CompanyTypeCode, 
	-- F012.Name as CompanyTypeName, 
	F106.CreditLimit, 
	F106.EmailAddress,
F106.PeriodFromDate,F106.PeriodTodate,f106.SalesmanCode,
F108.Name as SalesmanName,
f106.AccountCode,
	F106.ActiveStatus
		FROM F106 
		Inner Join F009 on F009.Code = F106.CityCode
		Inner Join F010 on F010.Code = F106.CountryCode
		Inner Join F014 on F014.Code = F106.HoldingCompanyCode
		-- Inner Join F012 on F012.Code = F106.CompanyTypeCode
inner Join F108 on F108.Code = F106.SalesmanCode
		WHERE F106.Code       Like prmCode And 
		      F106.Name       Like prmName And 
		      F106.ActiveStatus = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F106_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F106_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F106_search_code`(prmCode VARCHAR(50))
BEGIN
		SELECT 
			F106.Code, F106.Name, F106.ContactPerson,F106.PeriodFromDate,F106.PeriodTodate,f106.SalesmanCode,
F108.Name as SalesmanName,f106.YesChkPPh4
		FROM 
			F106
Inner Join F108 on F108.Code = F106.SalesmanCode
		WHERE 
			F106.Code LIKE prmCode And F106.ActiveStatus = 1
		Order By 
			F106.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F106_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F106_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F106_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F106.Code, F106.Name,F106.ContactPerson,F106.PeriodFromDate,F106.PeriodTodate,f106.SalesmanCode,
F108.Name as SalesmanName,f106.YesChkPPh4
		FROM 
			F106
Inner Join F108 on F108.Code = F106.SalesmanCode
		WHERE 
			F106.Name LIKE prmName And F106.ActiveStatus = 1
		Order By 
			F106.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F106_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F106_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F106_update`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), IN prmAddress TinyText, In prmZipCode Varchar(50), IN prmNPWP VARCHAR(50), IN prmNPWPAddress TinyText,
IN prmCityCode Varchar(50), IN prmCountryCode Varchar(50), IN prmHoldingCompanyCode Varchar(50),
IN prmPhone1 Varchar(50), IN prmPhone2 Varchar(50), IN prmFax Varchar(20), 
IN prmContactPerson Varchar(50), IN prmCompanyTypeCode Varchar(50), IN prmCreditLimit Decimal(18,4),
IN prmEmailAddress Varchar(50), 
IN prmPeriodFromDate date,
	IN prmPeriodTodate date,
	IN prmSalesmanCode varchar(50),
	IN prmAccountCode VARCHAR(50),
IN prmYesChkPPh4 TINYINT(1),
In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F106 SET
	   F106.Code = prmCode, 
	   F106.Name = prmName,
	   F106.Address = prmAddress,
	   F106.ZipCode = prmZipCode,
	   F106.NPWP = prmNPWP,
	   F106.NPWPAddress = prmNPWPAddress,
	   F106.CityCode = prmCityCode,
	   F106.CountryCode = prmCountryCode,
	   F106.HoldingCompanyCode = prmHoldingCompanyCode,
	   F106.Phone1 = prmPhone1,
	   F106.Phone2 = prmPhone2,
	   F106.Fax = prmFax,
	   F106.ContactPerson = prmContactPerson,
	   F106.CompanyTypeCode = prmCompanyTypeCode,
	   F106.CreditLimit = prmCreditLimit,
	   F106.EmailAddress = prmEmailAddress,
F106.PeriodFromDate = prmPeriodFromDate,
	F106.PeriodTodate = prmPeriodTodate,
	F106.SalesmanCode = prmSalesmanCode,
	   F106.ActiveStatus = prmActiveStatus,
	  F106.AccountCode= prmAccountCode,
	  f106.YesChkPPh4=prmYesChkPPh4,
	   F106.UpdatedBy = prmUpdatedBy, 
	   F106.UpdatedDate = NOW()
	WHERE
	   F106.Code = prmOldCode AND F106.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F107_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F107_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F107_delete`(IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F107 WHERE F107.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F107_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F107_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F107_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	F107.Code, 
	F107.Name, 
	F107.Address, 
	F107.ZipCode,
	F107.CityCode, 
	F009.Name as CityName, 
	F107.CountryCode, 
	F010.Name as CountryName, 
	F107.Phone1, 
	F107.Phone2, 
	F107.Fax, 
	F107.ContactPerson,
	F107.EmailAddress,
	F107.ActiveStatus
		FROM F107 
		Inner Join F009 on F009.Code = F107.CityCode
		Inner Join F010 on F010.Code = F107.CountryCode
		WHERE F107.Code <> "-"
				Order By F107.Code;
ELSE
	SELECT
	F107.Code, 
	F107.Name, 
	F107.Address, 
	F107.ZipCode,
	F107.CityCode, 
	F009.Name as CityName, 
	F107.CountryCode, 
	F010.Name as CountryName, 
	F107.Phone1, 
	F107.Phone2, 
	F107.Fax, 
	F107.ContactPerson,
	F107.EmailAddress,
	F107.ActiveStatus
		FROM F107 
		Inner Join F009 on F009.Code = F107.CityCode
		Inner Join F010 on F010.Code = F107.CountryCode
			WHERE F107.ActiveStatus = prmActiveStatus
			AND F107.Code <> "-"
				Order By F107.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F107_get2` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F107_get2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F107_get2`(prmActiveStatus TINYINT(1))
BEGIN
	SELECT
	F107.Code, 
	F107.Name, 
	F107.Address, 
	F107.ZipCode,
	F107.CityCode, 
	F009.Name as CityName, 
	F107.CountryCode, 
	F010.Name as CountryName, 
	F107.Phone1, 
	F107.Phone2, 
	F107.Fax, 
	F107.ContactPerson,
	F107.EmailAddress,
	F107.ActiveStatus
		FROM F107 
		Inner Join F009 on F009.Code = F107.CityCode
		Inner Join F010 on F010.Code = F107.CountryCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F107_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F107_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F107_insert`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), IN prmAddress TinyText, IN prmZipCode Varchar(50), 
IN prmCityCode Varchar(50), IN prmCountryCode Varchar(50),
IN prmPhone1 Varchar(20), IN prmPhone2 Varchar(20), IN prmFax Varchar(20), 
IN prmContactPerson Varchar(50), 
IN prmEmailAddress Varchar(50), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F107
	(F107.BranchCode, F107.Code, F107.Name, F107.Address, F107.ZipCode,
F107.CityCode, F107.CountryCode, 
F107.Phone1, F107.Phone2, F107.Fax, F107.ContactPerson, 
F107.EmailAddress, ActiveStatus, F107.CreatedBy, F107.CreatedDate)
	values
	(prmBranchCode, prmCode, prmName, prmAddress, prmZipCode, 
prmCityCode, prmCountryCode, prmPhone1, prmPhone2, prmFax,
prmContactPerson, prmEmailAddress, 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F107_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F107_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F107_update`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), IN prmAddress TinyText, IN prmZipCode Varchar(50),
IN prmCityCode Varchar(50), IN prmCountryCode Varchar(50),
IN prmPhone1 Varchar(20), IN prmPhone2 Varchar(20), IN prmFax Varchar(20), 
IN prmContactPerson Varchar(50),
IN prmEmailAddress Varchar(50), In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F107 SET
	   F107.Code = prmCode, 
	   F107.Name = prmName,
F107.Address = prmAddress,
F107.ZipCode = prmZipCode,
F107.CityCode = prmCityCode,
F107.CountryCode = prmCountryCode,
F107.Phone1 = prmPhone1,
F107.Phone2 = prmPhone2,
F107.Fax = prmFax,
F107.ContactPerson = prmContactPerson,
F107.EmailAddress = prmEmailAddress,
F107.ActiveStatus = prmActiveStatus,
	   F107.UpdatedBy = prmUpdatedBy, 
	   F107.UpdatedDate = NOW()
	WHERE
	   F107.Code = prmOldCode AND F107.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F108_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F108_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F108_delete`(IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F108 WHERE F108.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F108_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F108_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F108_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	F108.Code, 
	F108.Name, 
	F108.Address, 
	F108.Phone, 
	F108.Handphone,
	F108.ActiveStatus
		FROM F108
WHERE F108.Code <> "-"
			Order By F108.Code;
ELSE
	SELECT
	F108.Code, 
	F108.Name, 
	F108.Address, 
	F108.Phone, 
	F108.Handphone,
	F108.ActiveStatus
		FROM F108 
			WHERE F108.ActiveStatus = prmActiveStatus
AND F108.Code <> "-"
			Order By F108.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F108_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F108_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F108_insert`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50),
IN prmAddress Text, IN prmPhone Varchar(50), IN prmHandphone varchar(50),
	IN prmName VARCHAR(100), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F108
	(F108.BranchCode, F108.Code, F108.Name, F108.Address, F108.Phone, F108.Handphone, F108.ActiveStatus, F108.Createdby, F108.CreatedDate)
	values
	(prmBranchCode, prmCode, prmName, prmAddress, prmPhone, prmHandphone, 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F108_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F108_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F108_search`(IN prmCode VARCHAR(50), IN prmName VARCHAR(50))
BEGIN
	SELECT
		F108.Code, 
		F108.Name, 
		F108.Address, 
		F108.Phone, 
		F108.Handphone
	FROM F108
	WHERE 
		F108.Code LIKE prmCode
		AND F108.Name LIKE prmName;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F108_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F108_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F108_search_code`(IN prmCode VARCHAR(50))
BEGIN
	SELECT
		F108.Code, 
		F108.Name, 
		F108.Address, 
		F108.Phone, 
		F108.Handphone
	FROM F108
	WHERE 
		F108.Code LIKE prmCode;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F108_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F108_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F108_update`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50),
IN prmAddress Text, IN prmPhone Varchar(50), IN prmHandphone Varchar(50), 
	IN prmName VARCHAR(100), In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F108 SET
	   F108.Code = prmCode, 
	   F108.Name = prmName, 
F108.Address = prmAddress,
F108.Phone = prmPhone,
F108.Handphone = prmHandphone,
F108.ActiveStatus = prmActiveStatus,
	   F108.UpdatedBy = prmUpdatedBy, 
	   F108.UpdatedDate = NOW()
	WHERE
	   F108.Code = prmOldCode AND F108.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F109_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F109_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F109_delete`(IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F109 WHERE F109.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F109_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F109_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F109_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	F109.Code, 
	F109.Name,
	F109.Address, 
	F109.ZipCode, 
	F109.NPWP, 
	F109.NPWPAddress,
	F109.CityCode, 
	F009.Name as CityName, 
	F109.CountryCode, 
	F010.Name as CountryName, 
	F109.HoldingCompanyCode, 
	F014.Name As HoldingCompanyName, 
	F109.Phone1, 
	F109.Phone2, 
	F109.Fax, 
	F109.ContactPerson, 
	F109.EmailAddress,
	F109.IDcard,
	F109.HPNo,
	F109.BankAccountName,
	F109.BankAc,
	F109.BankName,
	F109.AccountCode,
	F109.ActiveStatus
	FROM F109
	Inner Join F009 on F009.Code = F109.CityCode
	Inner Join F010 on F010.Code = F109.CountryCode
	Inner Join F014 on F014.Code = F109.HoldingCompanyCode
	WHERE F109.Code <> "-"
		Order By F109.Code;
ELSE
	Select
	F109.Code, 
	F109.Name,
	F109.Address, 
	F109.ZipCode, 
	F109.NPWP, 
	F109.NPWPAddress,
	F109.CityCode, 
	F009.Name as CityName, 
	F109.CountryCode, 
	F010.Name as CountryName, 
	F109.HoldingCompanyCode, 
	F014.Name As HoldingCompanyName, 
	F109.Phone1, 
	F109.Phone2, 
	F109.Fax, 
	F109.ContactPerson,
	F109.ContactJobPosition, 
	F109.EmailAddress,
	F109.IDcard,
	F109.HPNo,
	F109.BankAccountName,
	F109.BankAc,
	F109.BankName,
	F109.AccountCode,
	F109.ActiveStatus
	FROM F109
	Inner Join F009 on F009.Code = F109.CityCode
	Inner Join F010 on F010.Code = F109.CountryCode
	Inner Join F014 on F014.Code = F109.HoldingCompanyCode
		WHERE F109.ActiveStatus = prmActiveStatus
		AND F109.Code <> "-"
			Order By F109.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F109_Get_SupplierCode_Max` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F109_Get_SupplierCode_Max` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F109_Get_SupplierCode_Max`()
BEGIN
		SELECT max(F109.Code) 
		FROM F109;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F109_Get_SupplierCode_Min` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F109_Get_SupplierCode_Min` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F109_Get_SupplierCode_Min`()
BEGIN
		SELECT MIN(F109.Code) 
		FROM F109;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F109_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F109_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F109_insert`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), IN prmAddress TinyText, IN prmZipcode VARCHAR(50), IN prmNPWP VARCHAR(50), IN prmNPWPAddress TinyText,
IN prmCityCode Varchar(50), IN prmCountryCode Varchar(50), IN prmHoldingCompanyCode Varchar(50),
IN prmPhone1 Varchar(20), IN prmPhone2 Varchar(20), IN prmFax Varchar(20), 
IN prmContactPerson Varchar(50), IN prmContactJobPosition VARCHAR(100), IN prmEmailAddress Varchar(50), 
IN prmIDcard  VARCHAR(50),
	IN prmHPNo  VARCHAR(50),
	IN prmBankAccountName VARCHAR(50),
	IN prmBankAc VARCHAR(50),
	IN prmBankName VARCHAR(50),
	IN prmAccountCode VARCHAR(50),
IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F109
	(F109.BranchCode, F109.Code, F109.Name, F109.Address, F109.ZipCode,
F109.NPWP, F109.NPWPAddress, F109.CityCode, F109.CountryCode, F109.HoldingCompanyCode,
F109.Phone1, F109.Phone2, F109.Fax, F109.ContactPerson, F109.ContactJobPosition, F109.EmailAddress, 
	F109.IDcard,
	F109.HPNo,
	F109.BankAccountName,
	F109.BankAc,
	F109.BankName,
	F109.AccountCode,
F109.ActiveStatus, F109.CreatedBy, F109.CreatedDate)
	values
	(prmBranchCode, prmCode, prmName, prmAddress, prmZipCode, prmNPWP, prmNPWPAddress,
prmCityCode, prmCountryCode, prmHoldingCompanyCode, prmPhone1, prmPhone2, prmFax,prmContactPerson, prmContactJobPosition, prmEmailAddress,
	prmIDcard,
	prmHPNo,
	prmBankAccountName,
	prmBankAc,
	prmBankName,
	prmAccountCode,
 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F109_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F109_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F109_search`(IN prmCode VARCHAR(50), IN prmName VARCHAR(200))
BEGIN
	SELECT
	F109.Code, 
	F109.Name,
	F109.Address, 
	F109.ZipCode, 
	F109.NPWP, 
	F109.NPWPAddress,
	F109.CityCode, 
	F009.Name as CityName, 
	F109.CountryCode, 
	F010.Name as CountryName, 
	F109.HoldingCompanyCode, 
	F014.Name As HoldingCompanyName, 
	F109.Phone1, 
	F109.Phone2, 
	F109.Fax, 
	F109.ContactPerson, 
	F109.EmailAddress,
	F109.IDcard,
	F109.HPNo,
	F109.BankAccountName,
	F109.BankAc,
	F109.BankName,
	F109.AccountCode,
	F109.ActiveStatus
	FROM F109
	Inner Join F009 on F009.Code  =    F109.CityCode
	Inner Join F010 on F010.Code  =    F109.CountryCode
	Inner Join F014 on F014.Code  =    F109.HoldingCompanyCode
		WHERE F109.Code       Like prmCode And 
		      F109.Name       Like prmName And 
		      F109.ActiveStatus = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F109_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F109_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F109_search_code`(prmCode VARCHAR(50))
BEGIN
		SELECT 
			F109.Code, F109.Name, F109.ContactPerson,F109.AccountCode
		FROM 
			F109
		WHERE 
			F109.Code LIKE prmCode And F109.ActiveStatus = 1
		Order By 
			F109.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F109_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F109_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F109_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F109.Code, F109.Name, F109.ContactPerson,F109.AccountCode
		FROM 
			F109
		WHERE 
			F109.Name LIKE prmName And F109.ActiveStatus = 1
		Order By 
			F109.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F109_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F109_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F109_update`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), IN prmAddress TinyText, In prmZipCode Varchar(50), IN prmNPWP VARCHAR(50), IN prmNPWPAddress TinyText,
IN prmCityCode Varchar(50), IN prmCountryCode Varchar(50), IN prmHoldingCompanyCode Varchar(50),
IN prmPhone1 Varchar(20), IN prmPhone2 Varchar(20), IN prmFax Varchar(20), 
IN prmContactPerson Varchar(50),  IN prmContactJobPosition Varchar(100), IN prmEmailAddress Varchar(50),
IN prmIDcard  VARCHAR(50),
	IN prmHPNo  VARCHAR(50),
	IN prmBankAccountName VARCHAR(50),
	IN prmBankAc VARCHAR(50),
	IN prmBankName VARCHAR(50),
	IN prmAccountCode VARCHAR(50),
 In prmActiveStatus boolean, 
IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F109 SET
	   F109.Code = prmCode, 
	   F109.Name = prmName,
F109.Address = prmAddress,
F109.ZipCode = prmZipCode,
F109.NPWP = prmNPWP,
F109.NPWPAddress = prmNPWPAddress,
F109.CityCode = prmCityCode,
F109.CountryCode = prmCountryCode,
F109.HoldingCompanyCode = prmHoldingCompanyCode,
F109.Phone1 = prmPhone1,
F109.Phone2 = prmPhone2,
F109.Fax = prmFax,
F109.ContactPerson = prmContactPerson,
F109.ContactJobPosition = prmContactJobPosition,
F109.EmailAddress = prmEmailAddress,
F109.IDcard=prmIDcard,
	F109.HPNo=prmHPNo,
	F109.BankAccountName=prmBankAccountName,
	F109.BankAc=prmBankAc,
	F109.BankName=prmBankName,
	F109.AccountCode=prmAccountCode,
F109.ActiveStatus = prmActiveStatus,
	   F109.UpdatedBy = prmUpdatedBy, 
	   F109.UpdatedDate = NOW()
	WHERE
	   F109.Code = prmOldCode AND F109.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F110_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F110_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F110_delete`(IN prmCode VARCHAR(10))
BEGIN
	DELETE FROM F110 WHERE F110.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F110_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F110_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F110_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	F110.Code, 
	F110.Name, 
	F110.ActiveStatus
		FROM F110
		WHERE F110.Code <> "-"  
			Order By F110.Code;
ELSE
	SELECT
	F110.Code, 
	F110.Name, 
	F110.ActiveStatus
		FROM F110 
			WHERE F110.ActiveStatus = prmActiveStatus
			AND  F110.Code <> "-"  
			Order By F110.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F110_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F110_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F110_insert`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO F110
	(F110.BranchCode, F110.Code, F110.Name, ActiveStatus, F110.CreatedBy, F110.CreatedDate)
	values
	(prmBranchCode, prmCode, prmName, 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F110_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F110_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F110_search`(
	IN prmCode VARCHAR(50),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			F110.Code, 
			F110.Name
		FROM F110 
		WHERE
			F110.Code LIKE prmCode AND 
			F110.Name LIKE prmName AND
			F110.ActiveStatus = 1
		Order By F110.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F110_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F110_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F110_search_code`(prmCode VARCHAR(50))
BEGIN
		SELECT 
			F110.Code, F110.Name
		FROM 
			F110
		WHERE 
		
			 F110.Code LIKE prmCode
		Order By 
			F110.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F110_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F110_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F110_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			F110.Code, F110.Name
		FROM 
			F110
		WHERE 
				F110.Name LIKE prmName
				AND F110.ActiveStatus = 1
		Order By 
			F110.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F110_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F110_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F110_update`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F110 SET
	   F110.Code = prmCode, 
	   F110.Name = prmName, 
	   F110.ActiveStatus = prmActiveStatus,
	   F110.UpdatedBy = prmUpdatedBy, 
	   F110.UpdatedDate = NOW()
	WHERE
	   F110.Code = prmOldCode AND F110.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f111_b_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f111_b_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f111_b_delete`(IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM f111_b WHERE f111_b.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f111_b_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f111_b_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f111_b_get`(
prmYearfstart_date varchar(4),
prmMonthfstart_date VARCHAR(2)
)
BEGIN	
		
  SELECT 
	 f111_b.ftrn_id,
	 f111_b.Code,
	 f111_b.Name,
	 f111_b.fcust_code,
	 f111_b.fkva_code,
	 f111_b.fkva_load,
	 f111_b.fstart_date,
	 f111_b.ffinis_date,
	 f111_b.fstart_mtr,
	 f111_b.ffinis_mtr,
	 f111_b.fusage,
	 f111_b.fbill_no,
	 f111_b.fbill_date,
	 f111_b.ActiveStatus,
	 cast('' as char(200)) as fket
		FROM f111_b 		
		where 
		YEAR(f111_b.fstart_date) = prmYearfstart_date
		AND MONTH(f111_b.fstart_date)= prmMonthfstart_date
		order By  f111_b.Code;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f111_b_getBilWater` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f111_b_getBilWater` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f111_b_getBilWater`(
prmYearfstart_date varchar(4),
prmMonthfstart_date VARCHAR(2)
)
BEGIN	
		
  
  	SELECT 
	 f111_b.ftrn_id,
	 f111_b.Code,	
	 IF(ISNULL(f048.funit_name), "", f048.funit_name) AS NAME,
	  IF(ISNULL(f048.ftrade_name), "", f048.ftrade_name) AS ftrade_name,
	  IF(ISNULL(b.CustomerCode), "", b.CustomerCode) AS fcust_code,
	 	IF(ISNULL(f106.name), "", f106.name) AS fcust_name,
IF(ISNULL(f106.Phone1), "", f106.Phone1) AS fPhone1,	
	--  f111_b.fcust_code,
	 f111_b.fkva_code,
	 f111_b.fkva_load,
	 f111_b.fstart_date,
	 f111_b.ffinis_date,
	 f111_b.fstart_mtr,
	 f111_b.ffinis_mtr,
	 f111_b.fusage,
	 f111_b.fbill_no,
	 f111_b.fbill_date,
	 b.GrandTotal,
	 f111_b.ActiveStatus,
	 CAST('' AS CHAR(200)) AS fket
		FROM f111_b 	
		LEFT JOIN (SELECT * FROM f611 WHERE f611.WarehouseCode='WTR') b ON  b.INVNo = f111_b.fbill_no
		LEFT JOIN f106 ON f106.Code  = 	b.CustomerCode
		LEFT JOIN f048 ON f048.funit_code =  f111_b.Code
		WHERE 
		YEAR(f111_b.fbill_date) = prmYearfstart_date
		AND MONTH(f111_b.fbill_date)= prmMonthfstart_date
		ORDER BY  f111_b.Code
		;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f111_b_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f111_b_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f111_b_insert`(
	 prmftrn_id INT(11),
	 prmCode VARCHAR(50),
	 prmName VARCHAR(100),
	 prmfcust_code VARCHAR(50),
	 prmfkva_code VARCHAR(50),
	 prmfkva_load DECIMAL(10,2),
	 prmfstart_date DATE,
	 prmffinis_date DATE,
	 prmfstart_mtr DECIMAL(20,0),
	 prmffinis_mtr DECIMAL(20,0),
	 prmfusage DECIMAL(20,0),
	 prmfbill_no VARCHAR(50),
	 prmfbill_date DATE,
	 prmCreatedBy VARCHAR(50)
  )
BEGIN
	INSERT INTO f111_b
	(
	 f111_b.ftrn_id,
	 f111_b.Code,
	 f111_b.Name,
	 f111_b.fcust_code,
	 f111_b.fkva_code,
	 f111_b.fkva_load,
	 f111_b.fstart_date,
	 f111_b.ffinis_date,
	 f111_b.fstart_mtr,
	 f111_b.ffinis_mtr,
	 f111_b.fusage,
	 f111_b.fbill_no,
	 f111_b.fbill_date,
	 f111_b.ActiveStatus,
	 f111_b.CreatedBy,
	 f111_b.CreatedDate
	 )
	values
	( 
	 prmftrn_id,
	 prmCode,
	 prmName,
	 prmfcust_code,
	 prmfkva_code,
	 prmfkva_load,
	 prmfstart_date,
	 prmffinis_date,
	 prmfstart_mtr,
	 prmffinis_mtr,
	 prmfusage,
	 prmfbill_no,
	 prmfbill_date,
	 1, 
	 prmCreatedBy, 
	 NOW()
	 );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f111_b_Search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f111_b_Search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f111_b_Search`(
	IN prmCode VARCHAR(50),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			f111_b.Code, 
			f111_b.Name
		FROM f111_b 
			
		WHERE
			f111_b.Code LIKE prmCode AND f111_b.Name LIKE prmName And f111_b.ActiveStatus = 1
		Order By f111_b.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f111_b_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f111_b_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f111_b_update`(
	 prmffinis_date DATE,	
	 prmfbill_no VARCHAR(50),
	 prmfbill_date DATE,
	 prmUpdatedBy VARCHAR(50), 
         prmOldCode VARCHAR(50)
         )
BEGIN
	UPDATE f111_b SET		
		 f111_b.fbill_no=prmfbill_no,
		 f111_b.fbill_date=prmfbill_date,
		 f111_b.UpdatedBy = prmUpdatedBy, 
	         f111_b.UpdatedDate = NOW()
	WHERE
	   f111_b.Code = prmOldCode and f111_b.ffinis_date = prmffinis_date
	   ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F111_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F111_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F111_delete`(IN prmfstart_date DATE ,IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F111 WHERE F111.Code = prmCode
	and f111.fstart_date = prmfstart_date
	
	
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f111_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f111_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f111_get`(
prmYearfstart_date varchar(4),
prmMonthfstart_date VARCHAR(2)
)
BEGIN	
		
  SELECT 
	 f111.ftrn_id,
	 f111.Code,
	 f111.Name,
	 f111.fcust_code,
	 f111.fkva_code,
	 f111.fkva_load,
	 f111.fstart_date,
	 f111.ffinis_date,
	 f111.fstart_mtr,
	 f111.ffinis_mtr,
	 f111.fusage,
	 f111.fbill_no,
	 f111.fbill_date,
	 f111.ActiveStatus,
	 cast('' as char(200)) as fket
		FROM f111 		
		where 
		YEAR(f111.fstart_date) = prmYearfstart_date
		AND MONTH(f111.fstart_date)= prmMonthfstart_date
		order By  f111.Code;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f111_getBilElectric` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f111_getBilElectric` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f111_getBilElectric`(
prmYearfstart_date varchar(4),
prmMonthfstart_date VARCHAR(2)
)
BEGIN	
		
  
  	SELECT 
	 f111.ftrn_id,
	 f111.Code,	
	 IF(ISNULL(f048.funit_name), "", f048.funit_name) AS NAME,
	  IF(ISNULL(f048.ftrade_name), "", f048.ftrade_name) AS ftrade_name,
	  IF(ISNULL(b.CustomerCode), "", b.CustomerCode) AS fcust_code,
	 	IF(ISNULL(f106.name), "", f106.name) AS fcust_name,	
	 	IF(ISNULL(f106.Phone1), "", f106.Phone1) AS fPhone1,
	--  f111.fcust_code,
	 f111.fkva_code,
	 f111.fkva_load,
	 f111.fstart_date,
	 f111.ffinis_date,
	 f111.fstart_mtr,
	 f111.ffinis_mtr,
	 f111.fusage,
	 f111.fbill_no,
	 f111.fbill_date,
	 b.GrandTotal,
	 f111.ActiveStatus,
	 CAST('' AS CHAR(200)) AS fket
		FROM f111 	
		LEFT JOIN (SELECT * FROM f611 WHERE f611.WarehouseCode='ELC') b ON  b.INVNo = f111.fbill_no
		LEFT JOIN f106 ON f106.Code  = 	b.CustomerCode
		LEFT JOIN f048 ON f048.funit_code =  f111.Code
		WHERE 
		YEAR(f111.fbill_date) = prmYearfstart_date
		AND MONTH(f111.fbill_date)= prmMonthfstart_date
		ORDER BY  f111.Code
		;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f111_getBilWater` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f111_getBilWater` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f111_getBilWater`(
prmYearfstart_date varchar(4),
prmMonthfstart_date VARCHAR(2)
)
BEGIN	
		
  
  	SELECT 
	 f111.ftrn_id,
	 f111.Code,	
	 IF(ISNULL(f048.funit_name), "", f048.funit_name) AS NAME,
	  IF(ISNULL(f048.ftrade_name), "", f048.ftrade_name) AS ftrade_name,
	  IF(ISNULL(b.CustomerCode), "", b.CustomerCode) AS fcust_code,
	 	IF(ISNULL(f106.name), "", f106.name) AS fcust_name,	
	--  f111.fcust_code,
	 f111.fkva_code,
	 f111.fkva_load,
	 f111.fstart_date,
	 f111.ffinis_date,
	 f111.fstart_mtr,
	 f111.ffinis_mtr,
	 f111.fusage,
	 f111.fbill_no,
	 f111.fbill_date,
	 b.GrandTotal,
	 f111.ActiveStatus,
	 CAST('' AS CHAR(200)) AS fket
		FROM f111 	
		LEFT JOIN (SELECT * FROM f611 WHERE f611.WarehouseCode='WTR') b ON  b.INVNo = f111.fbill_no
		LEFT JOIN f106 ON f106.Code  = 	b.CustomerCode
		LEFT JOIN f048 ON f048.funit_code =  f111.Code
		WHERE 
		YEAR(f111.fbill_date) = prmYearfstart_date
		AND MONTH(f111.fbill_date)= prmMonthfstart_date
		ORDER BY  f111.Code
		;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F111_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F111_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F111_insert`(
	 prmftrn_id INT(11),
	 prmCode VARCHAR(50),
	 prmName VARCHAR(100),
	 prmfcust_code VARCHAR(50),
	 prmfkva_code VARCHAR(50),
	 prmfkva_load DECIMAL(10,2),
	 prmfstart_date DATE,
	 prmffinis_date DATE,
	 prmfstart_mtr DECIMAL(20,0),
	 prmffinis_mtr DECIMAL(20,0),
	 prmfusage DECIMAL(20,0),
	 prmfbill_no VARCHAR(50),
	 prmfbill_date DATE,	 
	 prmCreatedBy VARCHAR(50)
  )
BEGIN
	INSERT INTO F111
	(
	 f111.ftrn_id,
	 f111.Code,
	 f111.Name,
	 f111.fcust_code,
	 f111.fkva_code,
	 f111.fkva_load,
	 f111.fstart_date,
	 f111.ffinis_date,
	 f111.fstart_mtr,
	 f111.ffinis_mtr,
	 f111.fusage,
	 f111.fbill_no,
	 f111.fbill_date,
	 f111.ActiveStatus,	 
	 f111.CreatedBy,
	 f111.CreatedDate
	 )
	values
	( 
	 prmftrn_id,
	 prmCode,
	 prmName,
	 prmfcust_code,
	 prmfkva_code,
	 prmfkva_load,
	 prmfstart_date,
	 prmffinis_date,
	 prmfstart_mtr,
	 prmffinis_mtr,
	 prmfusage,
	 prmfbill_no,
	 prmfbill_date,
	 1, 
	
	 prmCreatedBy, 
	 NOW()
	 );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F111_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F111_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F111_update`(
	 prmffinis_date DATE,	
	 prmfbill_no VARCHAR(50),
	 prmfbill_date DATE,
	 prmUpdatedBy VARCHAR(50), 
         prmOldCode VARCHAR(50)
         )
BEGIN
	UPDATE F111 SET		
		 f111.fbill_no=prmfbill_no,
		 f111.fbill_date=prmfbill_date,
		 f111.UpdatedBy = prmUpdatedBy, 
	         f111.UpdatedDate = NOW()
	WHERE
	   f111.Code = prmOldCode and f111.ffinis_date = prmffinis_date
	   ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F112_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F112_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F112_delete`(
	IN prmBranchCode VARCHAR(50), 
	IN prmReasonCode VARCHAR(50) 
)
BEGIN 
	DELETE FROM F112 
	WHERE BranchCode=prmBranchCode 
		AND ReasonCode=prmReasonCode; 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F112_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F112_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F112_insert`(
	IN prmBranchCode VARCHAR(50), 
	IN prmReasonCode VARCHAR(50), 
	IN prmCreditAccountCode VARCHAR(50), 
	IN prmDebitAccountCode VARCHAR(50), 
	IN prmCreatedBy VARCHAR(50) 
)
BEGIN
	INSERT INTO F112 
	(BranchCode, ReasonCode, 
	CreditAccountCode, DebitAccountCode, 
	CreatedBy, CreatedDate) 
	VALUES 
	(prmBranchCode, prmReasonCode, 
	prmCreditAccountCode, prmDebitAccountCode, 
	prmCreatedBy, NOW() ); 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F113_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F113_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F113_delete`(IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM F113 WHERE F113.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F113_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F113_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F113_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	F113.Code, 
	F113.Name, 
	F113.ActiveStatus
		FROM F113
		WHERE F113.Code <> "-" 
			Order By F113.Code;
ELSE
	SELECT
	F113.Code, 
	F113.Name, 
	F113.ActiveStatus
		FROM F113 
			WHERE F113.ActiveStatus = prmActiveStatus
			AND F113.Code <> "-" 
			Order By F113.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F113_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F113_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F113_insert`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), IN prmCreatedBy VARCHAR(50) )
BEGIN
	INSERT INTO F113
	(F113.BranchCode, F113.Code, F113.Name, ActiveStatus, F113.CreatedBy, F113.CreatedDate)
	values
	(prmBranchCode, prmCode, prmName, 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F113_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F113_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F113_search`(IN prmCode VARCHAR(50), IN prmName VARCHAR(50))
BEGIN
	SELECT
		F113.Code, 
		F113.Name
	FROM F113
	WHERE 
		F113.Code LIKE prmCode
	AND 	F113.Name LIKE prmName;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F113_search_Code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F113_search_Code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F113_search_Code`(IN prmCode VARCHAR(50))
BEGIN
	SELECT
		F113.Code, 
		F113.Name
	FROM F113
	WHERE 
		F113.Code LIKE prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F113_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F113_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F113_update`(IN prmBranchCode VARCHAR(50), IN prmCode VARCHAR(50), 
	IN prmName VARCHAR(100), In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE F113 SET
	   F113.Code = prmCode, 
	   F113.Name = prmName, 
	   F113.ActiveStatus = prmActiveStatus,
	   F113.UpdatedBy = prmUpdatedBy, 
	   F113.UpdatedDate = NOW()
	WHERE
	   F113.Code = prmOldCode AND F113.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F114_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F114_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F114_Delete`( 
    IN OldCode VARCHAR(50)
 )
BEGIN 
  DELETE FROM F114 
  WHERE F114.Code = OldCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F114_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F114_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F114_Get`(IN prmActiveStatus1 TINYINT(1), IN prmActiveStatus2 TINYINT(1))
BEGIN 
  SELECT 
    F114.BranchCode, 
    F114.Code, 
    F114.Name, 
    F114.Address, 
    F114.CityCode,
    F009.Name As CityName, 
    F114.CountryCode, 
    F010.Name As CountryName,
    F114.ZipCode, 
    F114.Phone, 
    F114.HandPhone, 
    F114.ActiveStatus,
    F114.CreatedBy, 
    F114.CreatedDate, 
    F114.UpdatedBy, 
    F114.UpdatedDate
FROM F114
INNER JOIN F009 ON F009.Code = F114.CityCode
INNER JOIN F010 ON F010.Code = F114.CountryCode
WHERE F114.ActiveStatus = prmActiveStatus1 OR F114.ActiveStatus = prmActiveStatus2
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F114_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F114_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F114_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmCode VARCHAR(50), 
    IN prmName VARCHAR(100), 
    IN prmAddress TEXT, 
    IN prmCityCode VARCHAR(50), 
    IN prmCountryCode VARCHAR(50), 
    IN prmZipCode VARCHAR(50), 
    IN prmPhone VARCHAR(20), 
    IN prmHandPhone VARCHAR(20), 
    IN prmActiveStatus TINYINT(1), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F114 ( 
    F114.BranchCode, 
    F114.Code, 
    F114.Name, 
    F114.Address, 
    F114.CityCode, 
    F114.CountryCode, 
    F114.ZipCode, 
    F114.Phone, 
    F114.HandPhone, 
    F114.ActiveStatus, 
    F114.CreatedBy, 
    F114.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmCode, 
    prmName, 
    prmAddress, 
    prmCityCode, 
    prmCountryCode, 
    prmZipCode, 
    prmPhone, 
    prmHandPhone, 
    prmActiveStatus, 
    prmCreatedBy, 
    Now()    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F114_Update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F114_Update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F114_Update`( 
    IN oldCode VARCHAR(50),
 
    IN prmBranchCode VARCHAR(50), 
    IN prmCode VARCHAR(50), 
    IN prmName VARCHAR(100), 
    IN prmAddress TEXT, 
    IN prmCityCode VARCHAR(50), 
    IN prmCountryCode VARCHAR(50), 
    IN prmZipCode VARCHAR(50), 
    IN prmPhone VARCHAR(20), 
    IN prmHandPhone VARCHAR(20), 
    IN prmActiveStatus TINYINT(1), 
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE F114 SET 
    F114.BranchCode = prmBranchCode, 
    F114.Code = prmCode, 
    F114.Name = prmName, 
    F114.Address = prmAddress, 
    F114.CityCode = prmCityCode, 
    F114.CountryCode = prmCountryCode, 
    F114.ZipCode = prmZipCode, 
    F114.Phone = prmPhone, 
    F114.HandPhone = prmHandPhone, 
    F114.ActiveStatus = prmActiveStatus, 
    F114.UpdatedBy = prmUpdatedBy, 
    F114.UpdatedDate = Now()
  WHERE F114.Code = oldCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F116_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F116_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F116_delete`(IN prmCode VARCHAR(3))
BEGIN
	DELETE FROM F116 WHERE F116.Code = prmCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f116_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f116_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f116_get`(prmActiveStatus TINYINT(1))
BEGIN
IF (prmActiveStatus = 2) THEN
	SELECT
	f116.Code, 
	f116.Name, 
	
	f116.ActiveStatus
		FROM f116
		WHERE f116.Code <> "-"  
			Order By f116.Code;
ELSE
	SELECT
	f116.Code, 
	f116.Name, 
	
	f116.ActiveStatus
		FROM f116 
			WHERE f116.ActiveStatus = prmActiveStatus
			AND  f116.Code <> "-"  
			Order By f116.Code;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f116_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f116_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f116_insert`(IN prmCode VARCHAR(3),
	IN prmName VARCHAR(100), IN prmCreatedBy VARCHAR(50))
BEGIN
	INSERT INTO f116
	(f116.Code, f116.Name,ActiveStatus, f116.CreatedBy, f116.CreatedDate)
	values
	(prmCode, prmName, 1, prmCreatedBy, NOW());
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f116_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f116_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f116_search`(
	IN prmCode VARCHAR(3),
	IN prmName VARCHAR(50)
)
BEGIN
		SELECT 
			f116.Code, 
			f116.Name
		FROM f116 
		WHERE
			f116.Code LIKE prmCode AND 
			f116.Name LIKE prmName AND
			f116.ActiveStatus = 1
		Order By f116.Code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f116_search_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f116_search_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f116_search_code`(prmCode VARCHAR(3))
BEGIN
		SELECT 
			f116.Code, f116.AreaCode,f116.Name
		FROM 
			f116
		WHERE 
		
			 f116.Code LIKE prmCode
		Order By 
			f116.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f116_search_name` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f116_search_name` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f116_search_name`(prmName VARCHAR(50))
BEGIN
		SELECT 
			f116.Code, f116.AreaCode,f116.Name,f116.CutOffInv
		FROM 
			f116
		WHERE 
				f116.Name LIKE prmName
				AND f116.ActiveStatus = 1
		Order By 
			f116.Name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f116_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f116_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f116_update`(IN prmCode VARCHAR(3), 
	IN prmName VARCHAR(100), In prmActiveStatus boolean, IN prmUpdatedBy VARCHAR(50), IN prmOldCode VARCHAR(50))
BEGIN
	UPDATE f116 SET
	   f116.Code = prmCode, 
	
	   f116.Name = prmName, 
	   f116.ActiveStatus = prmActiveStatus,
	   f116.UpdatedBy = prmUpdatedBy, 
	   f116.UpdatedDate = NOW()
	WHERE
	   f116.Code = prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f117_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f117_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f117_delete`(IN prmfstart_date DATE ,IN prmCode VARCHAR(50))
BEGIN
	DELETE FROM f117 WHERE f117.Code = prmCode
	and f117.fstart_date = prmfstart_date
	
	
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f117_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f117_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f117_get`(
prmfstart_date date
)
BEGIN	
		
SELECT 
	 f117.ftrn_id,
	 f117.Code,
	 f117.Name,
	 f117.fcust_code,
	 f117.fwtr_code,
	 f117.fwtr_tariff,
	 f117.fstart_date,
	 f117.ffinis_date,
	 f117.fstart_mtr,
	 f117.ffinis_mtr,
	 f117.fusage,
	 f117.fbill_no,
	 f117.fbill_date
		FROM f117 		
		where 
		f117.fstart_date = prmfstart_date 
		-- and f117.Code = prmCode
		order By  f117.Code;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f117_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f117_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f117_insert`(
	 prmftrn_id INT(11),
	 prmCode VARCHAR(50),
	 prmName VARCHAR(100),
	 prmfcust_code VARCHAR(50),
	 prmfwtr_code VARCHAR(50),
	 prmfwtr_tariff DECIMAL(10,2),
	 prmfstart_date DATE,
	 prmffinis_date DATE,
	 prmfstart_mtr DECIMAL(20,0),
	 prmffinis_mtr DECIMAL(20,0),
	 prmfusage DECIMAL(20,0),
	 prmfbill_no VARCHAR(50),
	 prmfbill_date DATE,
	 prmCreatedBy VARCHAR(50)
  )
BEGIN
	INSERT INTO f117
	(
	 f117.ftrn_id,
	 f117.Code,
	 f117.Name,
	 f117.fcust_code,
	 f117.fwtr_code,
	 f117.fwtr_tariff,
	 f117.fstart_date,
	 f117.ffinis_date,
	 f117.fstart_mtr,
	 f117.ffinis_mtr,
	 f117.fusage,
	 f117.fbill_no,
	 f117.fbill_date,
	 f117.ActiveStatus,
	 f117.CreatedBy,
	 f117.CreatedDate
	 )
	values
	( 
	 prmftrn_id,
	 prmCode,
	 prmName,
	 prmfcust_code,
	 prmfwtr_code,
	 prmfwtr_tariff,
	 prmfstart_date,
	 prmffinis_date,
	 prmfstart_mtr,
	 prmffinis_mtr,
	 prmfusage,
	 prmfbill_no,
	 prmfbill_date,
	 1, 
	 prmCreatedBy, 
	 NOW()
	 );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f117_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f117_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f117_update`(
	 prmftrn_id INT(11),
	 prmCode VARCHAR(50),
	 prmName VARCHAR(100),
	 prmfcust_code VARCHAR(50),
	 prmfwtr_code VARCHAR(50),
	 prmfwtr_tariff DECIMAL(10,2),
	 prmfstart_date DATE,
	 prmffinis_date DATE,
	 prmfstart_mtr DECIMAL(20,0),
	 prmffinis_mtr DECIMAL(20,0),
	 prmfusage DECIMAL(20,0),
	 prmfbill_no VARCHAR(50),
	 prmfbill_date DATE,
	 prmUpdatedBy VARCHAR(50), 
         prmOldCode VARCHAR(50)
         )
BEGIN
	UPDATE f117 SET
		 f117.ftrn_id=prmftrn_id,
		 -- f117.Code=prmCode,
		 f117.Name=prmName,
		 f117.fcust_code=prmfcust_code,
		 f117.fwtr_code=prmfwtr_code,
		 f117.fwtr_tariff=prmfwtr_tariff,
		 f117.fstart_date=prmfstart_date,
		 f117.ffinis_date=prmffinis_date,
		 f117.fstart_mtr=prmfstart_mtr,
		 f117.ffinis_mtr=prmffinis_mtr,
		 f117.fusage=prmfusage,
		 f117.fbill_no=prmfbill_no,
		 f117.fbill_date=prmfbill_date,
		 f117.UpdatedBy = prmUpdatedBy, 
	         f117.UpdatedDate = NOW()
	WHERE
	   f117.Code = prmOldCode and f117.fstart_date = prmfstart_date
	   ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F154_F155_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F154_F155_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F154_F155_get`(
	prmEmployeeCode  varchar(6), prmCreditDate date
)
BEGIN
	
		SELECT 			
			F154.EmployeeCode, 
			F154.CreditDate, 
			F154.CreditAmount,  
			F154.PaymentAmount,    
			F154.TotalPaymentAmount,
			F154.CreditSaldo,      
			F154.Paid, 
			F155.PaymentDate as PaymentDate,  
			F155.PaymentAmount as PaymentAmount
		FROM F154 
		INNER JOIN F155 ON F154.EmployeeCode = F155.EmployeeCode 
		WHERE 
			F155.EmployeeCode = prmEmployeeCode and 
			F155.CreditDate = prmCreditDate
		Order By F155.CreditDate;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_Closing` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_Closing` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_Closing`(
	prmBranchCode VARCHAR(50),
	prmPODNo VARCHAR(50),
	prmClosingDate DateTime,
	prmClosingStatus Boolean,
	prmUpdatedBy VARCHAR(50)
)
BEGIN
		DECLARE vClosingDate DATETIME;
		IF prmClosingDate IS NULL THEN
			SET vClosingDate = '1900-1-1';
		ELSE
			SET vClosingDate = prmClosingDate;
		END IF;
		UPDATE 
			F201 
		SET 
			ClosingStatus = prmClosingStatus,
			ClosingDate = vClosingDate,
			UpdatedBy = prmUpdatedBy
		WHERE 
			PODNo = prmPODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_delete`(
	prmBranchCode VARCHAR(50),
	prmPODNo VARCHAR(50)
)
Begin
	Delete From F202
	WHERE PODNo = prmPODNo;
	Delete From F201 
	WHERE PODNo = prmPODNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate DATETIME,
   IN prmLastDate DATETIME,
   IN prmPODNo VARCHAR(50),
   IN prmPODStatus VARCHAR(50),
   IN prmSupplierName VARCHAR(100),
   IN prmCurrencyCode VARCHAR(50),
   IN prmClosingStatus1 TINYINT(1),
   IN prmClosingStatus2 TINYINT(1),
   IN prmReceivedStatus1 TINYINT(1),
   IN prmReceivedStatus2 TINYINT(1)
)
BEGIN
SELECT
	F201.BranchCode,
	 F001.Name AS BranchName, 
	F201.PODNo,
	F201.PODStatus,
	F201.TransactionDate, 
	F201.DeliveryDateStart, 
	F201.DeliveryDateEnd,
	F201.ExpiredDate,
	F018.Code 						AS  PaymentTermCode, 
	F018.Name 						AS  PaymentTermName, 
	F018.Days						AS  PaymentTermDays,
	 F109.Code 						AS  SupplierCode, 
	 F109.Name 						AS  SupplierName, 
	 F109.ContactPerson 					AS  SupplierContactPerson, 
	 F109.Address	 					AS  SupplierAddress, 
	F109.ZipCode 						AS  SupplierZipCode, 
	F109.Phone1 						AS  SupplierPhone1, 
	 F109.Phone2 						AS  SupplierPhone2, 
	 F109.Fax 						AS  SupplierFax, 
	 F109.EmailAddress 					AS  SupplierEmailAddress, 
	-- F010.Code 						AS  SupplierCountryCode,  
	-- F010.Name 						AS  SupplierCountryName, 
	-- F009.Code 						AS  SupplierCityCode,  
	-- F009.Name 						AS  SupplierCityName,
	F201.SupplierApprovedBy,
	F201.SupplierApprovedJobPosition, 
	F201.CurrencyCode,
	F006.Name 						AS  CurrencyName,
	F201.RefNo,
	F201.ApprovedBy,
	F201.ApproveJobPosition,
	F201.Description					AS  PODDescriptionHeader,
	GoodsDest.Code 						AS  GoodsDestinationCode, 
	GoodsDest.Name 						AS  GoodsDestinationName,
	InvDest.Code    					AS  InvoiceDestinationCode, 
	InvDest.Name    					AS  InvoiceDestinationName, 
	F201.TotalTransactionAmount 				AS  PODTotalTransactionAmount, 
		F201.DiscountPercent 					AS  PODDiscountPercentHeader, 
	F201.DiscountAmount 					AS  PODDiscountAmountHeader, 
		F201.PPNPercent 					AS  PODPPNPercent, 
	F201.PPNAmount 						AS  PODPPNAmount, 
		F201.FreightFeeAmount 					AS  PODFreightFeeAmount, 
		F201.InsuranceFeeAmount 				AS  PODInsuranceFeeAmount, 
		F201.AdministrationFeeAmount 				AS  PODAdministrationFeeAmount, 
		F201.OtherFeeAmount 			    		AS  PODOtherFeeAmount, 
		F201.GrandTotalAmount 			    		AS  PODGrandTotalAmount, 
		F201.PaidAmount 			    		AS  PODPaidAmount, 
	F201.RoundedAmount					AS  PODRoundedAmount,
	F201.ClosingStatus,
	F201.ClosingDate,
	-- IFNULL(GROUP_CONCAT(F301.GRNNo), "") AS  GRNNo,
	F201.StatusLampiran,
	F201.RekapDes
	FROM F201
	    LEFT JOIN F001 ON F201.BranchCOde = F001.Code  
	    LEFT JOIN F006 ON F201.CurrencyCode = F006.Code 
	    LEFT JOIN F109 ON F201.SupplierCode = F109.Code 
	  --  LEFT JOIN F009 ON F109.CityCode     = F009.Code 
	  --  LEFT JOIN F010 ON F109.CountryCode  = F010.Code     
	  LEFT JOIN F018 ON F201.PaymentTermCode  = F018.Code
	   LEFT  JOIN F107 AS  GoodsDest ON F201.GoodsDestinationCode = GoodsDest.Code
	   LEFT  JOIN F107 AS  InvDest   ON InvDest.Code = F201.InvoiceDestinationCode
	   LEFT  JOIN F301 ON F201.BranchCode = F301.BranchCode AND F201.PODNo = F301.PODNo
	WHERE 
		 F201.TransactionDate 	BETWEEN prmFirstDate AND prmLastDate AND
		 F201.PODNo 		LIKE prmPODNo AND
		 F201.PODStatus 	LIKE prmPODStatus AND
		 F109.Name  		LIKE prmSupplierName AND
		 F201.CurrencyCode 	LIKE prmCurrencyCode AND
		 (F201.ClosingStatus = prmClosingStatus1 OR F201.ClosingStatus = prmClosingStatus2) AND
		 (IF(F301.GRNNo IS NULL, FALSE, TRUE) = prmReceivedStatus1 OR IF(F301.GRNNo IS NULL, FALSE, TRUE) = prmReceivedStatus2)
GROUP BY F201.BranchCode, F201.PODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_getExp` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_getExp` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_getExp`(
   )
BEGIN
	SELECT	
	F201.PODNo
	from F201
		 ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_getPosting` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_getPosting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_getPosting`(
   -- IN prmBranchCode VARCHAR(50),
   IN prmFirstDate DATETIME,
   IN prmLastDate DATETIME,
   IN prmPODNo VARCHAR(50),
   -- IN prmPODStatus VARCHAR(50),
   -- IN prmSupplierName VARCHAR(100),
   -- IN prmCurrencyCode VARCHAR(50),
   -- IN prmClosingStatus1 TINYINT(1),
   -- IN prmClosingStatus2 TINYINT(1),
   IN prmPostPO1 TINYINT(1),
   IN prmPostPO2 TINYINT(1)
)
BEGIN
SELECT
	F201.BranchCode,
	 F001.Name AS BranchName, 
	F201.PODNo,
	F201.PODStatus,
	f201.PostStatus,
	F201.TransactionDate, 
	F201.DeliveryDateStart, 
	F201.DeliveryDateEnd,
	F201.ExpiredDate,
	F018.Code 						AS  PaymentTermCode, 
	F018.Name 						AS  PaymentTermName, 
	F018.Days						AS  PaymentTermDays,
	 F109.Code 						AS  SupplierCode, 
	 F109.Name 						AS  SupplierName, 
	 F109.ContactPerson 					AS  SupplierContactPerson, 
	 F109.Address	 					AS  SupplierAddress, 
	F109.ZipCode 						AS  SupplierZipCode, 
	F109.Phone1 						AS  SupplierPhone1, 
	 F109.Phone2 						AS  SupplierPhone2, 
	 F109.Fax 						AS  SupplierFax, 
	 F109.EmailAddress 					AS  SupplierEmailAddress, 
	-- F010.Code 						AS  SupplierCountryCode,  
	-- F010.Name 						AS  SupplierCountryName, 
	-- F009.Code 						AS  SupplierCityCode,  
	-- F009.Name 						AS  SupplierCityName,
	F201.SupplierApprovedBy,
	F201.SupplierApprovedJobPosition, 
	F201.CurrencyCode,
	F006.Name 						AS  CurrencyName,
	F201.RefNo,
	F201.ApprovedBy,
	F201.ApproveJobPosition,
	F201.Description					AS  PODDescriptionHeader,
	GoodsDest.Code 						AS  GoodsDestinationCode, 
	GoodsDest.Name 						AS  GoodsDestinationName,
	InvDest.Code    					AS  InvoiceDestinationCode, 
	InvDest.Name    					AS  InvoiceDestinationName, 
	F201.TotalTransactionAmount 				AS  PODTotalTransactionAmount, 
		F201.DiscountPercent 					AS  PODDiscountPercentHeader, 
	F201.DiscountAmount 					AS  PODDiscountAmountHeader, 
		F201.PPNPercent 					AS  PODPPNPercent, 
	F201.PPNAmount 						AS  PODPPNAmount, 
		F201.FreightFeeAmount 					AS  PODFreightFeeAmount, 
		F201.InsuranceFeeAmount 				AS  PODInsuranceFeeAmount, 
		F201.AdministrationFeeAmount 				AS  PODAdministrationFeeAmount, 
		F201.OtherFeeAmount 			    		AS  PODOtherFeeAmount, 
		F201.GrandTotalAmount 			    		AS  PODGrandTotalAmount, 
		F201.PaidAmount 			    		AS  PODPaidAmount, 
	F201.RoundedAmount					AS  PODRoundedAmount,
	F201.ClosingStatus,
	F201.ClosingDate,
	-- IFNULL(GROUP_CONCAT(F301.GRNNo), "") AS  GRNNo,
	F201.StatusLampiran,
	F201.RekapDes
	FROM F201
	    LEFT JOIN F001 ON F201.BranchCOde = F001.Code  
	    LEFT JOIN F006 ON F201.CurrencyCode = F006.Code 
	    LEFT JOIN F109 ON F201.SupplierCode = F109.Code 
	  --  LEFT JOIN F009 ON F109.CityCode     = F009.Code 
	  --  LEFT JOIN F010 ON F109.CountryCode  = F010.Code     
	  LEFT JOIN F018 ON F201.PaymentTermCode  = F018.Code
	   LEFT  JOIN F107 AS  GoodsDest ON F201.GoodsDestinationCode = GoodsDest.Code
	   LEFT  JOIN F107 AS  InvDest   ON InvDest.Code = F201.InvoiceDestinationCode
	   LEFT  JOIN F301 ON F201.BranchCode = F301.BranchCode AND F201.PODNo = F301.PODNo
	WHERE 
		 F201.TransactionDate 	BETWEEN prmFirstDate AND prmLastDate AND
		 F201.PODNo 		LIKE prmPODNo AND
		 -- F201.PODStatus 	LIKE prmPODStatus AND
		 -- F109.Name  		LIKE prmSupplierName AND
		 -- F201.CurrencyCode 	LIKE prmCurrencyCode AND
		 (F201.PostStatus = prmPostPO1 OR F201.PostStatus = prmPostPO2)
		 -- (IF(F301.GRNNo IS NULL, FALSE, TRUE) = prmReceivedStatus1 OR IF(F301.GRNNo IS NULL, FALSE, TRUE) = prmReceivedStatus2)
GROUP BY F201.BranchCode, F201.PODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_getPosting2` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_getPosting2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_getPosting2`(
   -- IN prmBranchCode VARCHAR(50),
   IN prmFirstDate DATETIME,
   IN prmLastDate DATETIME,
   IN prmPODNo VARCHAR(50),
   -- IN prmPODStatus VARCHAR(50),
   -- IN prmSupplierName VARCHAR(100),
   -- IN prmCurrencyCode VARCHAR(50),
   -- IN prmClosingStatus1 TINYINT(1),
   -- IN prmClosingStatus2 TINYINT(1),
   IN prmPostPO1 TINYINT(1),
   IN prmPostPO2 TINYINT(1)
)
BEGIN
SELECT
	F201.BranchCode,
	 F001.Name AS BranchName, 
	F201.PODNo,
	F201.PODStatus,
	f201.PostStatus,
	f201.PostStatus2,
	F201.TransactionDate, 
	F201.DeliveryDateStart, 
	F201.DeliveryDateEnd,
	F201.ExpiredDate,
	F018.Code 						AS  PaymentTermCode, 
	F018.Name 						AS  PaymentTermName, 
	F018.Days						AS  PaymentTermDays,
	 F109.Code 						AS  SupplierCode, 
	 F109.Name 						AS  SupplierName, 
	 F109.ContactPerson 					AS  SupplierContactPerson, 
	 F109.Address	 					AS  SupplierAddress, 
	F109.ZipCode 						AS  SupplierZipCode, 
	F109.Phone1 						AS  SupplierPhone1, 
	 F109.Phone2 						AS  SupplierPhone2, 
	 F109.Fax 						AS  SupplierFax, 
	 F109.EmailAddress 					AS  SupplierEmailAddress, 
	-- F010.Code 						AS  SupplierCountryCode,  
	-- F010.Name 						AS  SupplierCountryName, 
	-- F009.Code 						AS  SupplierCityCode,  
	-- F009.Name 						AS  SupplierCityName,
	F201.SupplierApprovedBy,
	F201.SupplierApprovedJobPosition, 
	F201.CurrencyCode,
	F006.Name 						AS  CurrencyName,
	F201.RefNo,
	F201.ApprovedBy,
	F201.ApproveJobPosition,
	F201.Description					AS  PODDescriptionHeader,
	GoodsDest.Code 						AS  GoodsDestinationCode, 
	GoodsDest.Name 						AS  GoodsDestinationName,
	InvDest.Code    					AS  InvoiceDestinationCode, 
	InvDest.Name    					AS  InvoiceDestinationName, 
	F201.TotalTransactionAmount 				AS  PODTotalTransactionAmount, 
		F201.DiscountPercent 					AS  PODDiscountPercentHeader, 
	F201.DiscountAmount 					AS  PODDiscountAmountHeader, 
		F201.PPNPercent 					AS  PODPPNPercent, 
	F201.PPNAmount 						AS  PODPPNAmount, 
		F201.FreightFeeAmount 					AS  PODFreightFeeAmount, 
		F201.InsuranceFeeAmount 				AS  PODInsuranceFeeAmount, 
		F201.AdministrationFeeAmount 				AS  PODAdministrationFeeAmount, 
		F201.OtherFeeAmount 			    		AS  PODOtherFeeAmount, 
		F201.GrandTotalAmount 			    		AS  PODGrandTotalAmount, 
		F201.PaidAmount 			    		AS  PODPaidAmount, 
	F201.RoundedAmount					AS  PODRoundedAmount,
	F201.ClosingStatus,
	F201.ClosingDate,
	-- IFNULL(GROUP_CONCAT(F301.GRNNo), "") AS  GRNNo,
	F201.StatusLampiran,
	F201.RekapDes
	FROM F201
	    LEFT JOIN F001 ON F201.BranchCOde = F001.Code  
	    LEFT JOIN F006 ON F201.CurrencyCode = F006.Code 
	    LEFT JOIN F109 ON F201.SupplierCode = F109.Code 
	  --  LEFT JOIN F009 ON F109.CityCode     = F009.Code 
	  --  LEFT JOIN F010 ON F109.CountryCode  = F010.Code     
	  LEFT JOIN F018 ON F201.PaymentTermCode  = F018.Code
	   LEFT  JOIN F107 AS  GoodsDest ON F201.GoodsDestinationCode = GoodsDest.Code
	   LEFT  JOIN F107 AS  InvDest   ON InvDest.Code = F201.InvoiceDestinationCode
	   LEFT  JOIN F301 ON F201.BranchCode = F301.BranchCode AND F201.PODNo = F301.PODNo
	WHERE 
		 F201.TransactionDate 	BETWEEN prmFirstDate AND prmLastDate AND
		 F201.PODNo 		LIKE prmPODNo AND
		 -- F201.PODStatus 	LIKE prmPODStatus AND
		 -- F109.Name  		LIKE prmSupplierName AND
		 -- F201.CurrencyCode 	LIKE prmCurrencyCode AND
		 F201.PostStatus = 1 AND
		 (F201.PostStatus2 = prmPostPO1 OR F201.PostStatus2 = prmPostPO2)
		 -- (IF(F301.GRNNo IS NULL, FALSE, TRUE) = prmReceivedStatus1 OR IF(F301.GRNNo IS NULL, FALSE, TRUE) = prmReceivedStatus2)
GROUP BY F201.BranchCode, F201.PODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_insert`(
	prmBranchCode VARCHAR(50),
	prmPODNo VARCHAR(50),
	prmPODStatus VARCHAR(1), 
	prmTransactionDate DateTime, 
	prmClosingDate DateTime, 
	prmDeliveryDateStart DateTime, 
	prmDeliveryDateEnd DateTime,
	prmExpiredDate DateTime, 
	prmPaymentTermCode VARCHAR(50), 
	prmSupplierCode VARCHAR(50),
	prmSupplierApprovedBy VARCHAR(100),
	prmSupplierApprovedJobPosition VARCHAR(100), 
	prmCurrencyCode VARCHAR(50), 
	prmRefNo Varchar(100),
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal(18,4), 
	prmDiscountPercent Decimal(18,4), 
	prmDiscountAmount Decimal(18,4), 
	prmPPNPercent Decimal(18,4), 
	prmPPNAmount Decimal(18,4), 
	prmFreightFeeAmount Decimal(18,4), 
	prmInsuranceFeeAmount Decimal(18,4), 
	prmAdministrationFeeAmount Decimal(18,4), 
	prmOtherFeeAmount Decimal(18,4), 
	prmGrandTotalAmount Decimal(18,4), 
	prmRoundedAmount Decimal(18,4),
	prmPaidAmount Decimal(18,4),  
	prmGoodsDestinationCode VARCHAR(50), 
	prmInvoiceDestinationCode VARCHAR(50), 
	prmApprovedBy VARCHAR(50),
	prmApproveJobPosition VARCHAR(50), 
	prmStatusLampiran VARCHAR(1),
	prmRekapDes VARCHAR(200),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO f201 
		(
			BranchCode, 
			PODNo,
			PODStatus, 
			TransactionDate, 
			ClosingDate, 
			DeliveryDateStart, 
			DeliveryDateEnd,
			ExpiredDate, 
			PaymentTermCode, 
			SupplierCode,
			SupplierApprovedBy,
			SupplierApprovedJobPosition, 
			CurrencyCode, 
			RefNo,
			Description, 
			TotalTransactionAmount, 
			DiscountPercent, 
			DiscountAmount, 
			PPNPercent, 
			PPNAmount, 
			FreightFeeAmount, 
			InsuranceFeeAmount, 
			AdministrationFeeAmount, 
			OtherFeeAmount, 
			GrandTotalAmount, 
			RoundedAmount,
			PaidAmount,  
			GoodsDestinationCode, 
			InvoiceDestinationCode, 
			ApprovedBy,
			ApproveJobPosition, 
		StatusLampiran,
		RekapDes,
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
			prmBranchCode, 
			prmPODNo,
			prmPODStatus, 
			prmTransactionDate, 
			prmClosingDate, 
			prmDeliveryDateStart, 
			prmDeliveryDateEnd,
			prmExpiredDate, 
			prmPaymentTermCode, 
			prmSupplierCode,
			prmSupplierApprovedBy,
			prmSupplierApprovedJobPosition,  
			prmCurrencyCode, 
			prmRefno, 
			prmDescription, 
			prmTotalTransactionAmount, 
			prmDiscountPercent, 
			prmDiscountAmount, 
			prmPPNPercent, 
			prmPPNAmount, 
			prmFreightFeeAmount, 
			prmInsuranceFeeAmount, 
			prmAdministrationFeeAmount, 
			prmOtherFeeAmount, 
			prmGrandTotalAmount, 
			prmPaidAmount,  
			prmRoundedAmount,
			prmGoodsDestinationCode, 
			prmInvoiceDestinationCode, 
			prmApprovedBy,
			prmApproveJobPosition,  
		prmStatusLampiran,
		prmRekapDes,
			prmCreatedBy, 
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_PostingPO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_PostingPO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_PostingPO`(
	prmBranchCode VARCHAR(50),
	prmPODNo VARCHAR(50),
	prmPostingDate DATETIME,
	prmPostingStatus BOOLEAN,
	prmUpdatedBy VARCHAR(50)
)
BEGIN
		DECLARE vPostingDate DATETIME;
		IF prmPostingDate IS NULL THEN
			SET vPostingDate = '1900-1-1';
		ELSE
			SET vPostingDate = prmPostingDate;
		END IF;
		UPDATE 
			F201 
		SET 
			PostStatus = prmPostingStatus,
			UpdatedDate = vPostingDate,
			UpdatedBy = prmUpdatedBy
		WHERE 
			PODNo = prmPODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_PostingPO2` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_PostingPO2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_PostingPO2`(
	prmBranchCode VARCHAR(50),
	prmPODNo VARCHAR(50),
	prmPostingDate DATETIME,
	prmPostingStatus BOOLEAN,
	prmUpdatedBy VARCHAR(50)
)
BEGIN
		DECLARE vPostingDate DATETIME;
		IF prmPostingDate IS NULL THEN
			SET vPostingDate = '1900-1-1';
		ELSE
			SET vPostingDate = prmPostingDate;
		END IF;
		UPDATE 
			F201 
		SET 
			PostStatus2 = prmPostingStatus,
			UpdatedDate = vPostingDate,
			UpdatedBy = prmUpdatedBy
		WHERE 
			PODNo = prmPODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_Search_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_Search_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_Search_ByCode`(
   IN prmCode varchar(50),
   IN prmClosingStatus1 tinyint(1), IN prmClosingStatus2 tinyint(1))
BEGIN
	SELECT
	F201.BranchCode,
	F001.Name As BranchName,
	F201.PODNo, 
	F018.Code		as PaymentTermCode, 
	F018.Name 		as PaymentTermName, 
	F109.Code 		as SupplierCode, 
	F109.Name 		as SupplierName, 
	F109.ContactPerson 	as SupplierContactPerson, 
	F006.Code 		as CurrencyCode, 
	F006.Name 		as CurrencyName,
	F201.DiscountPercent 	as PODDiscountPercentHeader,
	F201.PPNPercent 	as PODPPNPercent
	from F201 
	    Inner JOIN F001 ON F201.BranchCode = F001.Code 
	    INNER JOIN F006 ON F201.CurrencyCode = F006.Code 
	    INNER JOIN F109 ON F201.SupplierCode = F109.Code 
	    INNER JOIN F018 ON F201.PaymentTermCode  = F018.Code
	WHERE 
		
		F201.PODNo = prmCode AND
		(F201.ClosingStatus = prmClosingStatus1 OR F201.ClosingStatus = prmClosingStatus2);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_Search_ForGRN` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_Search_ForGRN` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_Search_ForGRN`(
  IN prmBranchCode varchar(50), IN prmFirstDate varchar(50), IN prmLastDate varchar(50),
  IN prmSupplierCode varchar(50), IN prmClosingStatus1 tinyint(1), IN prmClosingStatus2 tinyint(1))
BEGIN
	SELECT
	F201.BranchCode,
	F001.Name As BranchName,
	F201.PODNo,
	F201.TransactionDate,
	F201.RefNo,
	F201.SupplierCode,
	F109.Name As SupplierName,
	f109.AccountCode as SupplierAccountCode,
	F109.ContactPerson,
	F201.CurrencyCode,
	F006.Name As CurrencyName,
	F201.PaymentTermCode,
	-- F018.Name As PaymentTermName,
	F201.Description,
	F201.DiscountPercent,
	F201.PPNPercent
	FROM F201
	INNER JOIN F001 ON F201.BranchCode = F001.Code
	INNER JOIN F109 ON F201.SupplierCode = F109.Code
	INNER JOIN F006 ON F201.CurrencyCode = F006.Code
	-- INNER JOIN F018 ON F201.PaymentTermCode = F018.Code
	WHERE 
	F201.BranchCode LIKE prmBranchCode AND
	F201.SupplierCode LIKE prmSupplierCode AND
	f201.PostStatus = 1 And f201.PostStatus2 =1 And
	F201.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
	(F201.ClosingStatus = prmClosingStatus1 OR F201.ClosingStatus = prmClosingStatus2);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_update`(
	prmBranchCode VARCHAR(50),
	prmPODNo VARCHAR(50),
	prmPODStatus VARCHAR(1),
	prmTransactionDate DateTime, 
	prmClosingDate DateTime, 
	prmDeliveryDateStart DateTime, 
	prmDeliveryDateEnd DateTime,
	prmExpiredDate DateTime,  
	prmPaymentTermCode VARCHAR(50), 
	prmSupplierCode VARCHAR(50),
	prmSupplierApprovedBy VARCHAR(100),
	prmSupplierApprovedJobPosition VARCHAR(100),  
	prmCurrencyCode VARCHAR(50), 
	prmRefNo VARCHAR(50), 
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal(18,4), 
	prmDiscountPercent Decimal(18,4), 
	prmDiscountAmount Decimal(18,4), 
	prmPPNPercent Decimal(18,4), 
	prmPPNAmount Decimal(18,4), 
	prmFreightFeeAmount Decimal(18,4), 
	prmInsuranceFeeAmount Decimal(18,4), 
	prmAdministrationFeeAmount Decimal(18,4), 
	prmOtherFeeAmount Decimal(18,4), 
	prmGrandTotalAmount Decimal(18,4), 
	prmPaidAmount Decimal(18,4),  
	prmRoundedAmount Decimal(18,4),
	prmGoodsDestinationCode VARCHAR(50), 
	prmInvoiceDestinationCode VARCHAR(50), 
	prmApprovedBy VARCHAR(50),
	prmApproveJobPosition VARCHAR(50),
prmStatusLampiran VARCHAR(1),
	prmRekapDes VARCHAR(200),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F201 SET
			BranchCode 			= 	prmBranchCode,
			PODNo 				=	prmPODNo,
			PODStatus 			= 	prmPODStatus,
			TransactionDate 			=	prmTransactionDate, 
			ClosingDate 			=	prmClosingDate, 
			DeliveryDateStart 		=	prmDeliveryDateStart, 
			DeliveryDateEnd 			=	prmDeliveryDateEnd,
			ExpiredDate 			=	prmExpiredDate,  
			PaymentTermCode 		=	prmPaymentTermCode, 
			SupplierCode 			=	prmSupplierCode,
			SupplierApprovedBy 		= 	prmSupplierApprovedBy,
			SupplierApprovedJobPosition = 	prmSupplierApprovedJobPosition,  
			CurrencyCode 			=	prmCurrencyCode,
			RefNo 				= 	prmRefno, 
			Description 			=	prmDescription, 
			TotalTransactionAmount 	=	prmTotalTransactionAmount, 
			DiscountPercent 		=	prmDiscountPercent, 
			DiscountAmount 		=	prmDiscountAmount, 
			PPNPercent 			=	prmPPNPercent, 
			PPNAmount 			=	prmPPNAmount, 
			FreightFeeAmount 		=	prmFreightFeeAmount, 
			InsuranceFeeAmount 		=	prmInsuranceFeeAmount, 
			AdministrationFeeAmount 	=	prmAdministrationFeeAmount, 
			OtherFeeAmount 		=	prmOtherFeeAmount, 
			GrandTotalAmount 		=	prmGrandTotalAmount, 
			RoundedAmount				= prmRoundedAmount,
			PaidAmount  			=	prmPaidAmount,  
			GoodsDestinationCode 	=	prmGoodsDestinationCode, 
			InvoiceDestinationCode 	=	prmInvoiceDestinationCode, 
			ApprovedBy  			=	prmApprovedBy,
			ApproveJobPosition 		= 	prmApproveJobPosition,  
		StatusLampiran=prmStatusLampiran,
		RekapDes=prmRekapDes,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			PODNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_Update_PaidAmount_F506` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_Update_PaidAmount_F506` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_Update_PaidAmount_F506`(
        prmPODNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount decimal(18,4)
)
BEGIN
		UPDATE F201 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F506 prmPaidAmount 
					where BranchCode=prmBranchCode and BKKNo=prmBuktiNo 
				     and DocumentNo=prmPODNo),0) + 
				     prmPaidAmount 
		WHERE 
			BranchCode = prmBranchCode AND PODNo = prmPODNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F201_Update_PaidAmount_F508` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F201_Update_PaidAmount_F508` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F201_Update_PaidAmount_F508`(
        prmPODNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount decimal(18,4)
)
BEGIN
		UPDATE F201 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F508 prmPaidAmount 
					where BranchCode=prmBranchCode and BBKNo=prmBuktiNo 
				     and DocumentNo=prmPODNo),0) + 
				     prmPaidAmount 
		WHERE 
			BranchCode = prmBranchCode AND PODNo = prmPODNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F202_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F202_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F202_delete`(
	prmBranchCode VARCHAR(50),
	prmPODNo VARCHAR(50)
)
BEGIN
		DELETE FROM F202 WHERE PODNo = prmPODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F202_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F202_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F202_get`(prmBranchCode VARCHAR(50), prmPODNo VARCHAR(50))
BEGIN
		SELECT 	
			F202.PODNo, 
			F202.ItemCode,
			F013.Name AS ItemName,
			F013.ItemTypeCode,
			f015.Name AS ItemTypeName,
			f015.AccountCode AS ItemAccountCode,
			f013.UnitCode,
			F202.Quantity, 
			F202.Description, 
			F202.Price, 
			F202.DiscountPercent1, 
			F202.DiscountAmount1, 
			F202.DiscountPercent2, 
			F202.DiscountAmount2, 
			F202.DiscountPercent3, 
			F202.DiscountAmount3,
			((F202.Quantity * F202.Price) - F202.DiscountAmount1 - F202.DiscountAmount2 - F202.DiscountAmount3) AS Total
		FROM
			F202
			INNER JOIN F013 ON F202.ItemCode = F013.Code
			INNER JOIN F015 ON F013.ItemTypeCode = F015.code
		WHERE
			F202.BranchCode = prmBranchCode AND F202.PODNo = prmPODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F202_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F202_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F202_insert`(
	prmBranchCode VARCHAR(50), 
	prmPODNo VARCHAR(50), 
	prmItemCode VARCHAR(50), 
	prmQuantity Decimal(18,4), 
	prmDescription TEXT, 
	prmPrice Decimal(18,4), 
	prmDiscountPercent1 Decimal(18,4), 
	prmDiscountAmount1 Decimal(18,4), 
	prmDiscountPercent2 Decimal(18,4), 
	prmDiscountAmount2 Decimal(18,4), 
	prmDiscountPercent3 Decimal(18,4), 
	prmDiscountAmount3 Decimal(18,4), 
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F202 (
			BranchCode, 
			PODNo, 
			ItemCode, 
			Quantity, 
			Description, 
			Price, 
			DiscountPercent1, 
			DiscountAmount1, 
			DiscountPercent2, 
			DiscountAmount2, 
			DiscountPercent3, 
			DiscountAmount3, 
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode, 
			prmPODNo, 
			prmItemCode, 
			prmQuantity, 
			prmDescription, 
			prmPrice, 
			prmDiscountPercent1, 
			prmDiscountAmount1, 
			prmDiscountPercent2, 
			prmDiscountAmount2, 
			prmDiscountPercent3, 
			prmDiscountAmount3, 
			prmCreatedBy, 
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F203_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F203_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F203_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmPRTNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F204 
  WHERE F204.BranchCode = prmBranchCode AND F204.PRTNo = prmPRTNo;
  DELETE FROM F203 
  WHERE F203.BranchCode = prmBranchCode AND F203.PRTNo = prmPRTNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F203_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F203_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F203_Get`(IN prmBranchCode varchar(50), IN prmPRTNo varchar(50))
BEGIN 
  SELECT 
    f203.BranchCode, 
    f203.PRTNo,
    f203.TransactionDate, 
    f203.ExchangeRate, 
    f203.WarehouseCode, 
    f203.DiscountPercent,
    f203.PPNPercent,
    f203.OtherFee
FROM f203
  WHERE 
    F203.BranchCode = prmBranchCode AND
    F203.PRTNo = PRTNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F203_Get_ByGRN` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F203_Get_ByGRN` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F203_Get_ByGRN`(prmBranchCode VarChar(50),prmFirstDate DateTime, prmLastDate DateTime)
BEGIN 
  SELECT 
    F203.BranchCode,
    F001.Name As BranchName, 
    F203.PRTNo, 
    F203.TransactionDate, 
    F203.CurrencyCode,
	F006.Name As CurrencyName,
    F203.ExchangeRate, 
    F203.SupplierCode,
	F109.Name As SupplierName,
    F109.ContactPerson As SupplierContactPerson,
    F203.WarehouseCode, 
	F110.Name As WarehouseName,
    F203.RefNo, 
    F203.Description, 
    F203.TotalTransactionAmount, 
	(F203.TotalTransactionAmount * F203.ExchangeRate) As TotalTransactionAmountLocal, 
    F203.DiscountPercent, 
    F203.DiscountAmount, 
    (F203.DiscountAmount * F203.ExchangeRate) As DiscountAmountLocal, 
	F203.PPNPercent, 
    F203.PPNAmount,
	(F203.PPNAmount * F203.ExchangeRate) As PPNAmountLocal, 
    F203.OtherFee,
	(F203.OtherFee * F203.ExchangeRate) As OtherFeeLocal, 
    F203.GrandTotalAmount,
	(F203.GrandTotalAmount * F203.ExchangeRate) As GrandTotalAmountLocal, 
    F203.CreatedBy, 
    F203.CreatedDate, 
    F203.UpdatedBy, 
    F203.UpdatedDate
FROM F204
	INNER JOIN F001 ON F204.BranchCode = F001.Code
        INNER JOIN F203 ON F204.PRTNo = F203.PRTNo
	INNER JOIN F006 ON F203.CurrencyCode = F006.Code
	INNER JOIN F109 ON F203.SupplierCode = F109.Code
	INNER JOIN F110 ON F203.WareHouseCode = F110.Code
WHERE 
	LENGTH(F204.GRNNo) > 0 AND
	F203.TransactionDate between prmFirstDate AND prmLastDate
	
	
GROUP BY F203.PRTNo
ORDER BY F203.PRTNo DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F203_Get_NonGRN` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F203_Get_NonGRN` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F203_Get_NonGRN`(prmBranchCode VarChar(50),prmFirstDate DateTime, prmLastDate DateTime)
BEGIN 
  SELECT 
    F203.BranchCode,
    F001.Name As BranchName, 
    F203.PRTNo, 
    F203.TransactionDate, 
    F203.CurrencyCode,
	F006.Name As CurrencyName,
    F203.ExchangeRate, 
    F203.SupplierCode,
	F109.Name As SupplierName,
    F203.WarehouseCode, 
	F110.Name As WarehouseName,
    F203.RefNo, 
    F203.Description, 
    F203.TotalTransactionAmount, 
	(F203.TotalTransactionAmount * F203.ExchangeRate) As TotalTransactionAmountLocal, 
    F203.DiscountPercent, 
    F203.DiscountAmount, 
    (F203.DiscountAmount * F203.ExchangeRate) As DiscountAmountLocal, 
	F203.PPNPercent, 
    F203.PPNAmount,
	(F203.PPNAmount * F203.ExchangeRate) As PPNAmountLocal, 
    F203.OtherFee,
	(F203.OtherFee * F203.ExchangeRate) As OtherFeeLocal, 
    F203.GrandTotalAmount,
	(F203.GrandTotalAmount * F203.ExchangeRate) As GrandTotalAmountLocal, 
    F203.CreatedBy, 
    F203.CreatedDate, 
    F203.UpdatedBy, 
    F203.UpdatedDate
FROM F204
        INNER JOIN F001 ON F204.BranchCode = F001.Code
	INNER JOIN F203 ON F204.PRTNo = F203.PRTNo
	INNER JOIN F006 ON F203.CurrencyCode = F006.Code
	INNER JOIN F109 ON F203.SupplierCode = F109.Code
	INNER JOIN F110 ON F203.WareHouseCode = F110.Code
WHERE 
	LENGTH(F204.GRNNo) = 0 AND
	F203.TransactionDate between prmFirstDate AND prmLastDate
	
	
GROUP BY F203.PRTNo
ORDER BY F203.PRTNo DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F203_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F203_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F203_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmPRTNo VARCHAR(50), 
    IN prmTransactionDate DateTime, 
    IN prmCurrencyCode VARCHAR(50), 
    IN prmExchangeRate Decimal(18,4), 
    IN prmSupplierCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmRefNo VARCHAR(100), 
    IN prmDescription Text, 
    IN prmTotalTransactionAmount Decimal(18,4), 
    IN prmDiscountPercent Decimal(18,4), 
    IN prmDiscountAmount Decimal(18,4), 
    IN prmPPNPercent Decimal(18,4), 
    IN prmPPNAmount Decimal(18,4), 
    IN prmOtherFee Decimal(18,4), 
    IN prmGrandTotalAmount Decimal(18,4), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F203 ( 
    F203.BranchCode, 
    F203.PRTNo, 
    F203.TransactionDate, 
    F203.CurrencyCode, 
    F203.ExchangeRate, 
    F203.SupplierCode, 
    F203.WarehouseCode, 
    F203.RefNo, 
    F203.Description, 
    F203.TotalTransactionAmount, 
    F203.DiscountPercent, 
    F203.DiscountAmount, 
    F203.PPNPercent, 
    F203.PPNAmount, 
    F203.OtherFee, 
    F203.GrandTotalAmount, 
    F203.CreatedBy, 
    F203.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmPRTNo, 
    prmTransactionDate, 
    prmCurrencyCode, 
    prmExchangeRate, 
    prmSupplierCode, 
    prmWarehouseCode, 
    prmRefNo, 
    prmDescription, 
    prmTotalTransactionAmount, 
    prmDiscountPercent, 
    prmDiscountAmount, 
    prmPPNPercent, 
    prmPPNAmount, 
    prmOtherFee, 
    prmGrandTotalAmount, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F203_Update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F203_Update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F203_Update`( 
    IN oldBranchCode VARCHAR(50),
    IN oldPRTNo VARCHAR(50),
 
    IN prmTransactionDate DateTime, 
    IN prmCurrencyCode VARCHAR(50), 
    IN prmExchangeRate Decimal(18,4), 
    IN prmSupplierCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmRefNo VARCHAR(100), 
    IN prmDescription Text, 
    IN prmTotalTransactionAmount Decimal(18,4),
    IN prmDiscountPercent Decimal(18,4),
    IN prmDiscountAmount Decimal(18,4), 
    IN prmPPNPercent Decimal(18,4), 
    IN prmPPNAmount Decimal(18,4), 
    IN prmOtherFee Decimal(18,4), 
    IN prmGrandTotalAmount Decimal(18,4), 
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE F203 SET 
    TransactionDate = prmTransactionDate, 
    CurrencyCode = prmCurrencyCode, 
    ExchangeRate = prmExchangeRate, 
    SupplierCode = prmSupplierCode, 
    WarehouseCode = prmWarehouseCode, 
    RefNo = prmRefNo, 
    Description = prmDescription, 
    TotalTransactionAmount = prmTotalTransactionAmount, 
    DiscountPercent = prmDiscountPercent, 
    DiscountAmount = prmDiscountAmount, 
    PPNPercent = prmPPNPercent, 
    PPNAmount = prmPPNAmount, 
    OtherFee = prmOtherFee, 
    GrandTotalAmount = prmGrandTotalAmount, 
    UpdatedBy = prmUpdatedBy, 
    UpdatedDate = Now()
  WHERE F203.BranchCode = oldBranchCode AND F203.PRTNo = oldPRTNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F203_Update_GiroReject_F508PaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F203_Update_GiroReject_F508PaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F203_Update_GiroReject_F508PaidAmount`(
        prmPRTNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F203 SET
			UsedAmount = UsedAmount - prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			PRTNo = prmPRTNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F203_update_PaidAmount_F506` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F203_update_PaidAmount_F506` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F203_update_PaidAmount_F506`(
        prmPRTNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F203 SET
			UsedAmount = UsedAmount +
				    IFNull((select 0-Amount from F506 prmPaidAmount 
					where BranchCode=prmBranchCode and BKKNo=prmBuktiNo 
				     and DocumentNo=prmPRTNo),0) + 
				     prmPaidAmount 
		WHERE 
			BranchCode = prmBranchCode AND PRTNo = prmPRTNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F203_update_PaidAmount_F508` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F203_update_PaidAmount_F508` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F203_update_PaidAmount_F508`(
        prmPRTNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount decimal(18,4)
)
BEGIN
		UPDATE F203 SET
			UsedAmount = UsedAmount +
				    IFNull((select 0-Amount from F508 prmPaidAmount 
					where BranchCode=prmBranchCode and BBKNo=prmBuktiNo 
				     and DocumentNo=prmPRTNo),0) + 
				     prmPaidAmount 
		WHERE 
			BranchCode = prmBranchCode AND PRTNo = prmPRTNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F203_Update_PaidAmount_F520` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F203_Update_PaidAmount_F520` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F203_Update_PaidAmount_F520`(
        prmPRTNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F203 SET
			UsedAmount = UsedAmount +
				    IFNull((select 0-Amount from F520 prmPaidAmount 
					where BranchCode=prmBranchCode and GJMNo=prmBuktiNo 
				     and DocumentNo=prmPRTNo),0) + 
				     prmPaidAmount 
		WHERE 
			BranchCode = prmBranchCode AND PRTNo = prmPRTNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F204_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F204_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F204_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmPRTNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F204 
  WHERE F204.BranchCode = prmBranchCode AND F204.PRTNo = prmPRTNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F204_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F204_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F204_Get`(prmBranchCode VARCHAR(50), prmPRTNo VARCHAR(50))
BEGIN 
  SELECT 
    F204.BranchCode, 
    F204.PRTNo, 
    F204.ItemCode,
    F013.Name As ItemName,
    F013.UnitCode,
    F204.GRNNo, 
    F204.Quantity, 
    F204.Price,  
    F204.Description,
    F204.CreatedBy, 
    F204.CreatedDate, 
    F204.UpdatedBy, 
    F204.UpdatedDate 
    
FROM F204
  INNER JOIN F013 ON F204.ItemCode = F013.Code
	
WHERE F204.BranchCode = prmBranchCode AND F204.PRTNo = prmPrtNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F204_Get_QtyByItemAndGRN` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F204_Get_QtyByItemAndGRN` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F204_Get_QtyByItemAndGRN`(prmBranchCode VarChar(50), prmItemCode VarChar(50), prmGRNNo VarChar(50))
BEGIN
		SELECT 
			Sum(F204.Quantity) as ReturnedQuantity 
		FROM F204 
		WHERE 
			F204.BranchCode = prmBranchCode AND 
            F204.ItemCode = prmItemCode AND 
			F204.GRNNo = prmGRNNo;
		END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F204_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F204_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F204_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmPRTNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmQuantity Decimal(18,4), 
    IN prmPrice Decimal(18,4), 
    IN prmDiscountPercent1 Decimal(18,4), 
    IN prmDiscountAmount1 Decimal(18,4), 
    IN prmDiscountPercent2 Decimal(18,4), 
    IN prmDiscountAmount2 Decimal(18,4), 
    IN prmDiscountPercent3 Decimal(18,4), 
    IN prmDiscountAmount3 Decimal(18,4), 
    IN prmGRNNo VARCHAR(50), 
	IN prmDescription VARCHAR(200),    
	IN prmCreatedBy VARCHAR(50)
    
 )
BEGIN 
  INSERT INTO F204 ( 
    F204.BranchCode, 
    F204.PRTNo, 
    F204.ItemCode, 
    F204.Quantity, 
    F204.Price, 
    F204.DiscountPercent1, 
    F204.DiscountAmount1, 
    F204.DiscountPercent2, 
    F204.DiscountAmount2, 
    F204.DiscountPercent3, 
    F204.DiscountAmount3, 
    F204.GRNNo, 
	F204.Description,    
	F204.CreatedBy, 
    F204.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmPRTNo, 
    prmItemCode, 
    prmQuantity, 
    prmPrice, 
    prmDiscountPercent1, 
    prmDiscountAmount1, 
    prmDiscountPercent2, 
    prmDiscountAmount2, 
    prmDiscountPercent3, 
    prmDiscountAmount3, 
    prmGRNNo, 
	prmDescription,
	prmCreatedBy,
	Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F205_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F205_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F205_delete`(
	prmBranchCode VARCHAR(50),
	prmPPNo VARCHAR(50)
)
Begin
	Delete From F206
	WHERE PPNo = prmPPNo;
	Delete From F205 
	WHERE PPNo = prmPPNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F205_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F205_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F205_get`(
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmPPNo varchar(50)
   -- IN prmPostLog1  tinyint(1),
   -- IN prmPostLog2  tinyint(1),
   -- IN prmPostPO1  tinyint(1),
   -- IN prmPostPO2  tinyint(1),
   -- IN prmSupplierName varchar(100)
   -- IN prmCurrencyCode varchar(50),
   -- IN prmPODNoStatus1 tinyint(1),
   -- IN prmPODNoStatus2 tinyint(1)
)
BEGIN
	SELECT
	F205.BranchCode,
	F001.Name AS BranchName, 
	F205.PPNo,
	F205.TransactionDate, 
	F205.PPName, 
	F205.Divisi,
	F205.Jabatan,
	F205.CurrencyCode,
	-- F006.Name 						AS  CurrencyName,
	F205.ExchangeRate,
	F205.RefNo,	
	F205.Description					AS  PPDescriptionHeader,	
	F205.TotalTransactionAmount 				AS  PPTotalTransactionAmount, 
	F205.GrandTotalAmount 			    		AS  PPGrandTotalAmount, 	
	F205.PostLog,
	F205.PostLogDate,
	F205.PostPO,
	F205.PostPODate,
	IFNULL(Group_Concat(F201.PODNo), "") AS  PODNo
	from F205
	    INNER JOIN F001 ON F205.BranchCOde = F001.Code  
	    -- INNER JOIN F006 ON F205.CurrencyCode = F006.Code 
	    LEFT  JOIN F201 ON F205.BranchCode = F201.BranchCode AND F205.PODNo = F201.PODNo
	WHERE 
		 F205.TransactionDate 	BETWEEN prmFirstDate AND prmLastDate AND
		 F205.PPNo 		LIKE prmPPNo 
		 -- F109.Name  		LIKE prmSupplierName 
		 -- F205.CurrencyCode 	Like prmCurrencyCode AND
		 -- F205.PostLog = prmPostLog1 OR F205.PostLog  = prmPostLog2 AND
		-- F205.PostPO = prmPostPO1 OR F205.PostPO  = prmPostPO2 AND
		 -- (IF(F201.PODNo IS NULL, false, true) = prmPODNoStatus1 OR IF(F201.GRNNo IS NULL, false, true) = prmPODNoStatus2)
GROUP BY F205.BranchCode, F205.PPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F205_get2` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F205_get2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F205_get2`(
   in prmBranchCode varchar(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmPPNo varchar(50)
   -- IN prmPostLog1  tinyint(1),
   -- IN prmPostLog2  tinyint(1),
   -- IN prmPostPO1  tinyint(1),
   -- IN prmPostPO2  tinyint(1),
   -- IN prmSupplierName varchar(100)
   -- IN prmCurrencyCode varchar(50),
   -- IN prmPODNoStatus1 tinyint(1),
   -- IN prmPODNoStatus2 tinyint(1)
)
BEGIN
	SELECT
	F205.BranchCode,
	F001.Name AS BranchName, 
	F205.PPNo,
	F205.TransactionDate, 
	F205.PPName, 
	F205.Divisi,
	F205.Jabatan,
	F205.CurrencyCode,
	-- F006.Name 						AS  CurrencyName,
	F205.ExchangeRate,
	F205.RefNo,	
	F205.Description					AS  PPDescriptionHeader,	
	F205.TotalTransactionAmount 				AS  PPTotalTransactionAmount, 
	F205.GrandTotalAmount 			    		AS  PPGrandTotalAmount, 	
	F205.PostLog,
	F205.PostLogDate,
	F205.PostPO,
	F205.PostPODate,
	IFNULL(Group_Concat(F201.PODNo), "") AS  PODNo
	from F205
	    INNER JOIN F001 ON F205.BranchCOde = F001.Code  
	    -- INNER JOIN F006 ON F205.CurrencyCode = F006.Code 
	    LEFT  JOIN F201 ON F205.BranchCode = F201.BranchCode AND F205.PODNo = F201.PODNo
	WHERE 
		 F205.TransactionDate 	BETWEEN prmFirstDate AND prmLastDate AND
		 F205.PPNo 		LIKE prmPPNo AND
		 f205.BranchCode like prmBranchCode
		 -- F109.Name  		LIKE prmSupplierName 
		 -- F205.CurrencyCode 	Like prmCurrencyCode AND
		 -- F205.PostLog = prmPostLog1 OR F205.PostLog  = prmPostLog2 AND
		-- F205.PostPO = prmPostPO1 OR F205.PostPO  = prmPostPO2 AND
		 -- (IF(F201.PODNo IS NULL, false, true) = prmPODNoStatus1 OR IF(F201.GRNNo IS NULL, false, true) = prmPODNoStatus2)
GROUP BY F205.BranchCode, F205.PPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F205_getPosting` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F205_getPosting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F205_getPosting`(
   IN prmBranchCode Varchar(50),
   IN prmFirstDate DATETIME,
   IN prmLastDate DATETIME,
   IN prmPPNo VARCHAR(50),
   -- IN prmPostLog1  tinyint(1),
   -- IN prmPostLog2  tinyint(1),
   IN prmPostPO1  TINYINT(1),
   IN prmPostPO2  TINYINT(1)
   -- IN prmSupplierName varchar(100)
   -- IN prmCurrencyCode varchar(50),
   -- IN prmPODNoStatus1 tinyint(1),
   -- IN prmPODNoStatus2 tinyint(1)
)
BEGIN
	SELECT
	F205.BranchCode,
	F001.Name AS BranchName, 
	F205.PPNo,
	F205.TransactionDate, 
	F205.PPName, 
	F205.Divisi,
	F205.Jabatan,
	F205.CurrencyCode,
	-- F006.Name 						AS  CurrencyName,
	F205.ExchangeRate,
	F205.RefNo,	
	F205.Description					AS  PPDescriptionHeader,	
	F205.TotalTransactionAmount 				AS  PPTotalTransactionAmount, 
	F205.GrandTotalAmount 			    		AS  PPGrandTotalAmount, 	
	F205.PostLog,
	F205.PostLogDate,
	F205.PostPO,
	F205.PostPODate,
	IFNULL(GROUP_CONCAT(F201.PODNo), "") AS  PODNo
	FROM F205
	    INNER JOIN F001 ON F205.BranchCOde = F001.Code  
	    -- INNER JOIN F006 ON F205.CurrencyCode = F006.Code 
	    LEFT  JOIN F201 ON F205.BranchCode = F201.BranchCode AND F205.PODNo = F201.PODNo
	WHERE 
		 F205.TransactionDate 	BETWEEN prmFirstDate AND prmLastDate AND
		 F205.PPNo 		LIKE prmPPNo AND
		 f205.BranchCode Like prmBranchCode And
		 -- F109.Name  		LIKE prmSupplierName 
		 -- F205.CurrencyCode 	Like prmCurrencyCode AND
		 -- F205.PostLog = prmPostLog1 OR F205.PostLog  = prmPostLog2 AND
		(F205.PostPO = prmPostPO1 OR F205.PostPO  = prmPostPO2)
		 -- (IF(F201.PODNo IS NULL, false, true) = prmPODNoStatus1 OR IF(F201.GRNNo IS NULL, false, true) = prmPODNoStatus2)
GROUP BY F205.BranchCode, F205.PPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F205_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F205_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F205_insert`(
	  prmBranchCode varchar(50),                         
          prmPPno varchar(50),                              
          prmTransactionDate datetime,   
	  prmPPName varchar(50),   
	  prmDivisi varchar(200),   
	  prmJabatan varchar(200),    
          prmRefNo varchar(100),                             
          prmDescription text, 
          prmCreatedBy varchar(50)
)
BEGIN
		INSERT INTO F205 
		(
			  BranchCode ,                         
			  PPno ,                              
			  TransactionDate,   
			  PPName ,   
			  Divisi,   
			  Jabatan,             
			  RefNo,                             
			  Description,  
			  CreatedBy, 
			  CreatedDate
		)
		VALUES
		(
			  prmBranchCode,                         
			  prmPPno,                              
			  prmTransactionDate,   
			  prmPPName,   
			  prmDivisi,   
			  prmJabatan,           
			  prmRefNo,                             
			  prmDescription, 
			  prmCreatedBy, 
			  now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F205_PostingLog` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F205_PostingLog` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F205_PostingLog`(
	prmBranchCode VARCHAR(50),
	prmPNo VARCHAR(50),
	prmPostingDate DateTime,
	prmPostingStatus Boolean,
	prmUpdatedBy VARCHAR(50)
)
BEGIN
		DECLARE vPostingDate DATETIME;
		IF prmPostingDate IS NULL THEN
			SET vPostingDate = '1900-1-1';
		ELSE
			SET vPostingDate = prmPostingDate;
		END IF;
		UPDATE 
			F205 
		SET 
			PostLog = prmPostingStatus,
			PostLogDate = vPostingDate,
			UpdatedBy = prmUpdatedBy
		WHERE 
			PPNo = prmPPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F205_PostingPO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F205_PostingPO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F205_PostingPO`(
	prmBranchCode VARCHAR(50),
	prmPPNo VARCHAR(50),
	prmPostingDate DATETIME,
	prmPostingStatus BOOLEAN,
	prmUpdatedBy VARCHAR(50)
)
BEGIN
		DECLARE vPostingDate DATETIME;
		IF prmPostingDate IS NULL THEN
			SET vPostingDate = '1900-1-1';
		ELSE
			SET vPostingDate = prmPostingDate;
		END IF;
		UPDATE 
			F205 
		SET 
			PostPO = prmPostingStatus,
			PostPODate = vPostingDate,
			UpdatedBy = prmUpdatedBy
		WHERE 
			PPNo = prmPPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F205_Search_ForPO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F205_Search_ForPO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F205_Search_ForPO`(
  IN prmBranchCode VARCHAR(50), 
  IN prmFirstDate VARCHAR(50), 
  IN prmLastDate VARCHAR(50),
  IN prmClosingStatus1 TINYINT(1), 
  IN prmClosingStatus2 TINYINT(1))
BEGIN
	SELECT
	F205.BranchCode,
	-- F001.Name AS BranchName,
	F205.PPno,
	F205.PPName,
	F205.TransactionDate,
	F205.RefNo,
	-- F205.CurrencyCode,
	-- F006.Name AS CurrencyName,
	F205.Description
	
	FROM F205
	INNER JOIN F001 ON F205.BranchCode = F001.Code
	-- INNER JOIN F006 ON F205.CurrencyCode = F006.Code
	
	WHERE 
	F205.BranchCode LIKE prmBranchCode AND
	f205.PostPO = 1 And
	-- F205.SupplierCode LIKE prmSupplierCode AND
	F205.TransactionDate BETWEEN prmFirstDate AND prmLastDate;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F205_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F205_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F205_update`(
	prmBranchCode varchar(50),                         
          prmPPNo varchar(50),                              
          prmTransactionDate datetime,   
	  prmPPName varchar(50),   
	  prmDivisi varchar(200),   
	  prmJabatan varchar(200),         
          -- prmCurrencyCode varchar(50),                       
          -- prmExchangeRate decimal(18,4),               
          prmRefNo varchar(100),                             
          prmDescription text,   
          -- prmTotalTransactionAmount decimal(18,4),    
          -- prmGrandTotalAmount decimal(18,4),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F205 SET
			BranchCode =prmBranchCode,                         
			  PPno =prmPPno,                              
			  TransactionDate =prmTransactionDate,   
			  PPName =prmPPName,   
			  Divisi =prmDivisi,   
			  Jabatan =prmJabatan,         
			  -- CurrencyCode =prmCurrencyCode,                       
			  -- ExchangeRate =prmExchangeRate,               
			  RefNo =prmRefNo,                             
			  Description = prmDescription,       
			 -- TotalTransactionAmount =prmTotalTransactionAmount,    
			  -- GrandTotalAmount =prmGrandTotalAmount,  
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			PPno 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F206_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F206_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F206_delete`(
	prmBranchCode VARCHAR(50),
	prmPPNo VARCHAR(50)
)
BEGIN
		DELETE FROM F206 WHERE PPNo = prmPPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F206_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F206_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F206_get`(prmBranchCode VARCHAR(50), prmPPNo VARCHAR(50))
BEGIN
		SELECT 	
			  BranchCode,                              
			  PPno,                                   
			  ItemCode, 
			  F013.name as ItemName,
			F013.UnitCode,
			  SpecificDes, 
			  PPQuantity as Quantity,
			  DateNeed,
			  Description,
			  AccPOQuantity ,
			  SupplierCode_v1,
			  Price_v1 , 
			  DateArived_v1,
			  PostAcc_v1, 
			  SupplierCode_v2 ,
			  Price_v2 , 
			  DateArived_v2,
			  PostAcc_v2, 
			  SupplierCode_v3,
			  Price_v3 , 
			  DateArived_v3,
			  PostAcc_v3, 
			 (F206.PPQuantity * F206.Price_v1) As Total_v1,
			 (F206.PPQuantity * F206.Price_v2) As Total_v2,
			(F206.PPQuantity * F206.Price_v3) As Total_v3
		FROM
			F206
			INNER JOIN F013 ON F206.ItemCode = F013.Code
		WHERE
			F206.BranchCode = prmBranchCode AND F206.PPNo = prmPPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F206_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F206_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F206_insert`(prmBranchCode varchar(50),                              
          prmPPno varchar(50),                                   
          prmItemCode varchar(50),   
	  prmSpecificDes varchar(200), 
          prmPPQuantity decimal(18,4),
          prmPrice_v1 DECIMAL(18,4),
	  prmDateNeed date,
          prmDescription varchar(200),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F206 (
			BranchCode,
			 PPno,                                   
			  ItemCode,   
			  SpecificDes, 
			  PPQuantity,
			  Price_v1,
			  DateNeed,
			  Description,
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode,
			prmPPno,                                   
			  prmItemCode,   
			  prmSpecificDes, 
			  prmPPQuantity,
			  prmPrice_v1,
			  prmDateNeed,
			  prmDescription,
			prmCreatedBy, 
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_delete`(
	prmBranchCode VARCHAR(50),
	prmPBNo VARCHAR(50)
)
Begin
	Delete From F208
	WHERE PBNo = prmPBNo;
	Delete From F207 
	WHERE PBNo = prmPBNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_get`(
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmPBNo varchar(50)
   -- IN prmPostLog1  tinyint(1),
   -- IN prmPostLog2  tinyint(1),
   -- IN prmPostPO1  tinyint(1),
   -- IN prmPostPO2  tinyint(1),
   -- IN prmSupplierName varchar(100)
   -- IN prmCurrencyCode varchar(50),
   -- IN prmPODNoStatus1 tinyint(1),
   -- IN prmPODNoStatus2 tinyint(1)
)
BEGIN
	SELECT
	F207.BranchCode,
	F001.Name AS BranchName, 
	F207.PBNo,
	F207.TransactionDate, 
	F207.PPName, 
	F207.Divisi,
	F207.Jabatan,
	F207.CurrencyCode,
	-- F006.Name 						AS  CurrencyName,
	F207.ExchangeRate,
	F207.RefNo,	
	F207.Description					AS  PPDescriptionHeader,	
	F207.TotalTransactionAmount 				AS  PPTotalTransactionAmount, 
	F207.GrandTotalAmount 			    		AS  PPGrandTotalAmount, 	
	F207.PostLog,
	F207.PostLogDate,
	F207.PostPO,
	F207.PostPODate,
	IFNULL(Group_Concat(F207.PPNo), "") AS  PPNo
	from F207
	    INNER JOIN F001 ON F207.BranchCOde = F001.Code  
	    -- INNER JOIN F006 ON F207.CurrencyCode = F006.Code 
	    LEFT  JOIN F205 ON F207.BranchCode = F205.BranchCode AND F207.PPNo = F205.PPno
	WHERE 
		 F207.TransactionDate 	BETWEEN prmFirstDate AND prmLastDate AND
		 F207.PBNo 		LIKE prmPBNo 
		 -- F109.Name  		LIKE prmSupplierName 
		 -- F207.CurrencyCode 	Like prmCurrencyCode AND
		 -- F207.PostLog = prmPostLog1 OR F207.PostLog  = prmPostLog2 AND
		-- F207.PostPO = prmPostPO1 OR F207.PostPO  = prmPostPO2 AND
		 -- (IF(F201.PODNo IS NULL, false, true) = prmPODNoStatus1 OR IF(F201.GRNNo IS NULL, false, true) = prmPODNoStatus2)
GROUP BY F207.BranchCode, F207.PBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_getCheck` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_getCheck` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_getCheck`(  
   IN prmPBNo varchar(50)
   -- IN prmPostLog1  tinyint(1),
   -- IN prmPostLog2  tinyint(1),
   -- IN prmPostPO1  tinyint(1),
   -- IN prmPostPO2  tinyint(1),
   -- IN prmSupplierName varchar(100)
   -- IN prmCurrencyCode varchar(50),
   -- IN prmPODNoStatus1 tinyint(1),
   -- IN prmPODNoStatus2 tinyint(1)
)
BEGIN
	SELECT
	F207.BranchCode,
	F001.Name AS BranchName, 
	F207.PBNo,
	F207.TransactionDate, 
	F207.PPName, 
	F207.Divisi,
	F207.Jabatan,
	F207.CurrencyCode,
	-- F006.Name 						AS  CurrencyName,
	F207.ExchangeRate,
	F207.RefNo,	
	F207.Description					AS  PPDescriptionHeader,	
	F207.TotalTransactionAmount 				AS  PPTotalTransactionAmount, 
	F207.GrandTotalAmount 			    		AS  PPGrandTotalAmount, 	
	F207.PostLog,
	F207.PostLogDate,
	F207.PostPO,
	F207.PostPODate,
	F207.StatusStock,
	IFNULL(Group_Concat(F207.PPNo), "") AS  PPNo
	from F207
	    INNER JOIN F001 ON F207.BranchCOde = F001.Code  
	    -- INNER JOIN F006 ON F207.CurrencyCode = F006.Code 
	    LEFT  JOIN F205 ON F207.BranchCode = F205.BranchCode AND F207.PPNo = F205.PPno
	WHERE 
		 
		 F207.PBNo 		LIKE prmPBNo 
		 -- F109.Name  		LIKE prmSupplierName 
		 -- F207.CurrencyCode 	Like prmCurrencyCode AND
		 -- F207.PostLog = prmPostLog1 OR F207.PostLog  = prmPostLog2 AND
		-- F207.PostPO = prmPostPO1 OR F207.PostPO  = prmPostPO2 AND
		 -- (IF(F201.PODNo IS NULL, false, true) = prmPODNoStatus1 OR IF(F201.GRNNo IS NULL, false, true) = prmPODNoStatus2)
GROUP BY F207.BranchCode, F207.PBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_getExp` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_getExp` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_getExp`(
   )
BEGIN
	SELECT	
	F207.PBNo
	from F207
		 ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_getPost` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_getPost` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_getPost`(
 IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime
   -- IN prmPBNo varchar(50)
   -- IN prmPostLog1  tinyint(1),
   -- IN prmPostLog2  tinyint(1),
   -- IN prmPostPO1  tinyint(1),
   -- IN prmPostPO2  tinyint(1),
   -- IN prmSupplierName varchar(100)
   -- IN prmCurrencyCode varchar(50),
   -- IN prmPODNoStatus1 tinyint(1),
   -- IN prmPODNoStatus2 tinyint(1)
)
BEGIN
	SELECT
	F207.BranchCode,
	F001.Name AS BranchName, 
	F207.PBNo,
	F207.TransactionDate, 
	F207.PPName, 
	F207.Divisi,
	F207.Jabatan,
	F207.CurrencyCode,
	-- F006.Name 						AS  CurrencyName,
	F207.ExchangeRate,
	F207.RefNo,	
	F207.Description					AS  PPDescriptionHeader,	
	F207.TotalTransactionAmount 				AS  PPTotalTransactionAmount, 
	F207.GrandTotalAmount 			    		AS  PPGrandTotalAmount, 	
	F207.PostLog,
PostNoStock,
	F207.PostLogDate,
	F207.PostPO,
	F207.PostPODate,
	f207.StatusStock,
	IFNULL(Group_Concat(F207.PPNo), "") AS  PPNo
	from F207
	    INNER JOIN F001 ON F207.BranchCOde = F001.Code  
	    -- INNER JOIN F006 ON F207.CurrencyCode = F006.Code 
	    -- LEFT  JOIN F201 ON F207.PPNo = F205.PPNo
	WHERE 
                BranchCode = prmBranchCode And
		 F207.TransactionDate 	BETWEEN prmFirstDate AND prmLastDate 
		
		 -- F109.Name  		LIKE prmSupplierName 
		 -- F207.CurrencyCode 	Like prmCurrencyCode AND
		 -- F207.PostLog = prmPostLog1 OR F207.PostLog  = prmPostLog2 AND
		-- F207.PostPO = prmPostPO1 OR F207.PostPO  = prmPostPO2 AND
		 -- (IF(F201.PODNo IS NULL, false, true) = prmPODNoStatus1 OR IF(F201.GRNNo IS NULL, false, true) = prmPODNoStatus2)
GROUP BY F207.BranchCode, F207.PBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_getPostPB` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_getPostPB` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_getPostPB`(
 IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime
   -- IN prmPBNo varchar(50)
   -- IN prmPostLog1  tinyint(1),
   -- IN prmPostLog2  tinyint(1),
   -- IN prmPostPO1  tinyint(1),
   -- IN prmPostPO2  tinyint(1),
   -- IN prmSupplierName varchar(100)
   -- IN prmCurrencyCode varchar(50),
   -- IN prmPODNoStatus1 tinyint(1),
   -- IN prmPODNoStatus2 tinyint(1)
)
BEGIN
	SELECT
	F207.BranchCode,
	F001.Name AS BranchName, 
	F207.PBNo,
	F207.TransactionDate, 
	F207.PPName, 
	F207.Divisi,
	F207.Jabatan,
	F207.CurrencyCode,
	-- F006.Name 						AS  CurrencyName,
	F207.ExchangeRate,
	F207.RefNo,	
	F207.Description					AS  PPDescriptionHeader,	
	F207.TotalTransactionAmount 				AS  PPTotalTransactionAmount, 
	F207.GrandTotalAmount 			    		AS  PPGrandTotalAmount, 	
	F207.PostLog,
	PostNoStock,
	F207.PostLogDate,
	F207.PostPO,
	F207.PostPODate,
	f207.StatusStock,
	IFNULL(Group_Concat(F207.PPNo), "") AS  PPNo
	from F207
	    INNER JOIN F001 ON F207.BranchCOde = F001.Code  
	    -- INNER JOIN F006 ON F207.CurrencyCode = F006.Code 
	    -- LEFT  JOIN F201 ON F207.PPNo = F205.PPNo
	WHERE 
                BranchCode = prmBranchCode And
		 F207.TransactionDate 	BETWEEN prmFirstDate AND prmLastDate 
and F207.StatusStock = 'NOTREADY'
		
		 -- F109.Name  		LIKE prmSupplierName 
		 -- F207.CurrencyCode 	Like prmCurrencyCode AND
		 -- F207.PostLog = prmPostLog1 OR F207.PostLog  = prmPostLog2 AND
		-- F207.PostPO = prmPostPO1 OR F207.PostPO  = prmPostPO2 AND
		 -- (IF(F201.PODNo IS NULL, false, true) = prmPODNoStatus1 OR IF(F201.GRNNo IS NULL, false, true) = prmPODNoStatus2)
GROUP BY F207.BranchCode, F207.PBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_get_postingPB` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_get_postingPB` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_get_postingPB`(
   IN prmBranchCode VARCHAR(50),
   IN prmPostingStatus boolean,
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime
)
BEGIN
	SELECT 	
	   BranchCode, 
	   PBNo, 
	   TransactionDate,
	  PPName, 
	Divisi,
	Jabatan,
	   RefNo, 	
	Description,  
	   PostLog,
	PostNoStock,
	PostLogDate,
	   PostPO, 
	   PostPODate,
	PPNo,
f207.StatusStock
	FROM
	   F207
	WHERE	 
	    BranchCode = prmBranchCode
	and F207.StatusStock = 'NOTREADY'
	   AND PostPO = prmPostingStatus
	   AND TransactionDate BETWEEN prmFirstDate AND prmLastDate;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_get_postingstatus` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_get_postingstatus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_get_postingstatus`(
   IN prmBranchCode VARCHAR(50),
   IN prmPostingStatus boolean,
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime
)
BEGIN
	SELECT 	
	   BranchCode, 
	   PBNo, 
	   TransactionDate,
	  PPName, 
	Divisi,
	Jabatan,
	   RefNo, 	
	Description,  
	   PostLog,
	PostLogDate,
	   PostPO, 
PostNoStock,
	   PostPODate,
	PPNo,
f207.StatusStock
	FROM
	   F207
	WHERE	 
	    BranchCode = prmBranchCode
	   AND PostLog = prmPostingStatus
	   AND TransactionDate BETWEEN prmFirstDate AND prmLastDate;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_get_postingStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_get_postingStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_get_postingStock`(
   IN prmBranchCode VARCHAR(50),
   IN prmPostingStatus boolean,
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime
)
BEGIN
	SELECT 	
	   BranchCode, 
	   PBNo, 
	   TransactionDate,
	  PPName, 
	Divisi,
	Jabatan,
	   RefNo, 	
	Description,  
	   PostLog,
PostNoStock,
		PostLogDate,
	   PostPO, 
	   PostPODate,
	PPNo,
f207.StatusStock
	FROM
	   F207
	WHERE	 
	    BranchCode = prmBranchCode
	   AND PostLog = prmPostingStatus 
	   AND TransactionDate BETWEEN prmFirstDate AND prmLastDate;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_insert`(
	  prmBranchCode varchar(50),                         
          prmPBNo varchar(50),                              
          prmTransactionDate datetime,   
	  prmPBName varchar(50),   
	  prmDivisi varchar(200),   
	  prmJabatan varchar(200),    
          prmRefNo varchar(100),                             
          prmDescription text, 
          prmCreatedBy varchar(50)
)
BEGIN
		INSERT INTO F207 
		(
			  BranchCode ,                         
			  PBNo ,                              
			  TransactionDate,   
			  PPName ,   
			  Divisi,   
			  Jabatan,             
			  RefNo,                             
			  Description,  
			  CreatedBy, 
			  CreatedDate
		)
		VALUES
		(
			  prmBranchCode,                         
			  prmPBNo,                              
			  prmTransactionDate,   
			  prmPBName,   
			  prmDivisi,   
			  prmJabatan,           
			  prmRefNo,                             
			  prmDescription, 
			  prmCreatedBy, 
			  now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_PostingLog` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_PostingLog` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_PostingLog`(
	prmBranchCode VARCHAR(50),
	prmPNo VARCHAR(50),
	prmPostingDate DateTime,
	prmPostingStatus Boolean,
	prmUpdatedBy VARCHAR(50)
)
BEGIN
		DECLARE vPostingDate DATETIME;
		IF prmPostingDate IS NULL THEN
			SET vPostingDate = '1900-1-1';
		ELSE
			SET vPostingDate = prmPostingDate;
		END IF;
		UPDATE 
			F207 
		SET 
			PostLog = prmPostingStatus,
			PostLogDate = vPostingDate,
			UpdatedBy = prmUpdatedBy
		WHERE 
			PBNo = prmPBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_PostingPO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_PostingPO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_PostingPO`(
	prmBranchCode VARCHAR(50),
	prmPNo VARCHAR(50),
	prmPostingDate DateTime,
	prmPostingStatus Boolean,
	prmUpdatedBy VARCHAR(50)
)
BEGIN
		DECLARE vPostingDate DATETIME;
		IF prmPostingDate IS NULL THEN
			SET vPostingDate = '1900-1-1';
		ELSE
			SET vPostingDate = prmPostingDate;
		END IF;
		UPDATE 
			F207 
		SET 
			PostPO = prmPostingStatus,
			PostPODate = vPostingDate,
			UpdatedBy = prmUpdatedBy
		WHERE 
			PBNo = prmPBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_Search_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_Search_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_Search_ByCode`(
   IN prmCode varchar(50))
BEGIN
	SELECT
	F207.BranchCode,
	F001.Name AS BranchName, 
	F207.PBNo,
	F207.TransactionDate, 
	F207.PPName, 
	F207.Divisi,
	F207.Jabatan,
	F207.CurrencyCode,
	-- F006.Name 						AS  CurrencyName,
	F207.ExchangeRate,
	F207.RefNo,	
	F207.Description					AS  PPDescriptionHeader,	
	F207.TotalTransactionAmount 				AS  PPTotalTransactionAmount, 
	F207.GrandTotalAmount 			    		AS  PPGrandTotalAmount, 	
	F207.PostLog,
	F207.PostLogDate,
	F207.PostPO,
	F207.PostPODate,
	IFNULL(Group_Concat(F207.PPNo), "") AS  PPNo
	from F207
	    INNER JOIN F001 ON F207.BranchCOde = F001.Code  
	    -- INNER JOIN F006 ON F207.CurrencyCode = F006.Code 
	    LEFT  JOIN F205 ON F207.BranchCode = F205.BranchCode AND F207.PPNo = F205.PPno
	
	WHERE 
		
		F207.PBNo = prmCode
GROUP BY  F207.PBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_Search_ForGRN` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_Search_ForGRN` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_Search_ForGRN`(
  IN prmFirstDate varchar(50), IN prmLastDate varchar(50)
  )
BEGIN
	SELECT
	F207.BranchCode,
	F001.Name AS BranchName, 
	F207.PBNo,
	F207.TransactionDate, 
	F207.PPName, 
	F207.Divisi,
	F207.Jabatan,
	F207.CurrencyCode,
	-- F006.Name 						AS  CurrencyName,
	F207.ExchangeRate,
	F207.RefNo,	
	F207.Description					AS  PPDescriptionHeader,	
	F207.TotalTransactionAmount 				AS  PPTotalTransactionAmount, 
	F207.GrandTotalAmount 			    		AS  PPGrandTotalAmount, 	
	F207.PostLog,
	F207.PostLogDate,
	F207.PostPO,
	F207.PostPODate,
	IFNULL(Group_Concat(F207.PPNo), "") AS  PPNo
	from F207
	    INNER JOIN F001 ON F207.BranchCOde = F001.Code  
	    -- INNER JOIN F006 ON F207.CurrencyCode = F006.Code 
	    LEFT  JOIN F205 ON F207.BranchCode = F205.BranchCode AND F207.PPNo = F205.PPno
	WHERE 
	-- F207.BranchCode LIKE prmBranchCode AND
	-- F207.SupplierCode LIKE prmSupplierCode AND
	F207.TransactionDate BETWEEN prmFirstDate AND prmLastDate 
GROUP BY  F207.PBNo;-- AND
	-- (F207.ClosingStatus = prmClosingStatus1 OR F207.ClosingStatus = prmClosingStatus2);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_update`(
	prmBranchCode varchar(50),                         
          prmPBNo varchar(50),                              
          prmTransactionDate datetime,   
	  prmPPName varchar(50),   
	  prmDivisi varchar(200),   
	  prmJabatan varchar(200),         
          -- prmCurrencyCode varchar(50),                       
          -- prmExchangeRate decimal(18,4),               
          prmRefNo varchar(100),                             
          prmDescription text,   
          -- prmTotalTransactionAmount decimal(18,4),    
          -- prmGrandTotalAmount decimal(18,4),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F207 SET
			BranchCode =prmBranchCode,                         
			  PBNo =prmPBNo,                              
			  TransactionDate =prmTransactionDate,   
			  PPName =prmPPName,   
			  Divisi =prmDivisi,   
			  Jabatan =prmJabatan,         
			  -- CurrencyCode =prmCurrencyCode,                       
			  -- ExchangeRate =prmExchangeRate,               
			  RefNo =prmRefNo,                             
			  Description = prmDescription,       
			 -- TotalTransactionAmount =prmTotalTransactionAmount,    
			  -- GrandTotalAmount =prmGrandTotalAmount,  
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			PBNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_update_posting` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_update_posting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_update_posting`(
    IN prmBranchCode VARCHAR(50),
    IN prmPBNo VARCHAR(50),
    IN prmPosting boolean
)
BEGIN
	UPDATE 
	   F207 
	SET 
	   PostLog = prmPosting,
	  PostLogDate = now
	WHERE
	   BranchCode = prmBranchCode AND PBNo = prmPBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_update_postingPB` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_update_postingPB` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_update_postingPB`(
    IN prmBranchCode VARCHAR(50),
    IN prmPBNo VARCHAR(50),
    IN prmPosting boolean
)
BEGIN
	UPDATE 
	   F207 
	SET 
	   PostPO = prmPosting,
	  PostPODate = now()
	WHERE
	   BranchCode = prmBranchCode AND PBNo = prmPBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F207_update_postingStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F207_update_postingStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F207_update_postingStock`(
    IN prmBranchCode VARCHAR(50),
    IN prmPBNo VARCHAR(50),
    IN prmPosting enum('REQUEST','READY','NOTREADY')
)
BEGIN
	UPDATE 
	   F207 
	SET 
	   StatusStock = prmPosting,
	  PostLogDate = now()
	WHERE
	   BranchCode = prmBranchCode AND PBNo = prmPBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F208_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F208_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F208_delete`(
	prmBranchCode VARCHAR(50),
	prmPBNo VARCHAR(50)
)
BEGIN
		DELETE FROM F208 WHERE PBNo = prmPBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F208_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F208_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F208_get`(prmBranchCode VARCHAR(50), prmPBNo VARCHAR(50))
BEGIN
		SELECT 	
			  BranchCode,                              
			  PBNo,                                   
			  ItemCode, 
			  F013.name as ItemName,
			F013.UnitCode,
			  SpecificDes, 
			  PPQuantity as PBQuantity,
			  DateNeed,
			  Description,
			  AccPOQuantity ,
			  SupplierCode_v1,
			  Price_v1 , 
			  DateArived_v1,
			  PostAcc_v1, 
			  SupplierCode_v2 ,
			  Price_v2 , 
			  DateArived_v2,
			  PostAcc_v2, 
			  SupplierCode_v3,
			  Price_v3 , 
			  DateArived_v3,
			  PostAcc_v3, 
			 (F208.PPQuantity * F208.Price_v1) As Total_v1,
			 (F208.PPQuantity * F208.Price_v2) As Total_v2,
			(F208.PPQuantity * F208.Price_v3) As Total_v3
		FROM
			F208
			INNER JOIN F013 ON F208.ItemCode = F013.Code
		WHERE
			F208.BranchCode = prmBranchCode AND F208.PBNo = prmPBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F208_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F208_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F208_insert`(prmBranchCode varchar(50),                              
          prmPBNo varchar(50),                                   
          prmItemCode varchar(50),   
	  prmSpecificDes varchar(200), 
          prmPBQuantity decimal(18,4),
	  prmDateNeed date,
          prmDescription varchar(200),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F208 (
			BranchCode,
			 PBNo,                                   
			  ItemCode,   
			  SpecificDes, 
			  PPQuantity,
			  DateNeed,
			  Description,
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode,
			prmPBNo,                                   
			  prmItemCode,   
			  prmSpecificDes, 
			  prmPBQuantity,
			  prmDateNeed,
			  prmDescription,
			prmCreatedBy, 
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f210_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f210_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f210_get`(
	
)
BEGIN
	
	SELECT a.*,
pln_desc
AS fplndesc FROM f210 a 
LEFT JOIN f001 b ON a.fdept_code=b.code WHERE LEFT(prx_type,1)='D';
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f210_get_Depo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f210_get_Depo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f210_get_Depo`(
	
)
BEGIN
	
	SELECT a.*,
pln_desc
AS fplndesc FROM f210 a 
LEFT JOIN f001 b ON a.fdept_code=b.code WHERE LEFT(prx_type,1)='D';
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f210_get_Rent` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f210_get_Rent` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f210_get_Rent`(
	
)
BEGIN
	
	SELECT a.*,
pln_desc
AS fplndesc FROM f210 a 
LEFT JOIN f001 b ON a.fdept_code=b.code WHERE LEFT(prx_type,1)<>'D';
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f211_getcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f211_getcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f211_getcode`(
prmpln_code VARCHAR(20)	
)
BEGIN
	
	SELECT a.*,b.prx_code FROM f211 a 
	LEFT JOIN f210 b ON a.pln_code=b.pln_code  where a.pln_code=prmpln_code
 order by pln_urut	
	;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_ByPODNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_ByPODNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_ByPODNo_get`(
	prmBranchCode VARCHAR(50),
	prmFirstDate DATETIME,
	prmLastDate DATETIME
)
BEGIN
	SELECT
	F301.BranchCode,
	F001.Name As BranchName,
	F301.GRNNo, 
	F301.TransactionDate, 
	F301.PODNo,
	F301.SupplierCode,
	F109.Name as SupplierName, 
	F109.ContactPerson as SupplierContactPerson, 
	F301.CurrencyCode
	F006.Name as CurrencyName,
	F301.ExchangeRate, 
	F301.PaymentTermCode,
	F018.Name as PaymentTermName,
	F301.WarehouseCode, 
	F110.Name AS WarehouseName,
	F301.ReceivedBy, 
	F301.Description, 
	F301.SupplierRefNo, 
	F301.PoliceNo, 
	F301.ContainerNo, 
	F301.TotalTransactionAmount,
	(F301.TotalTransactionAmount * F301.ExchangeRate) AS TotalTransactionAmountLocal,
	F301.DiscountPercent, 
	F301.DiscountAmount,
	(F301.DiscountAmount * F301.ExchangeRate) AS DiscountAmountLocal,
	F301.PPNPercent, 
	F301.PPNAmount,
	(F301.PPNAmount * F301.ExchangeRate) AS PPNAmountLocal,
	F301.OtherFeeAmount,
	(F301.OtherFeeAmount * F301.ExchangeRate) AS OtherFeeAmountLocal,
	F301.GrandTotal,
	(F301.GrandTotal * F301.ExchangeRate) AS GrandTotalLocal,
	F301.PaidAmount,
	(F301.PaidAmount * F301.ExchangeRate) AS PaidAmountLocal,
	F301.FreightFeeAmount, 
	(F301.FreightFeeAmount * F301.ExchangeRate) AS FreightFeeAmountLocal,
	F301.InsuranceFeeAmount, 
	(F301.InsuranceFeeAmount * F301.ExchangeRate) AS InsuranceFeeAmountLocal,
	F301.AdministrationFeeAmount, 
	(F301.AdministrationFeeAmount * F301.ExchangeRate) AS AdministrationFeeAmountLocal
	FROM 
	  F301
	INNER JOIN F001 ON F301.BranchCode = F001.Code
	INNER JOIN F109 ON F301.SupplierCode = F109.Code
	INNER JOIN F110 ON F301.WareHouseCode = F110.Code
	INNER JOIN F006 ON F301.CurrencyCode = F006.Code  
	INNER JOIN F018 ON F301.PaymentTermCode = F018.Code
	WHERE 
	  F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
	  F301.DeleteStatus = FALSE AND
	  LENGTH(PODNo) > 0 and
	  f301.BranchCode like prmBranchCode
	ORDER By F301.BranchCode, F301.GRNNo DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_ByPODNo_get_Approve` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_ByPODNo_get_Approve` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_ByPODNo_get_Approve`(
	prmBranchCode VARCHAR(50),
	prmFirstDate DATETIME,
	prmLastDate DATETIME,
	prmPostGRN1  TINYINT(1),
	prmPostGRN2  TINYINT(1)
)
BEGIN
	SELECT
	F301.BranchCode,
	F001.Name AS BranchName,
	F301.GRNNo, 
	F301.PostGRN,
	F301.TransactionDate, 
	F301.PODNo,
	F301.SupplierCode,
	F109.Name AS SupplierName, 
	F109.ContactPerson AS SupplierContactPerson, 
	f109.AccountCode,
	F301.CurrencyCode
	F006.Name AS CurrencyName,
	F301.ExchangeRate, 
	F301.PaymentTermCode,
	F018.Name AS PaymentTermName,
	F301.WarehouseCode, 
	F110.Name AS WarehouseName,
	F301.ReceivedBy, 
	F301.Description, 
	F301.SupplierRefNo, 
	F301.PoliceNo, 
	F301.ContainerNo, 
	F301.TotalTransactionAmount,
	(F301.TotalTransactionAmount * F301.ExchangeRate) AS TotalTransactionAmountLocal,
	F301.DiscountPercent, 
	F301.DiscountAmount,
	(F301.DiscountAmount * F301.ExchangeRate) AS DiscountAmountLocal,
	F301.PPNPercent, 
	F301.PPNAmount,
	(F301.PPNAmount * F301.ExchangeRate) AS PPNAmountLocal,
	F301.OtherFeeAmount,
	(F301.OtherFeeAmount * F301.ExchangeRate) AS OtherFeeAmountLocal,
	F301.GrandTotal,
	(F301.GrandTotal * F301.ExchangeRate) AS GrandTotalLocal,
	F301.PaidAmount,
	(F301.PaidAmount * F301.ExchangeRate) AS PaidAmountLocal,
	F301.FreightFeeAmount, 
	(F301.FreightFeeAmount * F301.ExchangeRate) AS FreightFeeAmountLocal,
	F301.InsuranceFeeAmount, 
	(F301.InsuranceFeeAmount * F301.ExchangeRate) AS InsuranceFeeAmountLocal,
	F301.AdministrationFeeAmount, 
	(F301.AdministrationFeeAmount * F301.ExchangeRate) AS AdministrationFeeAmountLocal
	FROM 
	  F301
	INNER JOIN F001 ON F301.BranchCode = F001.Code
	INNER JOIN F109 ON F301.SupplierCode = F109.Code
	INNER JOIN F110 ON F301.WareHouseCode = F110.Code
	INNER JOIN F006 ON F301.CurrencyCode = F006.Code  
	INNER JOIN F018 ON F301.PaymentTermCode = F018.Code
	WHERE 
	  F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
	  (F301.PostGRN = prmPostGRN1 OR F301.PostGRN  = prmPostGRN2) AND
	  F301.DeleteStatus = FALSE AND
	  LENGTH(PODNo) > 0
	  AND f301.BranchCode = prmBranchCode
	ORDER BY F301.BranchCode, F301.GRNNo DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_Delete`(
IN prmBranchCode VARCHAR(50), 
IN prmGRNNo VARCHAR(50),
IN prmUpdatedBy VarChar(50)  
)
BEGIN
  -- DELETE FROM F302 WHERE F302.BranchCode = prmBranchCode AND F302.GRNNo = prmGRNNo;
  DELETE FROM F301 WHERE F301.BranchCode = prmBranchCode AND F301.GRNNo = prmGRNNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_Get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_Get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F301_Get_ByCode`(prmBranchCode varchar(50), prmGRNNo varchar(50))
BEGIN
	SELECT 
          F301.BranchCode,
          F301.GRNNo,
	  F301.TransactionDate,
	  F301.WarehouseCode
	FROM F301
	WHERE
	  F301.BranchCode = prmBranchCode AND F301.GRNNo = prmGRNNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_Get_ByItemCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_Get_ByItemCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_Get_ByItemCode`(
  prmBranchCode VarChar(50), 
  prmSupplierCode VarChar(50), 
  prmItemCode VarChar(50),
  prmCurrencyCode VarChar(50),
  prmFirstDate DateTime,
  prmLastDate DateTime)
BEGIN	
	SELECT
		F301.GRNNo,
		F301.TransactionDate,
		F302.Quantity,
		F301.CurrencyCode,
		F302.Price,
		F302.DiscountPercent1,
		F302.DiscountPercent2,
		F302.DiscountPercent3,
		F301.DiscountPercent,
		F301.PPNPercent
		
	FROM F302
	INNER JOIN F301 ON F301.BranchCode = prmBranchCode AND F302.GRNNo = F301.GRNNo
	WHERE 
		F302.BranchCode = prmBranchCode AND
		F302.ItemCode = prmItemCode AND
		F301.SupplierCode = prmSupplierCode AND
		F301.CurrencyCode = prmCurrencyCode AND
		F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	ORDER BY
		F302.GRNNo DESC;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_Get_F302_History` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_Get_F302_History` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_Get_F302_History`(
	IN prmBranchCode VARCHAR(50),
	IN prmFirstDate Datetime,
	IN prmLastDate Datetime,
	IN prmGRNNo varchar(50),  
	IN prmSupplierCode Varchar(50), 
	IN prmSupplierName Varchar(100),
	IN prmCurrencyCode varchar(50),
	IN prmCurrencyName varchar(100),	
	IN prmItemCode Varchar(50),
	IN prmItemName varchar(100)
)
BEGIN
	SELECT 	
		        F301.GRNNo			as GRNNo,
			F301.TransactionDate 		as TransactionDate,
			F301.PODNo 			as PODNo,			
			F109.Code 			as SupplierCode, 	
			F109.Name 			as SupplierName, 
			F006.Code 			as CurrencyCode, 
			F006.Name 			as CurrencyName, 
			F301.ExchangeRate		as ExchangeRate,
			F301.Description 		as Description,	
			F013.Code 			as ItemCode,
			F013.Name		        as ItemName,
			F302.Quantity,			
			F302.Price, 
			F302.DiscountPercent1, 
			F302.DiscountAmount1, 
			F302.DiscountPercent2, 
			F302.DiscountAmount2, 
			F302.DiscountPercent3, 
			F302.DiscountAmount3, 
			F301.TotalTransactionAmount   			as GRNTotalTransaction, 
		       (F301.TotalTransactionAmount * F301.ExchangeRate) 	as GRNTotalTransactionAmountLocal, 
			F301.DiscountPercent 				as GRNDiscountPercentHeader, 
			F301.DiscountAmount 				as GRNDiscountAmountHeader, 
			(F301.DiscountAmount * F301.ExchangeRate) 	as GRNDiscountAmountHeaderLocal, 
			F301.PPNPercent 				as GRNPPNPercent, 
			F301.PPNAmount 					as GRNPPNAmount, 
			(F301.PPNAmount * F301.ExchangeRate)		as GRNPPNAmountLocal, 
			F301.OtherFeeAmount 			     		as GRNOtherFeeAmount, 
			(F301.OtherFeeAmount * F301.ExchangeRate)  		as GRNOtherFeeAmountLocal, 
			F301.GrandTotal 			  	as GRNGrandTotal, 
			(F301.GrandTotal * F301.ExchangeRate) 		as GRNGrandTotalAmountLocal, 
			F301.PaidAmount 			   	as GRNPaidAmount, 
			(F301.PaidAmount * F301.ExchangeRate) 	   	as GRNPaidAmountLocal
		FROM
			F302
			INNER JOIN F301 ON F302.GRNNo = F301.GRNNo and F302.BranchCode = F301.BranchCode
			INNER JOIN F013 ON F302.ItemCode = F013.Code
			INNER JOIN F109 ON F301.SupplierCode = F109.Code and F301.BranchCode = F109.BranchCode
			INNER JOIN F006 ON F301.CurrencyCode = F006.Code			
		 WHERE
		 F301.BranchCode = prmBranchCode AND
		 F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate 
		 And F301.GRNNo Like prmGRNNo 
		 And F013.Code Like prmItemCode 
		 And F013.Name Like prmItemName 
		 and F109.Code like prmSupplierCode 
		 and F109.Name like prmSupplierName 
		 and F006.Code like prmCurrencyCode 
		 and F006.Name like prmCurrencyName		
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_Insert`(
in PrmBranchCode               varchar(50),
in PrmGRNNo                    varchar(50),
in PrmTransactionDate          datetime,
in PrmPODNo                    varchar(50),
in PrmSupplierCode             varchar(50),
in PrmCurrencyCode             varchar(50),
in PrmExchangeRate             decimal(18,4),
in PrmPaymentTermCode          varchar(50),
in PrmWarehouseCode            varchar(50),
in PrmReceivedBy               varchar(100),
in PrmDescription              text,
in PrmSupplierRefNo            varchar(100),
in PrmPoliceNo                 varchar(50),
in PrmContainerNo              varchar(50),
in PrmTotalTransactionAmount   decimal(18,4),
in PrmDiscountPercent          decimal(18,4),
in PrmDiscountAmount           decimal(18,4),
in PrmPPNPercent               decimal(18,4),
in PrmPPNAmount                decimal(18,4),
in PrmFreightFeeAmount         decimal(18,4),
in PrmInsuranceFeeAmount       decimal(18,4),
in PrmAdministrationFeeAmount  decimal(18,4),
in PrmOtherFeeAmount           decimal(18,4),
in PrmGrandTotal               decimal(18,4),
in PrmCreatedBy                varchar(50)
)
BEGIN
		INSERT INTO F301 (
			BranchCode,
			GRNNo,
			TransactionDate,
			PODNo,
			SupplierCode,
			CurrencyCode,
			ExchangeRate,
			PaymentTermCode,
			WarehouseCode,
			ReceivedBy,
			Description,
			SupplierRefNo,
			PoliceNo,
			ContainerNo,
			TotalTransactionAmount,
			DiscountPercent,
			DiscountAmount,
			PPNPercent,
			PPNAmount,
			FreightFeeAmount,
			InsuranceFeeAmount,
			AdministrationFeeAmount,
			OtherFeeAmount,
			GrandTotal,
			CreatedBy,
			CreatedDate)
		VALUES(
			PrmBranchCode,
			PrmGRNNo,
			PrmTransactionDate,
			PrmPODNo,
			PrmSupplierCode,
			PrmCurrencyCode,
			PrmExchangeRate,
			PrmPaymentTermCode,
			PrmWarehouseCode,
			PrmReceivedBy,
			PrmDescription,
			PrmSupplierRefNo,
			PrmPoliceNo,
			PrmContainerNo,
			PrmTotalTransactionAmount,
			PrmDiscountPercent,
			PrmDiscountAmount,
			PrmPPNPercent,
			PrmPPNAmount,
			PrmFreightFeeAmount,
			PrmInsuranceFeeAmount,
			PrmAdministrationFeeAmount,
			PrmOtherFeeAmount,
			PrmGrandTotal,
			PrmCreatedBy,
			NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_nonPODNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_nonPODNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_nonPODNo_get`(
	prmBranchCode VARCHAR(50),
	prmFirstDate DATETIME,
	prmLastDate DATETIME
)
BEGIN
		SELECT
			F301.BranchCode,
			F001.Name As BranchName,
			F301.GRNNo, 
			F301.TransactionDate, 
			F301.PODNo,
			F109.Code 			as SupplierCode,
			F109.Name 			as SupplierName, 
			F109.ContactPerson 		as SupplierContactPerson, 
			F301.CurrencyCode
			F006.Name			as CurrencyName,
			F301.ExchangeRate, 
			F301.PaymentTermCode,
			F018.Name			as PaymentTermName,
			F301.WarehouseCode, 
			F110.Name AS WarehouseName,
			F301.ReceivedBy, 
			F301.Description, 
			F301.SupplierRefNo, 
			F301.PoliceNo, 
			F301.ContainerNo, 
			F301.TotalTransactionAmount,
			(F301.TotalTransactionAmount * F301.ExchangeRate) AS TotalTransactionAmountLocal,
			F301.DiscountPercent, 
			F301.DiscountAmount,
			(F301.DiscountAmount * F301.ExchangeRate) AS DiscountAmountLocal,
			F301.PPNPercent, 
			F301.PPNAmount,
			(F301.PPNAmount * F301.ExchangeRate) AS PPNAmountLocal,
			F301.OtherFeeAmount,
			(F301.OtherFeeAmount * F301.ExchangeRate) AS OtherFeeAmountLocal,
			F301.GrandTotal,
			(F301.GrandTotal * F301.ExchangeRate) AS GrandTotalLocal,
			F301.PaidAmount,
			(F301.PaidAmount * F301.ExchangeRate) AS PaidAmountLocal,
			F301.FreightFeeAmount, 
			(F301.FreightFeeAmount * F301.ExchangeRate) AS FreightFeeAmountLocal,
			F301.InsuranceFeeAmount, 
			(F301.InsuranceFeeAmount * F301.ExchangeRate) AS InsuranceFeeAmountLocal,
			F301.AdministrationFeeAmount, 
			(F301.AdministrationFeeAmount * F301.ExchangeRate) AS AdministrationFeeAmountLocal
		FROM 
			F301
			INNER JOIN F001 ON F301.BranchCode = F001.Code
			INNER JOIN F109 ON F301.SupplierCode = F109.Code
			INNER JOIN F110 ON F301.WareHouseCode = F110.Code
			INNER JOIN F006 ON F301.CurrencyCode = F006.Code  
			INNER JOIN F018 ON F301.PaymentTermCode = F018.Code
		WHERE 
			F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
			F301.DeleteStatus = FALSE AND
			LENGTH(PODNo) = 0
		ORDER By F301.GRNNo DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_Search_ByItemAndCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_Search_ByItemAndCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F301_Search_ByItemAndCode`(
  prmBranchCode VarChar(50), 
  prmSupplierCode VarChar(50), 
  prmItemCode VarChar(50),
  prmCurrencyCode VarChar(50),
  prmCode varChar(50))
BEGIN	
	SELECT
		F301.GRNNo,
		F301.TransactionDate,
		F302.Quantity,
		F301.CurrencyCode,
		F302.Price,
		F302.DiscountPercent1,
		F302.DiscountPercent2,
		F302.DiscountPercent3,
		F301.DiscountPercent,
		F301.PPNPercent
		
	FROM F302
	INNER JOIN F301 ON F301.BranchCode = prmBranchCode AND F302.GRNNo = F301.GRNNo
	WHERE 
		F302.BranchCode = prmBranchCode AND
		F302.ItemCode = prmItemCode AND
		F301.SupplierCode = prmSupplierCode AND
		F301.CurrencyCode = prmCurrencyCode AND
		F301.GRNNo = prmCode
	ORDER BY
		F302.GRNNo DESC;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_Update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_Update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_Update`(
in PrmNewBranchCode		varchar(50),
in PrmTransactionDate          datetime,
in PrmPODNo                    varchar(50),
in PrmSupplierCode             varchar(50),
in PrmCurrencyCode             varchar(50),
in PrmExchangeRate             decimal(18,4),
in PrmPaymentTermCode          varchar(50),
in PrmWarehouseCode            varchar(50),
in PrmReceivedBy               varchar(100),
in PrmDescription              text,
in PrmSupplierRefNo            varchar(100),
in PrmPoliceNo                 varchar(50),
in PrmContainerNo              varchar(50),
in PrmTotalTransactionAmount   decimal(18,4),
in PrmDiscountPercent          decimal(18,4),
in PrmDiscountAmount           decimal(18,4),
in PrmPPNPercent               decimal(18,4),
in PrmPPNAmount                decimal(18,4),
in PrmFreightFeeAmount         decimal(18,4),
in PrmInsuranceFeeAmount       decimal(18,4),
in PrmAdministrationFeeAmount  decimal(18,4),
in PrmOtherFeeAmount           decimal(18,4),
in PrmGrandTotal               decimal(18,4),
in PrmUpdatedBy                varchar(50),
in PrmOldGRNNo			varchar(50),
in PrmOldBranchCode		varchar(50)
)
BEGIN
		UPDATE F301 SET
            F301.BranchCode = prmNewBranchCode,
	    F301.TransactionDate = prmTransactionDate,
            F301.PODNo			= prmPODNo,
            F301.SupplierCode	= prmSupplierCode,
            F301.CurrencyCode	= prmCurrencyCode,
            F301.ExchangeRate    = prmExchangeRate,
            F301.PaymentTermCode = prmPaymentTermCode,
            F301.WarehouseCode   = prmWarehouseCode,
            F301.ReceivedBy      = prmReceivedBy,
            F301.Description     = prmDescription,
            F301.SupplierRefNo	= prmSupplierRefNo,
            F301.PoliceNo		= prmPoliceNo,
            F301.ContainerNo		= prmContainerNo,
            F301.TotalTransactionAmount = prmTotalTransactionAmount,
            F301.DiscountPercent = prmDiscountPercent,
            F301.DiscountAmount	= prmDiscountAmount,
            F301.PPNPercent		= prmPPNPercent,
            F301.PPNAmount       = prmPPNAmount,
            F301.FreightFeeAmount = prmFreightFeeAmount,
            F301.InsuranceFeeAmount = prmInsuranceFeeAmount,
	    F301.AdministrationFeeAmount = prmAdministrationFeeAmount,
            F301.OtherFeeAmount 	= prmOtherFeeAmount,
            F301.GrandTotal		= prmGrandTotal,
            F301.UpdatedBy       = prmUpdatedBy,
            F301.UpdatedDate		= NOW()
		WHERE
			F301.BranchCode = prmOldBranchCode AND F301.GRNNo = prmOldGRNNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_Update_GiroReject_F508PaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_Update_GiroReject_F508PaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_Update_GiroReject_F508PaidAmount`(
        prmGRNNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount decimal(18,4)
)
BEGIN
		UPDATE F301 SET
			PaidAmount = PaidAmount - prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			GRNNo = prmGRNNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_update_PaidAmount_F506` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_update_PaidAmount_F506` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_update_PaidAmount_F506`(
        prmGRNNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F301 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F506 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					BKKNo=prmBuktiNo 
				     and DocumentNo=prmGRNNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			GRNNo = prmGRNNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_update_PaidAmount_F508` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_update_PaidAmount_F508` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_update_PaidAmount_F508`(
        prmGRNNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount decimal(18,4)
)
BEGIN
		UPDATE F301 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F508 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					BBKNo=prmBuktiNo 
				     and DocumentNo=prmGRNNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			GRNNo = prmGRNNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_Update_PaidAmount_F520` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_Update_PaidAmount_F520` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_Update_PaidAmount_F520`(
        prmGRNNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount decimal(18,4)
)
BEGIN
		UPDATE F301 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F520 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					GJMNo=prmBuktiNo 
				     and DocumentNo=prmGRNNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			GRNNo = prmGRNNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F301_update_PostGRN` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F301_update_PostGRN` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F301_update_PostGRN`(
   -- IN prmBranchCode VARCHAR(50),
    IN prmGRNNo VARCHAR(50),
    IN prmPosting boolean
)
BEGIN
	UPDATE 
	   F301 
	SET 
	   PostGRN = prmPosting
	WHERE
	   GRNNo = prmGRNNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F302_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F302_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F302_Delete`(in prmBranchCode VarChar(50), in prmGRNNo VARChar(50) )
BEGIN
		DELETE FROM F302
		WHERE F302.BranchCode = prmBranchCode AND F302.GRNNo = prmGRNNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F302_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F302_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F302_Get`(
	in prmBranchCode VARCHAR(50),
    in prmGRNNo VARCHAR(50)
)
BEGIN
		SELECT 	
			F302.BranchCode,
			F302.GRNNo, 
			F302.ItemCode,
			F013.Name AS ItemName,
			F013.ItemTypeCode AS CategoryCode,
			f015.Name AS CategoryName,
			f015.AccountCode,
			F302.Quantity,
			F013.UnitCode,
			F302.Price, 
			F302.BonusQuantity, 
			F302.DiscountPercent1,
			F302.DiscountAmount1,
			-- (DiscountAmount1 * F301.ExchangeRate) AS DiscountAmount1Local,
			F302.DiscountPercent2,
			F302.DiscountAmount2,
			-- (DiscountAmount2 * F301.ExchangeRate) AS DiscountAmount2Local,
			F302.DiscountPercent3,
			F302.DiscountAmount3,
			-- (DiscountAmount3 * F301.ExchangeRate) AS DiscountAmount3Local,
			(F302.Quantity * F302.Price - 
				F302.DiscountAmount1 - F302.DiscountAmount2 - F302.DiscountAmount3
			) AS TotalValue,
			F302.Description
		FROM
			F302
			INNER JOIN F301 ON F302.GRNNO = F301.GRNNo
			INNER JOIN F013 ON F302.ItemCode = F013.Code
			LEFT JOIN f015 ON f015.Code = f013.ItemTypeCode
		
		WHERE
			F302.BranchCode = prmBranchCode AND F302.GRNNo = prmGRNNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F302_Get_QtyByPOD` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F302_Get_QtyByPOD` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F302_Get_QtyByPOD`(in prmBranchCode VarChar(50), in prmPODNo VarChar(50))
BEGIN
Select F301.BranchCode, F301.PODNo, F301.GRNNo, F302.ItemCode, Sum(Quantity) As ReceivedQuantity from F302
  INNER JOIN F301 ON F302.GRNNo = F301.GRNNo
WHERE F301.BranchCode = prmBranchCode AND F301.PODNo = prmPODNo
Group By F302.ItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F302_Get_SumQtyByItemAndGRNNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F302_Get_SumQtyByItemAndGRNNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F302_Get_SumQtyByItemAndGRNNo`(prmBranchCode varChar(50), prmGRNNo VArChar(50), prmItemCode VarChar(50))
BEGIN
	Select Sum(F302.Quantity) As GRNQuantity from F302
	WHERE 
	F302.BranchCode = prmBranchCode AND
	F302.GRNNo = prmGRNNo AND	
	F302.ItemCode = prmItemCode	
	GROUP BY F302.ItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F302_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F302_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F302_Insert`(
in PrmBranchCode        varchar(50),
in PrmGRNNo             varchar(50),
in PrmItemCode          varchar(50),
in PrmQuantity          decimal(18,4),
in PrmPrice             decimal(18,4),
in PrmBonusQuantity     decimal(18,4),
in PrmDiscountPercent1  decimal(18,4),
in PrmDiscountAmount1   decimal(18,4),
in PrmDiscountPercent2  decimal(18,4),
in PrmDiscountAmount2   decimal(18,4),
in PrmDiscountPercent3  decimal(18,4),
in PrmDiscountAmount3   decimal(18,4),
in PrmDescription       varchar(200),
in PrmCreatedBy         varchar(50)
)
BEGIN
		INSERT INTO F302 (
		BranchCode,
		GRNNo,
		ItemCode,
		Quantity,
		Price,
		BonusQuantity,
		DiscountPercent1,
		DiscountAmount1,
		DiscountPercent2,
		DiscountAmount2,
		DiscountPercent3,
		DiscountAmount3,	
		Description,
		CreatedBy,
		CreatedDate)
		VALUES (
		PrmBranchCode,
		PrmGRNNo,
		PrmItemCode,
		PrmQuantity,
		PrmPrice,
		PrmBonusQuantity,
		PrmDiscountPercent1,
		PrmDiscountAmount1,
		PrmDiscountPercent2,
		PrmDiscountAmount2,
		PrmDiscountPercent3,
		PrmDiscountAmount3,	
		PrmDescription,
		PrmCreatedBy,
		NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F303_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F303_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F303_delete`(
	prmBranchCode VARCHAR(50),
	prmIINNo VARCHAR(50)
)
Begin
	Delete From F304
	WHERE F304.IINNo = prmIINNo;
	Delete From F303 
	WHERE F303.IINNo = prmIINNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F303_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F303_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F303_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmIINNo varchar(50)
)
BEGIN
	Select 
		F303.BranchCode,
		F001.Name AS BranchName,
		F303.IINNo,
		F303.TransactionDate,
		F303.RefNo,
		F303.CurrencyCode,
		F006.Name AS CurrencyName,
		F303.Exchangerate,
		F303.WarehouseCode,
		F110.Name AS WarehouseName,
		F303.Description,
		F303.TotalTransactionAmount
	From 
	F303
		INNER JOIN F001 ON F303.BranchCode 		= F001.Code
		INNER JOIN F006 On F303.CurrencyCode 	= F006.Code
		INNER JOIN F110 On F303.WarehouseCode 	= F110.Code
	Where  
		F303.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	And F303.IINNo like prmIINNo
	Order BY F303.IINNo DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F303_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F303_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F303_insert`(
	prmBranchCode VARCHAR(50),
	prmIINNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmRefNo Varchar(100),
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal, 
	prmWarehouseCode varchar(50),
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal,
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO f303 
		(
			BranchCode, 
			IINNo, 
			TransactionDate, 
			RefNo,
			CurrencyCode,
			Exchangerate,
			WarehouseCode,
			Description,
			TotalTransactionAmount, 
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
			prmBranchCode,
			prmIINNo, 
			prmTransactionDate, 
			prmRefNo,
			prmCurrencyCode, 
			prmExchangeRate, 
			prmWarehouseCode,
			prmDescription, 
			prmTotalTransactionAmount,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F303_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F303_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F303_update`(
	prmBranchCode VARCHAR(50),
	prmIINNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmRefNo VARCHAR(50), 
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal,
	prmWarehousecode VARCHAR(50), 
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal, 
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F303 SET
			BranchCode 			= 	prmBranchCode,
			IINNo 				=	prmIINNo, 
			TransactionDate 			=	prmTransactionDate, 
			RefNo 				= 	prmRefno, 
			CurrencyCode 			= 	prmCurrencyCode,
			ExchangeRate 			= 	prmExchangeRate,
			WarehouseCode 		= 	prmWarehouseCode,
			Description 			=	prmDescription, 
			TotalTransactionAmount 	=	prmTotalTransactionAmount, 
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			IINNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F304_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F304_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F304_delete`(
	prmBranchCode VARCHAR(50),
	prmIINNo VARCHAR(50)
)
BEGIN
		DELETE FROM F304 WHERE  IINNo = prmIINNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F304_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F304_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F304_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmIINNo varchar(50)
)
BEGIN
	Select 
		F304.BranchCode,
		F304.IINNo,
		F304.ItemCode,
		F013.Name as ItemName,
		F013.UnitCode,
		F008.Name As UnitName,
		F304.Quantity,
		F304.Price,
		F304.ReasonCode,
		F016.Name As ReasonName,
		F304.Description
	From 
		F304
		Inner Join F013 On F304.ItemCode = F013.Code
		Inner Join F008 On F013.UnitCode = F008.Code
		Inner Join F016 On F304.ReasonCode = F016.Code	
	Where  F304.IINNo = prmIINNo
	Order by F304.IINNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F304_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F304_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F304_insert`(
	prmBranchCode VARCHAR(50), 
	prmIINNo VARCHAR(50), 
	prmItemCode VARCHAR(50), 
	prmQuantity Decimal(18,4), 
	prmPrice Decimal(18,4), 
	prmReasonCode Varchar(50),
	prmDescription TEXT, 
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F304 (
		        BranchCode, 
			IINNo, 
			ItemCode, 
			Quantity, 
			Price,
			ReasonCode,
			Description,  
			CreatedBy, 
			CreatedDate
		)
		VALUES (
		prmBranchCode,
			prmIINNo, 
			prmItemCode, 
			prmQuantity, 
			prmPrice, 
			prmReasonCode,
			prmDescription, 
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F305_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F305_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F305_delete`(
	prmBranchCode VARCHAR(50),
	prmIOTNo VARCHAR(50)
)
Begin
	Delete From F902
	WHERE F902.IOTNo = prmIOTNo;
	Delete From F306
	WHERE F306.IOTNo = prmIOTNo;
	Delete From F305 
	WHERE F305.IOTNo = prmIOTNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F305_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F305_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F305_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmIOTNo varchar(50)
)
BEGIN
	Select 	
		F305.BranchCode,
		F001.Name AS BranchName, 
		F305.IOTNo, 
		F305.TransactionDate, 
		F305.RefNo, 
		F305.CurrencyCode,
		F006.Name As CurrencyName, 
		F305.ExchangeRate, 
		F305.WarehouseCode,
		F110.Name As WarehouseName, 
		F305.Description, 
		F305.TotalTransactionAmount
	From 
	F305
		INNER JOIN F001 ON F305.BranchCode = F001.Code
	        LEFT JOIN F006 On F305.CurrencyCode = F006.Code
		INNER JOIN F110 On F305.WarehouseCode = F110.Code
	Where  F305.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	And 	 F305.IOTNo Like prmIOTNo
	Order By F305.IOTNo Desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F305_get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F305_get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F305_get_ByCode`(
   IN prmBranchCode VARCHAR(50),
   IN prmIOTNo varchar(50)
)
BEGIN
	Select 	
		F305.BranchCode,
		F001.Name AS BranchName, 
		F305.IOTNo, 
		F305.TransactionDate, 
		F305.RefNo, 
		F305.CurrencyCode,
		F006.Name As CurrencyName, 
		F305.ExchangeRate, 
		F305.WarehouseCode,
		F110.Name As WarehouseName, 
		F305.Description, 
		F305.TotalTransactionAmount
	From 
	F305
		INNER JOIN F001 ON F305.BranchCode = F001.Code
	        LEFT JOIN F006 On F305.CurrencyCode = F006.Code
		INNER JOIN F110 On F305.WarehouseCode = F110.Code
	Where   F305.IOTNo = prmIOTNO;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F305_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F305_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F305_insert`(
	prmBranchCode VARCHAR(50),
	prmIOTNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmRefNo Varchar(100),
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal, 
	prmWarehouseCode varchar(50),
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal,
	prmCreatedBy VARCHAR(50)
)
BEGIN
	Insert Into F305 
	(
		BranchCode, 
		IOTNo, 
		TransactionDate, 
		RefNo, 
		CurrencyCode, 
		ExchangeRate, 
		WarehouseCode, 
		Description, 
		TotalTransactionAmount,
		CreatedBy, 
		CreatedDate)
			values
			(
		prmBranchCode, 
		prmIOTNo, 
		prmTransactionDate, 
		prmRefNo, 
		prmCurrencyCode, 
		prmExchangeRate, 
		prmWarehouseCode, 
		prmDescription, 
		prmTotalTransactionAmount,
		prmCreatedBy,
		now());
	END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F305_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F305_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F305_update`(
	prmBranchCode VARCHAR(50),
	prmIOTNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmRefNo Varchar(100),
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal, 
	prmWarehouseCode varchar(50),
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal,
	prmUpdatedBy VARCHAR(50),
	prmOldCode VARCHAR(50)
)
BEGIN
	UPDATE F305 SET
			BranchCode 			= 	prmbranchCode, 
			IOTNo 				=	prmIOTNo, 
			TransactionDate 			=	prmTransactionDate, 
			RefNo 				= 	prmRefno, 
			CurrencyCode 			= 	prmCurrencyCode,
			ExchangeRate 			= 	prmExchangeRate,
			WarehouseCode 		= 	prmWarehouseCode,
			Description 			=	prmDescription, 
			TotalTransactionAmount 	=	prmTotalTransactionAmount, 
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	NOW()
		WHERE
			IOTNo 				= 	prmOldCode;
	END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F306_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F306_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F306_delete`(
	prmBranchCode VARCHAR(50),
	prmIOTNo VARCHAR(50)
)
BEGIN
		DELETE FROM F306 WHERE F306.IOTNo = prmIOTNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F306_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F306_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F306_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmIOTNo varchar(50)
)
BEGIN
	Select 
		F306.BranchCode,
		F306.IOTNo,
		F306.ItemCode,
		F013.Name as ItemName,
		F013.UnitCode,
		F008.Name As UnitName,
		F306.Quantity,
		F306.Price,
		F306.ReasonCode,
		F016.Name As ReasonName,
		F306.Description
	From 
		F306
		Inner Join F013 On F306.ItemCode = F013.Code
		Inner Join F008 On F013.UnitCode = F008.Code
		Inner Join F016 On F306.ReasonCode = F016.Code	
	Where  F306.IOTNo = prmIOTNo
	Order by F306.IOTNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F306_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F306_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F306_insert`(
	prmBranchCode VARCHAR(50), 
	prmIOTNo VARCHAR(50), 
	prmItemCode VARCHAR(50), 
	prmQuantity Decimal, 
	prmPrice Decimal, 
	prmReasonCode Varchar(50),
	prmDescription TEXT, 
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F306 (
			BranchCode, 
			IOTNo, 
			ItemCode, 
			Quantity, 
			Price,
			ReasonCode,
			Description,  
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode , 
			prmIOTNo, 
			prmItemCode, 
			prmQuantity, 
			prmPrice, 
			prmReasonCode,
			prmDescription, 
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F307_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F307_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F307_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmASMNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F308
  WHERE F308.BranchCode = prmBranchCode AND F308.ASMNo = prmASMNo;
  DELETE FROM F307 
  WHERE F307.BranchCode = prmBranchCode AND F307.ASMNo = prmASMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F307_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F307_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F307_Get`(prmBranchCode VARCHAR(50), prmFirstDate DateTime, prmLastDate DateTime)
BEGIN 
  SELECT 
    F307.BranchCode,
    F001.Name As BranchName, 
    F307.ASMNo, 
    F307.TransactionDate, 
    F307.WarehouseCode,
    F110.Name As WarehouseName, 
    F307.RefNo, 
    F307.Description, 
    F307.DeleteStatus, 
    F307.CreatedBy, 
    F307.CreatedDate, 
    F307.UpdatedBy, 
    F307.UpdatedDate
FROM F307
  INNER JOIN F001 ON F307.BranchCode = F001.Code
  INNER JOIN F110 ON F307.WareHouseCode = F110.Code
WHERE 
  F307.TransactionDate BETWEEN prmFirstDate AND prmLastDate
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F307_Get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F307_Get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F307_Get_ByCode`(IN prmBranchCode VARCHAR(50), IN prmASMNo VARCHAR(50))
BEGIN 
  SELECT 
    F307.BranchCode,
    F001.Name As BranchName, 
    F307.ASMNo, 
    F307.TransactionDate, 
    F307.WarehouseCode,
    F110.Name As WarehouseName, 
    F307.RefNo, 
    F307.Description
FROM F307
  INNER JOIN F001 ON F307.BranchCode = F001.Code
  INNER JOIN F110 ON F307.WareHouseCode = F110.Code
WHERE F307.ASMNo = prmASMNO;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F307_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F307_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F307_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmASMNo VARCHAR(50), 
    IN prmTransactionDate datetime, 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmRefNo VARCHAR(100), 
    IN prmDescription Text, 
    IN prmCreatedBy VARCHAR(50) 
    
 )
BEGIN 
  INSERT INTO F307 ( 
    F307.BranchCode, 
    F307.ASMNo, 
    F307.TransactionDate, 
    F307.WarehouseCode, 
    F307.RefNo, 
    F307.Description,  
    F307.CreatedBy, 
    F307.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmASMNo, 
    prmTransactionDate, 
    prmWarehouseCode, 
    prmRefNo, 
    prmDescription, 
    prmCreatedBy, 
    Now() 
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F307_Update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F307_Update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F307_Update`( 
    IN oldBranchCode VARCHAR(50),
    IN oldASMNo VARCHAR(50),
 
    IN prmBranchCode VARCHAR(50),
    IN prmTransactionDate DateTime, 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmRefNo VARCHAR(100), 
    IN prmDescription Text, 
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE F307 SET
    BranchCode = prmBranchCode, 
    TransactionDate = prmTransactionDate, 
    WarehouseCode = prmWarehouseCode, 
    RefNo = prmRefNo, 
    Description = prmDescription, 
    UpdatedBy = prmUpdatedBy, 
    UpdatedDate = Now()
  WHERE F307.BranchCode = oldBranchCode AND F307.ASMNo = oldASMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F308_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F308_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F308_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmASMNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F308 
  WHERE F308.BranchCode = prmBranchCode AND F308.ASMNo = prmASMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F308_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F308_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F308_Get`(
  in prmBranchCode VARCHAR(50),
  in prmASMNo VARCHAR(50)
)
BEGIN
  SELECT 
    F308.BranchCode, 
    F308.ASMNo, 
    F308.ItemCode,
    F013.Name As ItemName, 
    F308.Quantity, 
    F013.UnitCode,
    F308.Price,
    (F308.Quantity * F308.Price) As TotalAmount, 
    F308.ASMPosition, 
    F308.CreatedBy, 
    F308.CreatedDate, 
    F308.UpdatedBy, 
    F308.UpdatedDate, 
    F308.Description
  FROM F308
  INNER JOIN F013 ON F308.ItemCode = F013.Code
  WHERE F308.BranchCode = prmBranchCode AND F308.ASMNo = prmASMNo
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F308_Get_Decreased` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F308_Get_Decreased` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F308_Get_Decreased`(
  in prmBranchCode VARCHAR(50),
  in prmASMNo VARCHAR(50)
)
BEGIN
  SELECT 
    F308.BranchCode, 
    F308.ASMNo, 
    F308.ItemCode, 
    F013.Name As ItemName,
    F308.Quantity,
    F013.UnitCode,
    F308.Price,
    (F308.Quantity * F308.Price) As TotalAmount,
    F308.ASMPosition, 
    F308.CreatedBy, 
    F308.CreatedDate, 
    F308.UpdatedBy, 
    F308.UpdatedDate, 
    F308.Description
  FROM F308
  INNER JOIN F013 ON F308.ItemCode = F013.Code
  WHERE F308.BranchCode = prmBranchCode AND F308.ASMNo = prmASMNo AND F308.ASMPosition = 'D'
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F308_Get_Increased` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F308_Get_Increased` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F308_Get_Increased`(
  in prmBranchCode VARCHAR(50),
  in prmASMNo VARCHAR(50)
)
BEGIN
  SELECT 
    F308.BranchCode, 
    F308.ASMNo, 
    F308.ItemCode,
    F013.Name As ItemName, 
    F308.Quantity, 
    F013.UnitCode,
    F308.Price,
    (F308.Quantity * F308.Price) As TotalAmount, 
    F308.ASMPosition, 
    F308.CreatedBy, 
    F308.CreatedDate, 
    F308.UpdatedBy, 
    F308.UpdatedDate, 
    F308.Description
  FROM F308
  INNER JOIN F013 ON F308.ItemCode = F013.Code
  WHERE F308.BranchCode = prmBranchCode AND F308.ASMNo = prmASMNo AND F308.ASMPosition = 'I'
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F308_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F308_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F308_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmASMNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmQuantity Decimal(18,4), 
    IN prmPrice Decimal(18,4), 
    IN prmASMPosition VARCHAR(1), 
    IN prmDescription Text,
    IN prmCreatedBy VARCHAR(50) 
    
    
 )
BEGIN 
  INSERT INTO F308 ( 
    F308.BranchCode, 
    F308.ASMNo, 
    F308.ItemCode, 
    F308.Quantity, 
    F308.Price, 
    F308.ASMPosition, 
    F308.Description,
    F308.CreatedBy, 
    F308.CreatedDate 
 ) VALUES ( 
    prmBranchCode, 
    prmASMNo, 
    prmItemCode, 
    prmQuantity, 
    prmPrice, 
    prmASMPosition, 
    prmDescription,
    prmCreatedBy, 
    Now()  
    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F309_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F309_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F309_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmWHMNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F309 
  WHERE F309.BranchCode = prmBranchCode AND F309.WHMNo = prmWHMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F309_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F309_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F309_Get`(prmBranchCode VarChar(50),prmFirstDate DateTime, prmLastDate DateTime)
BEGIN 
  SELECT 
    F309.BranchCode, 
    F001.Name As BranchName,
    F309.WHMNo, 
    F309.TransactionDate, 
    F309.WareHouseSourceCode,
    WRH1.Name As WarehouseSourceName, 
    F309.WareHouseDestinationCode,
    WRH2.Name As WarehouseDestinationName,  
    F309.RefNo, 
    F309.Description, 
    F309.CreatedBy, 
    F309.CreatedDate, 
    F309.UpdatedBy, 
    F309.UpdatedDate
FROM F309
  INNER JOIN F001 ON F309.BranchCode = F001.Code
  INNER JOIN F110 WRH1 ON F309.WareHouseSourceCode = WRH1.Code
  INNER JOIN F110 WRH2 ON F309.WareHouseDestinationCode = WRH2.Code 

  F309.TransactionDate BETWEEN prmFirstDate AND prmLastDate
ORDER BY F309.WHMNo DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F309_Get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F309_Get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F309_Get_ByCode`(IN prmBranchCode VARCHAR(50), IN prmWHMNo VarChar(50))
BEGIN 
  SELECT 
    F309.BranchCode, 
    F001.Name As BranchName,
    F309.WHMNo, 
    F309.TransactionDate, 
    F309.WareHouseSourceCode,
    WRH1.Name As WarehouseSourceName, 
    F309.WareHouseDestinationCode,
    WRH2.Name As WarehouseDestinationName,  
    F309.RefNo, 
    F309.Description, 
    F309.CreatedBy, 
    F309.CreatedDate, 
    F309.UpdatedBy, 
    F309.UpdatedDate
FROM F309
  INNER JOIN F001 ON F309.BranchCode = F001.Code
  INNER JOIN F110 WRH1 ON F309.WareHouseSourceCode = WRH1.Code
  INNER JOIN F110 WRH2 ON F309.WareHouseDestinationCode = WRH2.Code 

  F309.BranchCode = prmBranchCode AND F309.WHMNo = prmWHMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F309_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F309_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F309_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmWHMNo VARCHAR(50), 
    IN prmTransactionDate DateTime, 
    IN prmWareHouseSourceCode VARCHAR(50), 
    IN prmWareHouseDestinationCode VARCHAR(50), 
    IN prmRefNo VARCHAR(100), 
    IN prmDescription Text, 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F309 ( 
    F309.BranchCode, 
    F309.WHMNo, 
    F309.TransactionDate, 
    F309.WareHouseSourceCode, 
    F309.WareHouseDestinationCode, 
    F309.RefNo, 
    F309.Description,  
    F309.CreatedBy, 
    F309.CreatedDate 
    
 ) VALUES ( 
    prmBranchCode, 
    prmWHMNo, 
    prmTransactionDate, 
    prmWareHouseSourceCode, 
    prmWareHouseDestinationCode, 
    prmRefNo, 
    prmDescription, 
    prmCreatedBy, 
    Now() 
    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F309_Update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F309_Update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F309_Update`( 
    IN oldBranchCode VARCHAR(50),
    IN oldWHMNo VARCHAR(50),
 
    IN prmBranchCode VARCHAR(50),
    IN prmTransactionDate DateTime, 
    IN prmWareHouseSourceCode VARCHAR(50), 
    IN prmWareHouseDestinationCode VARCHAR(50), 
    IN prmRefNo VARCHAR(100), 
    IN prmDescription Text, 
    IN prmUpdatedBy VARCHAR(50) 
    
 )
BEGIN 
  UPDATE F309 SET
    BranchCode = prmBranchCode, 
    TransactionDate = prmTransactionDate, 
    WareHouseSourceCode = prmWareHouseSourceCode, 
    WareHouseDestinationCode = prmWareHouseDestinationCode, 
    RefNo = prmRefNo, 
    Description = prmDescription, 
    UpdatedBy = prmUpdatedBy, 
    UpdatedDate = Now()
  WHERE F309.BranchCode = oldBranchCode AND F309.WHMNo = oldWHMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F310_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F310_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F310_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmWHMNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F310 
  WHERE F310.BranchCode = prmBranchCode AND F310.WHMNo = prmWHMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F310_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F310_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F310_Get`(prmBranchCode VARCHAR(50), prmWHMNo VARCHAR(50))
BEGIN 
  SELECT 
    F310.BranchCode, 
    F310.WHMNo, 
    F310.ItemCode,
    F013.Name As ItemName,
    F310.Quantity,
    F013.UnitCode,
    F310.CreatedBy, 
    F310.CreatedDate, 
    F310.UpdatedBy, 
    F310.UpdatedDate, 
    F310.Description
FROM F310
    INNER JOIN F013 ON F310.ItemCode = F013.Code
WHERE
    F310.BranchCode = prmBranchCode AND F310.WHMNo = prmWHMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F310_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F310_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F310_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmWHMNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmQuantity decimal(18,4), 
    IN prmDescription VARCHAR(200), 
    IN prmCreatedBy VARCHAR(50) 
    
 )
BEGIN 
  INSERT INTO F310 ( 
    F310.BranchCode, 
    F310.WHMNo, 
    F310.ItemCode, 
    F310.Quantity, 
    F310.Description,
    F310.CreatedBy, 
    F310.CreatedDate
    
 ) VALUES ( 
    prmBranchCode, 
    prmWHMNo, 
    prmItemCode, 
    prmQuantity, 
    prmDescription,
    prmCreatedBy, 
    Now()  
    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F311_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F311_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F311_Delete`( 
    IN DelOPNNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F311 
  WHERE F311.OPNNo = DelOPNNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F311_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F311_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F311_Get`(IN prmFirstDate DATETIME, IN prmLastDate DATETIME)
BEGIN 
  SELECT 
    F311.OPNNo, 
    F311.TransactionDate, 
    F311.BranchCode,
    F001.Name As BranchName,
    F311.WarehouseCode, 
    F110.Name As WarehouseName,
    F311.RefNo, 
    F311.Description, 
    CASE F311.OpnameStatus WHEN 0 THEN 'No' ELSE 'Yes' END AS OpnameStatus,    
    F311.CreatedBy, 
    F311.CreatedDate, 
    F311.UpdatedBy, 
    F311.UpdatedDate
FROM F311
INNER JOIN F001 ON F311.BranchCode = F001.Code
INNER JOIN F110 ON F311.WarehouseCode = F110.Code
WHERE 
  F311.TransactionDate BETWEEN prmFirstDate AND prmLastDate ORDER By F311.OPNNo DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F311_Get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F311_Get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F311_Get_ByCode`(IN prmBranchCode VARCHAR(50), IN prmOPNNo VarChar(50))
BEGIN 
  SELECT 
    F309.BranchCode, 
    F309.OPNNo, 
    F309.TransactionDate
FROM F311

  F311.BranchCode = prmBranchCode AND F311.OPNNo = prmOPNNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F311_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F311_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F311_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmOPNNo VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmTransactionDate DateTime, 
    IN prmRefNo VARCHAR(100), 
    IN prmDescription VARCHAR(100), 
    IN prmOpnameStatus TinyInt(1),
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F311 ( 
    F311.BranchCode, 
    F311.OPNNo, 
    F311.WarehouseCode, 
    F311.TransactionDate, 
    F311.RefNo, 
    F311.Description, 
    F311.OpnameStatus,
    F311.CreatedBy, 
    F311.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmOPNNo, 
    prmWarehouseCode, 
    prmTransactionDate, 
    prmRefNo, 
    prmDescription, 
    prmOpnameStatus,
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F311_Update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F311_Update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F311_Update`( 
    IN oldOPNNo VARCHAR(50),    
    IN prmBranchCode VARCHAR(50),
    IN prmWarehouseCode VARCHAR(50), 
    IN prmTransactionDate DateTime, 
    IN prmRefNo VARCHAR(100), 
    IN prmDescription VARCHAR(100), 
    IN prmOpnameStatus TinyInt(1),
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE F311 SET 
    BranchCode = prmBranchCode,
    WarehouseCode = prmWarehouseCode, 
    TransactionDate = prmTransactionDate, 
    RefNo = prmRefNo, 
    Description = prmDescription, 
    OpnameStatus = prmOpnameStatus,
    UpdatedBy = prmUpdatedBy, 
    UpdatedDate = Now()
  WHERE F311.OPNNo = oldOPNNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F312_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F312_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F312_Delete`( 
    IN DelBranchCode VARCHAR(50), 
    IN DelOPNNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F312 
  WHERE F312.BranchCode = DelBranchCode AND F312.OPNNo = DelOPNNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F312_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F312_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F312_Get`(IN prmBranchCode VARCHAR(50), IN prmOPNNo VARCHAR(50))
BEGIN 
  SELECT 
    F312.BranchCode, 
    F312.OPNNo, 
    F312.ItemCode, 
    F013.Name As ItemName,
    F013.UnitCode,
    F312.EmptyStatus, 
    F312.ActualStock, 
    F312.COGSIDR, 
    F312.Difference, 
    F312.CreatedBy, 
    F312.CreatedDate
FROM F312
INNER JOIN F013 ON F312.ItemCode = F013.Code
WHERE F312.BranchCode = prmBranchCode AND F312.OPNNo = prmOPNNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F312_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F312_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F312_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmOPNNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmEmptyStatus BOOLEAN, 
    IN prmActualStock DECIMAL, 
    IN prmCOGSIDR DECIMAL, 
    IN prmDifference DECIMAL, 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F312 ( 
    F312.BranchCode, 
    F312.OPNNo, 
    F312.ItemCode, 
    F312.EmptyStatus, 
    F312.ActualStock, 
    F312.COGSIDR, 
    F312.Difference, 
    F312.CreatedBy, 
    F312.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmOPNNo, 
    prmItemCode, 
    prmEmptyStatus, 
    prmActualStock, 
    prmCOGSIDR, 
    prmDifference, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F313_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F313_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F313_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmDSMNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F314
  WHERE F314.BranchCode = prmBranchCode AND F314.DSMNo = prmDSMNo;
  DELETE FROM F313 
  WHERE F313.BranchCode = prmBranchCode AND F313.DSMNo = prmDSMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F313_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F313_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F313_Get`(prmBranchCode VARCHAR(50), prmFirstDate DateTime, prmLastDate DateTime)
BEGIN 
  SELECT 
    F313.BranchCode,
    F001.Name As BranchName, 
    F313.DSMNo, 
    F313.TransactionDate, 
    F313.WarehouseCode,
    F110.Name As WarehouseName, 
    F313.RefNo, 
    F313.Description, 
    F313.DeleteStatus, 
    F313.CreatedBy, 
    F313.CreatedDate, 
    F313.UpdatedBy, 
    F313.UpdatedDate
FROM F313
  INNER JOIN F001 ON F313.BranchCode = F001.Code
  INNER JOIN F110 ON F313.WareHouseCode = F110.Code
WHERE 
  F313.TransactionDate BETWEEN prmFirstDate AND prmLastDate
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F313_Get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F313_Get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F313_Get_ByCode`(IN prmBranchCode VARCHAR(50), IN prmDSMNo VARCHAR(50))
BEGIN 
  SELECT 
    F313.BranchCode,
    F001.Name As BranchName, 
    F313.DSMNo, 
    F313.TransactionDate, 
    F313.WarehouseCode,
    F110.Name As WarehouseName, 
    F313.RefNo, 
    F313.Description
FROM F313
  INNER JOIN F001 ON F313.BranchCode = F001.Code
  INNER JOIN F110 ON F313.WareHouseCode = F110.Code
WHERE F313.DSMNo = prmDSMNO;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F313_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F313_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F313_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmDSMNo VARCHAR(50), 
    IN prmTransactionDate datetime, 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmRefNo VARCHAR(100), 
    IN prmDescription Text, 
    IN prmCreatedBy VARCHAR(50) 
    
 )
BEGIN 
  INSERT INTO F313 ( 
    F313.BranchCode, 
    F313.DSMNo, 
    F313.TransactionDate, 
    F313.WarehouseCode, 
    F313.RefNo, 
    F313.Description,  
    F313.CreatedBy, 
    F313.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmDSMNo, 
    prmTransactionDate, 
    prmWarehouseCode, 
    prmRefNo, 
    prmDescription, 
    prmCreatedBy, 
    Now() 
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F313_Update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F313_Update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F313_Update`( 
    IN oldBranchCode VARCHAR(50),
    IN oldDSMNo VARCHAR(50),
 
    IN prmBranchCode VARCHAR(50),
    IN prmTransactionDate DateTime, 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmRefNo VARCHAR(100), 
    IN prmDescription Text, 
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE F313 SET
    BranchCode = prmBranchCode, 
    TransactionDate = prmTransactionDate, 
    WarehouseCode = prmWarehouseCode, 
    RefNo = prmRefNo, 
    Description = prmDescription, 
    UpdatedBy = prmUpdatedBy, 
    UpdatedDate = Now()
  WHERE F313.BranchCode = oldBranchCode AND F313.DSMNo = oldDSMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F314_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F314_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F314_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmDSMNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F314
  WHERE F314.BranchCode = prmBranchCode AND F314.DSMNo = prmDSMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F314_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F314_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F314_Get`(
  in prmBranchCode VARCHAR(50),
  in prmDSMNo VARCHAR(50)
)
BEGIN
  SELECT 
    F314.BranchCode, 
    F314.DSMNo, 
    F314.ItemCode,
    F013.Name As ItemName, 
    F314.Quantity, 
    F013.UnitCode,
    F314.Price,
    (F314.Quantity * F314.Price) As TotalAmount, 
    F314.DSMPosition, 
    F314.CreatedBy, 
    F314.CreatedDate, 
    F314.UpdatedBy, 
    F314.UpdatedDate, 
    F314.Description
  FROM F314
  INNER JOIN F013 ON F314.ItemCode = F013.Code
  WHERE F314.BranchCode = prmBranchCode AND F314.DSMNo = prmDSMNo
  ORDER BY F314.DSMPosition DESC
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F314_Get_Decreased` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F314_Get_Decreased` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F314_Get_Decreased`(
  in prmBranchCode VARCHAR(50),
  in prmDSMNo VARCHAR(50)
)
BEGIN
  SELECT 
    F314.BranchCode, 
    F314.DSMNo, 
    F314.ItemCode, 
    F013.Name As ItemName,
    F314.Quantity,
    F013.UnitCode,
    F314.Price,
    (F314.Quantity * F314.Price) As TotalAmount,
    F314.DSMPosition, 
    F314.CreatedBy, 
    F314.CreatedDate, 
    F314.UpdatedBy, 
    F314.UpdatedDate, 
    F314.Description
  FROM F314
  INNER JOIN F013 ON F314.ItemCode = F013.Code
  WHERE F314.BranchCode = prmBranchCode AND F314.DSMNo = prmDSMNo AND F314.DSMPosition = 'D'
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F314_Get_Increased` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F314_Get_Increased` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F314_Get_Increased`(
  in prmBranchCode VARCHAR(50),
  in prmDSMNo VARCHAR(50)
)
BEGIN
  SELECT 
    F314.BranchCode, 
    F314.DSMNo, 
    F314.ItemCode,
    F013.Name As ItemName, 
    F314.Quantity, 
    F013.UnitCode,
    F314.Price,
    (F314.Quantity * F314.Price) As TotalAmount, 
    F314.DSMPosition, 
    F314.CreatedBy, 
    F314.CreatedDate, 
    F314.UpdatedBy, 
    F314.UpdatedDate, 
    F314.Description
  FROM F314
  INNER JOIN F013 ON F314.ItemCode = F013.Code
  WHERE F314.BranchCode = prmBranchCode AND F314.DSMNo = prmDSMNo AND F314.DSMPosition = 'I'
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F314_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F314_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F314_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmDSMNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmQuantity Decimal(18,4), 
    IN prmPrice Decimal(18,4), 
    IN prmDSMPosition VARCHAR(1), 
    IN prmDescription Text,
    IN prmCreatedBy VARCHAR(50) 
    
    
 )
BEGIN 
  INSERT INTO F314 ( 
    F314.BranchCode, 
    F314.DSMNo, 
    F314.ItemCode, 
    F314.Quantity, 
    F314.Price, 
    F314.DSMPosition, 
    F314.Description,
    F314.CreatedBy, 
    F314.CreatedDate 
 ) VALUES ( 
    prmBranchCode, 
    prmDSMNo, 
    prmItemCode, 
    prmQuantity, 
    prmPrice, 
    prmDSMPosition, 
    prmDescription,
    prmCreatedBy, 
    Now()  
    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F398_checkMinusStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F398_checkMinusStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F398_checkMinusStock`(
	in prmBranchCode varchar(50),
	in prmWarehouseCode varchar(50),
	in prmItemCode varchar(50)
)
BEGIN
		SELECT 
			MinusQuantity
		FROM 
			F398
		WHERE
			BranchCode = prmBranchCode
			AND WarehouseCode = prmWarehouseCode
			AND ItemCode = prmItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F398_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F398_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F398_insert`(
	prmBranchCode VARCHAR(50), 
	prmWarehouseCode VARCHAR(50), 
	prmItemCode VARCHAR(50), 
	prmMinusQuantity DECIMAL(18,4), 
	prmUser VARCHAR(50)
)
BEGIN
		INSERT INTO F398 ( 
			BranchCode, 
			WarehouseCode, 
			ItemCode, 
			MinusQuantity, 
			CreatedBy, 
			CreatedDate)
		VALUES (
			prmBranchCode, 
			prmWarehouseCode, 
			prmItemCode, 
			prmMinusQuantity, 
			prmUser,
			NOW()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F398_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F398_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F398_update`(
	prmBranchCode VARCHAR(50), 
	prmWarehouseCode VARCHAR(50), 
	prmItemCode VARCHAR(50), 
	prmMinusQuantity DECIMAL(18,4)
)
BEGIN
		UPDATE
			F398
		SET
			MinusQuantity = MinusQuantity + prmMinusQuantity
		WHERE
			BranchCode = prmBranchCode
			AND WarehouseCode = prmWarehouseCode
			AND ItemCode = prmItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F399_checkActualStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F399_checkActualStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F399_checkActualStock`(
	in prmBranchCode varchar(50),
	in prmWarehouseCode varchar(50),
	in prmItemCode varchar(50)
)
BEGIN
		SELECT
			F399.Code,
			ItemCode,
			ItemDate,
			COGSIDR,
			ActualStock,
			UsedStock
		FROM 
			F399
		WHERE
			WarehouseCode = prmWarehouseCode
			AND ItemCode = prmItemCode
			AND ActualStock > UsedStock
		ORDER BY F399.ItemDate, F399.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F399_checkActualStockTotal` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F399_checkActualStockTotal` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F399_checkActualStockTotal`(
	in prmBranchCode varchar(50),
	in prmWarehouseCode varchar(50),
	in prmItemCode varchar(50)
)
BEGIN
		SELECT 
			SUM(ActualStock-UsedStock)
		FROM 
			F399
		WHERE
			WarehouseCode = prmWarehouseCode
			AND ItemCode = prmItemCode
			-- AND ActualStock <> UsedStock
		ORDER BY F399.Code;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F399_DetailStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F399_DetailStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F399_DetailStock`(
	IN prmBranchCode VARCHAR(50),
	IN prmItemCode VARCHAR(50),
	IN prmItemName VARCHAR(200),
	IN prmUnitCode VARCHAR(50),
	IN prmUnitName VARCHAR(200),
	IN prmWarehouseCode VARCHAR(50),
	IN prmWarehouseName VARCHAR(200)
)
BEGIN
		SELECT
			F399.BranchCode,
			F399.ItemCode,
			F013.Name AS ItemName,
			F013.ItemTypeCode, 
			F015.Name AS ItemTypeName,
			F008.Code AS UnitCode,
			F008.Name AS UnitName,
			F399.WarehouseCode,
			F110.Name AS WarehouseName,
			Sum(F399.ActualStock - F399.UsedStock) AS ActualStock, 
			F399.COGSIDR,
			F399.ItemDate,
			Sum(F399.ActualStock - F399.UsedStock) * F399.COGSIDR AS Total
		FROM F399
			LeFT Join F013 On F399.ItemCode = F013.Code
			LeFT Join F008 On F013.UnitCode = F008.Code
			LeFT join F015 on F015.Code = F013.ItemTypeCode 
			LeFT Join F110 On F399.WarehouseCode = F110.Code
		WHERE	F399.BranchCode Like prmBranchCode AND
			F399.ItemCode Like prmItemCode AND
			F013.Name Like prmItemName AND
			F008.Code Like prmUnitCode AND
			F008.Name Like prmUnitName AND
			F399.WarehouseCode Like prmWarehouseCode AND
			F110.Name Like prmWarehouseName AND
			F399.ActualStock > F399.UsedStock
		GROUP BY F399.WarehouseCode, F399.ItemCode, F399.COGSIDR;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F399_GetMax` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F399_GetMax` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F399_GetMax`(prmBranchCode VARCHAR(50))
BEGIN
		SELECT MAX(F399.AutoNumber) FROM F399 WHERE F399.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F399_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F399_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F399_Insert`(
		in prmBranchCode varchar(50),
		in prmWarehouseCode varchar(50),
		in prmCode decimal(30,0),
		in prmItemCode varchar(50),
		in prmItemDate datetime,
		in prmCOGSIDR decimal(18,4),
		in prmActualStock decimal(18,4),
		in prmCreatedBy varchar(50) )
BEGIN
		INSERT INTO F399 (
			BranchCode,
			WarehouseCode,
			F399.Code,
			ItemCode,
			ItemDate,
			COGSIDR,
			ActualStock,
			UsedStock,
			CreatedBy,
			CreatedDate )
		VALUES (
			prmBranchCode,
			prmWarehouseCode,
			prmCode,
			prmItemCode,
			prmItemDate,
			prmCOGSIDR,
			prmActualStock,
			0,
			prmCreatedBy,
			NOW() 
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F399_StockQuantity` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F399_StockQuantity` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F399_StockQuantity`(
	IN prmBranchCode VARCHAR(50),
	IN prmItemCode VARCHAR(50),
	IN prmItemName VARCHAR(200),
	IN prmUnitCode VARCHAR(50),
	IN prmUnitName VARCHAR(200),
	IN prmWarehouseCode VARCHAR(50),
	IN prmWarehouseName VARCHAR(200)
)
BEGIN
		SELECT
			F399.BranchCode,
			F399.ItemCode,
			F013.Name AS ItemName,
			F013.ItemTypeCode, 
			F015.Name AS ItemTypeName,
			F008.Code AS UnitCode,
			F008.Name AS UnitName,
			F399.WarehouseCode,
			F110.Name AS WarehouseName,
			Sum(F399.ActualStock - F399.UsedStock) AS ActualStock 
		FROM F399
			Inner Join F013 On F399.ItemCode = F013.Code
			Inner Join F008 On F013.UnitCode = F008.Code
			Inner join F015 on F015.Code = F013.ItemTypeCode 
			Inner Join F110 On F399.WarehouseCode = F110.Code
		WHERE   
			F399.BranchCode Like prmBranchCode AND
			F399.ItemCode Like prmItemCode AND
			F013.Name Like prmItemName AND
			F008.Code Like prmUnitCode AND
			F008.Name Like prmUnitName AND
			F399.WarehouseCode Like prmWarehouseCode AND
			F110.Name Like prmWarehouseName AND
			F399.ActualStock > F399.UsedStock
		GROUP BY F399.WarehouseCode, F399.ItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F399_usedStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F399_usedStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F399_usedStock`(
	in prmBranchCode varchar(50),
	in prmWarehouseCode varchar(50),
	in prmCode varchar(50),
	in prmUsedStock Decimal
)
BEGIN
		UPDATE
			F399
		SET
			UsedStock = UsedStock + prmUsedStock
		WHERE 
			BranchCode = prmBranchCode
			AND WarehouseCode = prmWarehouseCode
			AND F399.Code = prmCode
			AND ActualStock >= UsedStock + prmUsedStock;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F400_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F400_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F400_Insert`( 
    IN prmPeriodMonth decimal, 
    IN prmPeriodYear decimal, 
    IN prmItemCode VARCHAR(50),
    IN prmItemDate DateTime, 
    IN prmBranchCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmActualStock decimal, 
    IN prmCOGSIDR decimal, 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F400 ( 
    F400.PeriodMonth, 
    F400.PeriodYear, 
    F400.ItemCode,
    F400.ItemDate, 
    F400.BranchCode, 
    F400.WarehouseCode, 
    F400.ActualStock, 
    F400.COGSIDR, 
    F400.CreatedBy, 
    F400.CreatedDate
 ) VALUES ( 
    prmPeriodMonth, 
    prmPeriodYear, 
    prmItemCode,
    prmItemDate, 
    prmBranchCode, 
    prmWarehouseCode, 
    prmActualStock, 
    prmCOGSIDR, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F401_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F401_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F401_delete`(
	IN prmBranchCode VARCHAR(50),
	IN prmVoucherNo VARCHAR(20),
	IN prmUpdatedBy VARCHAR(50)
)
BEGIN
	
	DELETE FROM F402
	WHERE
	   BranchCode = prmBranchCode AND VoucherNo = prmVoucherNo; 
	DELETE FROM F401
	WHERE
	   BranchCode = prmBranchCode AND VoucherNo = prmVoucherNo; 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F401_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F401_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F401_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime
)
BEGIN
	SELECT 	
	   BranchCode, 
	   VoucherNo, 
	   TransactionDate, 
	   RefNo, 
	   CurrencyCode, 
	   ExchangeRate, 
	   JournalType, 
	   JournalVoucherCode, 
	   PostingStatus, 
	   ParentVoucherNo, 
	   AutomaticJournalType
	FROM
	   F401
	WHERE
	   DeleteStatus = false
	   AND BranchCode = prmBranchCode
	   AND TransactionDate BETWEEN prmFirstDate AND prmLastDate;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F401_get_postingstatus` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F401_get_postingstatus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F401_get_postingstatus`(
   IN prmBranchCode VARCHAR(50),
   IN prmPostingStatus boolean,
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime
)
BEGIN
	SELECT 	
	   BranchCode, 
	   VoucherNo, 
	   TransactionDate,
	   RefNo, 
	   CurrencyCode, 
	   ExchangeRate, 
	   JournalType, 
	   JournalVoucherCode, 
	   PostingStatus, 
	   ParentVoucherNo, 
	   AutomaticJournalType
	FROM
	   F401
	WHERE
	   DeleteStatus = false
	   AND BranchCode = prmBranchCode
	   AND PostingStatus = prmPostingStatus
	   AND TransactionDate BETWEEN prmFirstDate AND prmLastDate;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F401_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F401_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F401_insert`(
	    IN prmBranchCode VARCHAR(50),
	    IN prmVoucherNo VARCHAR(20),
	    IN prmTransactionDate DATETIME, 
	    IN prmRefNo VARCHAR(50), 
	    IN prmCurrencyCode VARCHAR(50), 
	    IN prmExchangeRate VARCHAR(50), 
	    IN prmJournalType VARCHAR(50), 
	    IN prmJournalVoucherCode VARCHAR(50), 
	    IN prmPostingStatus TINYINT(1), 
	    IN prmParentVoucherNo VARCHAR(50), 
	    IN prmAutomaticJournalType VARCHAR(50),
	    IN prmCreatedBy VARCHAR(50)
	   )
BEGIN
	INSERT INTO f401 
	(   BranchCode, 
	    VoucherNo, 
	    TransactionDate, 
	    RefNo, 
	    CurrencyCode, 
	    ExchangeRate, 
	    JournalType, 
	    JournalVoucherCode, 
	    PostingStatus, 
	    ParentVoucherNo, 
	    AutomaticJournalType, 
	    CreatedBy, 
	    CreatedDate
	)
	VALUES
	(   prmBranchCode, 
	    prmVoucherNo, 
	    prmTransactionDate, 
	    prmRefNo, 
	    prmCurrencyCode, 
	    prmExchangeRate, 
	    prmJournalType, 
	    prmJournalVoucherCode, 
	    prmPostingStatus, 
	    prmParentVoucherNo, 
	    prmAutomaticJournalType,
	    prmCreatedBy, 
	    NOW()
	);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F401_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F401_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F401_update`(
    IN prmBranchCode VARCHAR(50),
    IN prmVoucherNo VARCHAR(20),
    IN prmTransactionDate DATETIME, 
    IN prmRefNo VARCHAR(50), 
    IN prmCurrencyCode VARCHAR(50), 
    IN prmExchangeRate VARCHAR(50), 
    IN prmJournalType VARCHAR(50), 
    IN prmJournalVoucherCode VARCHAR(50), 
    IN prmPostingStatus TINYINT(1), 
    IN prmParentVoucherNo VARCHAR(50), 
    IN prmAutomaticJournalType VARCHAR(50),
    IN prmUpdatedBy VARCHAR(50),
    IN prmOldCode VARCHAR(50)
)
BEGIN
	UPDATE F401 SET
	    VoucherNo = prmVoucherNo, 
	    TransactionDate = prmTransactionDate, 
	    RefNo = prmRefNo, 
	    CurrencyCode = prmCurrencyCode, 
	    ExchangeRate = ExchangeRate, 
	    JournalType = JournalType, 
	    JournalVoucherCode = JournalVoucherCode, 
	    PostingStatus = prmPostingStatus, 
	    ParentVoucherNo = prmParentVoucherNo, 
	    AutomaticJournalType = prmAutomaticJournalType, 
	    UpdatedBy = prmUpdatedBy, 
	    UpdatedDate = NOW()
	WHERE
	    BranchCode = prmBranchCode AND VoucherNo = prmOldCode; 
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F401_update_posting` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F401_update_posting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F401_update_posting`(
    IN prmBranchCode VARCHAR(50),
    IN prmVoucherNo VARCHAR(50),
    IN prmPosting boolean
)
BEGIN
	UPDATE 
	   F401 
	SET 
	   PostingStatus = prmPosting
	WHERE
	   BranchCode = prmBranchCode AND VoucherNo = prmVoucherNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F401_update_postingStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F401_update_postingStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F401_update_postingStock`(
    IN prmBranchCode VARCHAR(50),
    IN prmPBNo VARCHAR(50),
   IN prmPosting boolean
)
BEGIN
	UPDATE 
	   F207 
	SET 
	   PostLog = prmPosting
	  -- PostLogDate =prmPostLogDate
	WHERE
	   BranchCode = prmBranchCode AND PBNo = prmPBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F402_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F402_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F402_delete`(
	IN prmBranchCode VARCHAR(50),
	IN prmVoucherNo VARCHAR(20)
)
BEGIN
	DELETE FROM F402 
	WHERE 
	   BranchCode = prmBranchCode AND VoucherNo = prmVoucherNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F402_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F402_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F402_get`(
    IN prmBranchCode VARCHAR(50),
    IN prmVoucherNo VARCHAR(20)
)
BEGIN
	SELECT 	
	   F402.BranchCode, 
	   F402.VoucherNo, 
	   F402.Description, 
	   F402.AccountCode,
	   F101.Name AS AccountName,
	   F402.Debit,
	   F402.Credit,
	   (F402.Debit * F401.ExchangeRate) as DebitLocal,
	   (F402.Credit * F401.ExchangeRate) as CreditLocal,
	   F402.SubAreaCode
	FROM 
	   F402 
	   INNER JOIN F401 ON F402.BranchCode = F401.BranchCode AND F402.VoucherNo = F401.VoucherNo
	   left JOIN F101 ON F402.AccountCode = F101.Code 
	WHERE
	   F402.BranchCode = prmBranchCode AND F402.VoucherNo = prmVoucherNo
	ORDER BY
	   F402.Debit DESC, F402.AccountCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F402_get_bydescription` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F402_get_bydescription` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F402_get_bydescription`(
In prmCode Varchar(50),
In prmFirstDate DateTime,
In prmlastDate DateTime
)
BEGIN
	Select 
		F401.TransactionDate,	
		F402.VoucherNo, 
		F402.Description, 
		F402.AccountCode, 
		F402.Debit, 
		F402.Credit 
	From F402
		Inner Join F401 On F401.VoucherNo = F402.VoucherNo
	Where 
		F402.Description Like prmCode And
		F401.TransactionDate Between prmFirstDate And prmLastDate
	Group By F402.Description, F402.AccountCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F402_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F402_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F402_insert`(
	IN prmBranchCode VARCHAR(50), 
	IN prmVoucherNo VARCHAR(20), 
	IN prmDescription VARCHAR(250), 
	IN prmAccountCode VARCHAR(22), 
	IN prmDebit numeric(18,2), 
	IN prmCredit numeric(18,2), 
	IN prmSubAreaCode VARCHAR(50), 
	IN prmCreatedBy VARCHAR(50)
    )
BEGIN
	INSERT INTO F402 
	(   BranchCode, 
	    VoucherNo, 
	    Description, 
	    AccountCode, 
	    Debit, 
	    Credit, 
	 SubAreaCode,
	    CreatedBy, 
	    CreatedDate
	)
	VALUES
	(   prmBranchCode, 
	    prmVoucherNo, 
	    prmDescription, 
	    prmAccountCode, 
	    prmDebit, 
	    prmCredit,
	prmSubAreaCode,
	    prmCreatedBy, 
	    NOW()
	);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f501f503_fak_get_forFak` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f501f503_fak_get_forFak` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f501f503_fak_get_forFak`( 
)
BEGIN
	SELECT 
 Qry1.INVNo,
 Qry1.TransactionDate,
 Qry1.Description,
 Qry1.CustomerCode,
 Qry1.CustomerName,
 Qry1.NPWPAddress,
 -- (SELECT Funit_Code FROM f048 WHERE f048.fowner = Qry1.CustomerCode OR f048.ftenant = Qry1.CustomerCode) AS WarehouseName,
 (SELECT Funit_Code FROM f048 WHERE f048.fowner = Qry1.CustomerCode OR f048.ftenant = Qry1.CustomerCode GROUP BY CustomerCode) AS WarehouseName,
 Qry1.Price,
 Qry1.PPNAmountLocal,
 Qry1.FakNo,
 Qry1.FakDate,
 Qry1.BPno, 
 '' as TerbilangText
 FROM (	
	SELECT 
 INVNo,
 TransactionDate,
 Description,
 CustomerCode,
	F106.name AS CustomerName,
 F106.NPWPAddress AS NPWPAddress,
 '' AS WarehouseName,
 Price,
 PPNAmountLocal,
 FakNo,
 FakDate,
 BPno   
	FROM 
	f501f503_fak		
		INNER JOIN F106 ON  f501f503_fak.CustomerCode = F106.Code
		)AS Qry1		
	Order by Qry1.INVNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f501f503_fak_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f501f503_fak_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f501f503_fak_insert`(
	prmINVNo VARCHAR(50),
  prmTransactionDate DATETIME,
 prmDescription VARCHAR(200),
 prmCustomerCode VARCHAR(50),
 -- prmCustomerName VARCHAR(200),
 -- prmNPWPAddress VARCHAR(200),
 prmPrice DECIMAL(18,4),
 prmPPNAmountLocal DECIMAL(18,4),
 prmFakNo VARCHAR(50),
 prmFakDate DATETIME,
 prmBPno VARCHAR(50),
	prmCreatedBy varchar(50)    
)
BEGIN
	insert into f501f503_fak
	(
	-- BranchCode,                        
	INVNo,
  TransactionDate,
 Description,
 CustomerCode,
 -- CustomerName,
 -- NPWPAddress,
 Price,
 PPNAmountLocal,
 FakNo,
 FakDate,
 BPno,   
	CreatedBy,      
	CreatedDate 
	)
	value
	(
	-- prmBranchCode,      
	prmINVNo,
  prmTransactionDate,
 prmDescription,
 prmCustomerCode,
 -- prmCustomerName,
 -- prmNPWPAddress,
 prmPrice,
 prmPPNAmountLocal,
 prmFakNo,
 prmFakDate,
 prmBPno,     
	prmCreatedBy,
	NOW()
	);
update f501 set FakNo=prmFakNo, BPno=prmBPno where BKMno=prmINVNo;   
UPDATE f503 SET FakNo=prmFakNo, BPno=prmBPno WHERE bbmno=prmINVNo;
  
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F501_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F501_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F501_delete`(
	prmBranchCode VARCHAR(50),
	prmBKMNo VARCHAR(50)
)
Begin
	Delete From F502
	WHERE  BKMNo = prmBKMNo;
	Delete From F501 
	WHERE  BKMNo = prmBKMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F501_F505_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F501_F505_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F501_F505_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmPettyCashNo varchar(50)
)
BEGIN
	Select 
		F501.BranchCode,
		F501.BKMNo as PettyCashNo,
		F501.TransactionDate,
		F501.CashTypeCode,
		F104.Name as CashTypeName,
		F501.CustomerCode as CustOrSuppCode,
		F106.Name as CustOrSuppName,
		F106.ContactPerson as ContactPerson,
		F501.RefNo,
		F501.CurrencyCode,
		F006.Name As CurrencyName,
		F501.Exchangerate,
		F501.BKMFrom as Note,
		F501.TotalTransactionAmount,
		(F501.TotalTransactionAmount * F501.ExchangeRate) as TotalTransactionAmountLocal, 
		F501.Description,
		F501.DeleteStatus
	From 
	F501
		Inner Join F104 On  F501.CashTypeCode = F104.Code
		left JOIN F106 on  F501.CustomerCode = F106.Code
		Inner Join F006 On F501.CurrencyCode = F006.Code
Where 
		-- F501.BranchCode = prmBranchCode AND 
		F501.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		And F501.BKMNo like prmPettyCashNo
	
union all
Select 
		F505.BranchCode,
		F505.BKKNo as PettyCashNo,
		F505.TransactionDate,
		F505.CashTypeCode,
		F104.Name as CashTypeName,
		F505.SupplierCode as CustOrSuppCode,
		F109.Name as CustOrSuppName,
		F109.ContactPerson as ContactPerson,
		F505.RefNo,
		F505.CurrencyCode,
		F006.Name As CurrencyName,
		F505.Exchangerate,
		F505.BKKTo as Note, 
		F505.TotalTransactionAmount,
		(F505.TotalTransactionAmount * F505.ExchangeRate) as TotalTransactionAmountLocal, 
		F505.Description,
		F505.DeleteStatus
	From 
	F505
		Inner Join F104 On  F505.CashTypeCode = F104.Code
		left JOIN F109 on  F505.SupplierCode = F109.Code
		Inner Join F006 On F505.CurrencyCode = F006.Code
Where 
		-- F501.BranchCode = prmBranchCode AND 
		F505.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		And F505.BKKNo like prmPettyCashNo
	Order by PettyCashNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F501_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F501_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F501_get`(
  IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmBKMNo varchar(50)
)
BEGIN
	Select 
		F501.BranchCode,
		F501.BKMNo,
		F501.TransactionDate,
		F501.CashTypeCode,
		f101.Name as CashTypeName,
		F501.CustomerCode,
		F106.Name as CustomerName,
		F106.ContactPerson as ContactPerson,
		F501.RefNo,
		F501.CurrencyCode,
		F006.Name As CurrencyName,
		F501.Exchangerate,
		F501.BKMFrom,
		F501.TotalTransactionAmount,
		(F501.TotalTransactionAmount * F501.ExchangeRate) as TotalTransactionAmountLocal, 
		F501.Description,
		F501.DeleteStatus
	From 
	F501
		left Join f101 On  F501.CashTypeCode = f101.Code
		INNER JOIN F106 on  F501.CustomerCode = F106.Code
		Inner Join F006 On F501.CurrencyCode = F006.Code
		
	Where 
		F501.BranchCode = prmBranchCode AND 
		F501.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		And F501.BKMNo like prmBKMNo
	Order by F501.BKMNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F501_get_forfak` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F501_get_forfak` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F501_get_forfak`(
    
)
BEGIN
	Select 
		F501.BranchCode,
		F501.BKMNo,
		F501.TransactionDate,
		F501.CashTypeCode,
		f101.Name as CashTypeName,
		F501.CustomerCode,
		F106.Name as CustomerName,
		F106.ContactPerson as ContactPerson,
		F501.RefNo,
		F501.CurrencyCode,
		F006.Name As CurrencyName,
		F501.Exchangerate,
		F501.BKMFrom,
		F501.TotalTransactionAmount,
		(F501.TotalTransactionAmount * F501.ExchangeRate) as TotalTransactionAmountLocal, 
		F501.Description,
	F501.FakNo,
	F501.BPno,
		F501.DeleteStatus
	From 
	F501
		left Join f101 On  F501.CashTypeCode = f101.Code
		INNER JOIN F106 on  F501.CustomerCode = F106.Code
		Inner Join F006 On F501.CurrencyCode = F006.Code
		
	
	Order by F501.BKMNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F501_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F501_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F501_insert`(
	prmBranchCode VARCHAR(50),
	prmBKMNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCashTypeCode varchar(50),
	prmCustomerCode varchar(50),
	prmTradeName VARCHAR(200),
			prmBlockUnit VARCHAR(50),
		prmRefNo Varchar(100),
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal(18,4), 
	prmBKMFrom VARCHAR(50), 	
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal(18,4),
	prmTerbilang varchar(200),
	prmDeleteStatus tinyint(1),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F501 
		(
			BranchCode, 
			BKMNo, 
			TransactionDate, 
			CashTypeCode,
			CustomerCode,
			TradeName,
			BlockUnit,
			RefNo,
			CurrencyCode,
			Exchangerate,			
			BKMFrom,			
			Description,			
			TotalTransactionAmount, 			
			DeleteStatus,
			Terbilang,
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
			prmBranchCode,
			prmBKMNo, 
			prmTransactionDate, 
			prmCashTypeCode,
			prmCustomerCode,
			prmTradeName,
			prmBlockUnit,
			prmRefNo,
			prmCurrencyCode, 
			prmExchangeRate,
			prmBKMFrom,
			prmDescription, 
			prmTotalTransactionAmount,
			prmDeleteStatus,
			prmTerbilang,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F501_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F501_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F501_update`(
	prmBranchCode VARCHAR(50),
	prmBKMNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCashTypeCode VARCHAR(50),	
	prmCustomercode VARCHAR(50), 
	prmTradeName VARCHAR(200),
			prmBlockUnit VARCHAR(50),
	prmRefNo VARCHAR(50), 
	prmCurrencyCode VARCHAR(50),	
	prmExchangeRate Decimal,
	prmBKMFrom VARCHAR(50),
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal, 
	prmDeleteStatus tinyint,
	prmTerbilang VARCHAR(200),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F501 SET
			BKMNo 				=	prmBKMNo, 
			TransactionDate 		=	prmTransactionDate, 
			CashTypeCode                    =       prmCashTypeCode,
			CustomerCode 			= 	prmCustomerCode,
			TradeName=prmTradeName,
			BlockUnit=prmBlockUnit,
			RefNo 				= 	prmRefno, 
			CurrencyCode 			= 	prmCurrencyCode,
			ExchangeRate 			= 	prmExchangeRate,
			BKMFrom				=       prmBKMFrom,
			Description 			=	prmDescription, 
			TotalTransactionAmount 		=	prmTotalTransactionAmount, 
			DeleteStatus  			=       prmDeleteStatus,
			Terbilang			=	prmTerbilang,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			-- BranchCode 			= 	prmbranchCode AND 
			BKMNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F502_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F502_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F502_delete`(
	prmBranchCode VARCHAR(50),
	prmBKMNo VARCHAR(50)
)
BEGIN
		DELETE FROM F502 WHERE 
		-- BranchCode = prmBranchCode AND 
		BKMNo = prmBKMNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F502_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F502_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F502_get`(
  -- IN prmBranchCode VARCHAR(50),
   IN prmBKMNo varchar(50)
)
BEGIN
	Select 
		F502.BranchCode,
		F502.BKMNo,
		F502.BudgetTypeCode,
		-- F011.Name as BudgetTypeName,
		F502.DocumentNo,
		F502.Description,
		F502.Amount,		
                (F502.Amount * F501.ExchangeRate)	as AmountLocal,
		F502.DPP_PPN_Status,
		F607.CurrencyCode	as CurrencyCode, 
		F607.ExchangeRate,          
		-- F607.Description	as Description,        
		F607.GrandTotal 			as GrandTotal, 
		(F607.GrandTotal * F607.ExchangeRate)	as GrandTotalAmountLocal,
		F607.PaidAmount 			as PaidAmount, 
		(F607.PaidAmount * F607.ExchangeRate) 	as PaidAmountLocal,
		(F607.GrandTotal - F607.PaidAmount) as Balance,
		(F607.GrandTotal - F607.PaidAmount)* F607.ExchangeRate as BalanceLocal		
	From 
		F502
		-- Inner Join F011 On F502.BudgetTypeCode = F011.Code
		INNER JOIN F607 on F502.DocumentNo = F607.INVNo	
		INNER Join F501 on F502.BKMNo = F501.BKMNo
		-- INNER JOIN F611 on F502.BranchCode   = F611.BranchCode and F502.DocumentNo = F611.SRTNo
		-- INNER JOIN F515 on F502.BranchCode   = F515.BranchCode and F502.DocumentNo = F515.CDPNo
	Where 	
		-- F502.BranchCode = prmBranchCode And 
		F502.BKMNo = prmBKMNo
		-- GROUP BY BKMNo
	
union all
Select 
		F502.BranchCode,
		F502.BKMNo,
		F502.BudgetTypeCode,
		-- F011.Name as BudgetTypeName,
		F502.DocumentNo,
		F502.Description,
		F502.Amount,		
                (F502.Amount * F501.ExchangeRate)	as AmountLocal,
		F502.DPP_PPN_Status,
		F618.CurrencyCode	as CurrencyCode, 
		F618.ExchangeRate,          
		-- F607.Description	as Description,        
		F618.GrandTotal 			as GrandTotal, 
		(F618.GrandTotal * F618.ExchangeRate)	as GrandTotalAmountLocal,
		F618.PaidAmount 			as PaidAmount, 
		(F618.PaidAmount * F618.ExchangeRate) 	as PaidAmountLocal,
		(F618.GrandTotal - F618.PaidAmount) as Balance,
		(F618.GrandTotal - F618.PaidAmount)* F618.ExchangeRate as BalanceLocal		
	From 
		F502
		-- Inner Join F011 On F502.BudgetTypeCode = F011.Code
		INNER JOIN F618 on F502.DocumentNo = F618.INVNo	
		Inner Join F501 on F502.BKMNo = F501.BKMNo
		-- INNER JOIN F611 on F502.BranchCode   = F611.BranchCode and F502.DocumentNo = F611.SRTNo
		-- INNER JOIN F515 on F502.BranchCode   = F515.BranchCode and F502.DocumentNo = F515.CDPNo
	Where 	
		-- F502.BranchCode = prmBranchCode And 
		F502.BKMNo = prmBKMNo
		-- GROUP BY BKMNo
union all
Select 
		F502.BranchCode,
		F502.BKMNo,
		F502.BudgetTypeCode,
		-- F011.Name as BudgetTypeName,
		F502.DocumentNo,
		F502.Description,
		F502.Amount,
                (F502.Amount * F501.ExchangeRate)	as AmountLocal,
		F502.DPP_PPN_Status,
		F613.CurrencyCode	as CurrencyCode, 
		F613.ExchangeRate,		
		-- F613.Description	as Description, 	
		F613.GrandTotalAmount				as GrandTotal,
		(F613.GrandTotalAmount * F613.ExchangeRate) 	As GrandTotalAmountLocal, 
		F613.UsedAmount 				as PaidAmount,
		(F613.UsedAmount * F613.ExchangeRate) 		as  PaidAmountLocal,
		(F613.GrandTotalAmount - F613.UsedAmount) as Balance,
		(F613.GrandTotalAmount - F613.UsedAmount)* F613.ExchangeRate as BalanceLocal
	From 
		F502
		-- Inner Join F011 On F502.BudgetTypeCode = F011.Code
		INNER JOIN F613 on F502.DocumentNo = F613.SRTNo	
		Inner Join F501 on F502.BKMNo = F501.BKMNo
		-- INNER JOIN F611 on F502.BranchCode   = F611.BranchCode and F502.DocumentNo = F611.SRTNo
		-- INNER JOIN F515 on F502.BranchCode   = F515.BranchCode and F502.DocumentNo = F515.CDPNo
	Where 	
		-- F502.BranchCode = prmBranchCode And 
		F502.BKMNo = prmBKMNo
		
		-- group by BKMNo
	Order by BKMNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F502_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F502_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F502_insert`(
	prmBranchCode VARCHAR(50), 
	prmBKMNo VARCHAR(50), 
	prmBudgetTypeCode VARCHAR(50), 
	prmDocumentNo varchar(50),
	prmDescription varchar(200), 
	prmAmount decimal(18,4),
	prmDPP_PPN_Status enum('PPN','PPH','MTR','ADM','DPP','ALL'),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F502 (
			BranchCode, 
			BKMNo, 
			BudgetTypeCode, 
			DocumentNo, 
			Description,
			Amount,
			DPP_PPN_Status,
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode , 
			prmBKMNo, 
			prmBudgetTypeCode, 
			prmDocumentNo, 
			prmDescription, 
			prmAmount,	
			prmDPP_PPN_Status,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F503_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F503_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F503_delete`(
	prmBranchCode VARCHAR(50),
	prmBBMNo VARCHAR(50)
)
Begin
	Delete From F504
	WHERE  BBMNo = prmBBMNo;
	Delete From F503 
	WHERE  BBMNo = prmBBMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F503_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F503_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F503_get`(
 --  IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmBBMNo varchar(50)
)
BEGIN
	SELECT 
		F503.BranchCode,
		F503.BBMNo,
		F503.TransactionDate,
		F503.BankAccountCode,
		f101.Name AS BankAccountName,
		F503.CustomerCode,
		F106.Name AS CustomerName,
		F106.ContactPerson AS ContactPerson,
		F503.RefNo,
		F503.CurrencyCode,
		F006.Name AS CurrencyName,
		F503.Exchangerate,
		F503.BBMFrom,
		F503.TotalTransactionAmount,
		(F503.TotalTransactionAmount * F503.ExchangeRate) AS TotalTransactionAmountLocal, 
		F503.Description,
		F503.DeleteStatus
	FROM 
	F503
		left JOIN f101 ON F503.BankAccountCode = f101.Code
		INNER JOIN F106 ON  F503.CustomerCode = F106.Code
		INNER JOIN F006 ON F503.CurrencyCode = F006.Code
		
	Where 
		-- F503.BranchCode = prmBranchCode AND 
		F503.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		And F503.BBMNo like prmBBMNo
	Order by F503.BBMNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F503_get2` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F503_get2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F503_get2`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmBBMNo varchar(50)
)
BEGIN
	SELECT 
		F503.BranchCode,
		F503.BBMNo,
		F503.TransactionDate,
		F503.BankAccountCode,
		f101.Name AS BankAccountName,
		F503.CustomerCode,
		F106.Name AS CustomerName,
		F106.ContactPerson AS ContactPerson,
		F503.RefNo,
		F503.CurrencyCode,
		F006.Name AS CurrencyName,
		F503.Exchangerate,
		F503.BBMFrom,
		F503.TotalTransactionAmount,
		(F503.TotalTransactionAmount * F503.ExchangeRate) AS TotalTransactionAmountLocal, 
		F503.Description,
		F503.DeleteStatus
	FROM 
	F503
		left JOIN f101 ON F503.BankAccountCode = f101.Code
		INNER JOIN F106 ON  F503.CustomerCode = F106.Code
		INNER JOIN F006 ON F503.CurrencyCode = F006.Code
		
	Where 
		F503.BranchCode = prmBranchCode AND 
		F503.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		And F503.BBMNo like prmBBMNo
	Order by F503.BBMNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F503_get_forFak` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F503_get_forFak` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F503_get_forFak`( 
)
BEGIN
	SELECT 
		F503.BranchCode,
		F503.BBMNo,
		F503.TransactionDate,
		F503.BankAccountCode,
		f101.Name AS BankAccountName,
		F503.CustomerCode,
		F106.Name AS CustomerName,
		F106.ContactPerson AS ContactPerson,
		F503.RefNo,
		F503.CurrencyCode,
		F006.Name AS CurrencyName,
		F503.Exchangerate,
		F503.BBMFrom,
		F503.TotalTransactionAmount,
		(F503.TotalTransactionAmount * F503.ExchangeRate) AS TotalTransactionAmountLocal, 
		F503.Description,
		F503.FakNo,
	F503.BPno,
		F503.DeleteStatus
	FROM 
	F503
		left JOIN f101 ON F503.BankAccountCode = f101.Code
		INNER JOIN F106 ON  F503.CustomerCode = F106.Code
		INNER JOIN F006 ON F503.CurrencyCode = F006.Code
		
	-- Where 
		-- F503.BranchCode = prmBranchCode AND 
		-- F503.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		 -- F503.BBMNo =  prmBBMNo
	Order by F503.BBMNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F503_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F503_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F503_insert`(
	prmBranchCode VARCHAR(50),
	prmBBMNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCustomerCode varchar(50),
	prmTradeName VARCHAR(200),
			prmBlockUnit VARCHAR(50),
	prmBankAccountCode varchar(50),	
	prmBBMFrom VARCHAR(20), 
	prmRefNo Varchar(100),
	prmDescription TEXT,	
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal(18,2), 		
	prmTotalTransactionAmount Decimal(18,2),
	prmPaymentType varchar(1),
	prmGiroNo Varchar(50),
	prmGiroDueDate datetime,
	prmBankName varchar(50),
	prmGiroStatus varchar(1),
	prmGiroClearanceDate datetime,
	prmTransferNo varchar(50),
	prmTransferDate datetime,
	prmOtherRefNo varchar(50),
	prmOtherDate datetime,
	prmDeleteStatus tinyint(1),
	prmTerbilang VARCHAR(200),
	prmCreatedBy VARCHAR(50) 
)
BEGIN
		INSERT INTO F503 
		(
			BranchCode, 
			BBMNo, 
			TransactionDate, 
			CustomerCode,
			TradeName,
			BlockUnit,
			BankAccountCode,
			BBMFrom,
			RefNo,
			Description,
			CurrencyCode,
			Exchangerate,
			TotalTransactionAmount, 
			PaymentType,
			GiroNo,
			GiroDueDate,
			BankName,
			GiroStatus,
			GiroClearanceDate,
			TransferNo,
			TransferDate,
			OtherRefNo,
			OtherDate,
			DeleteStatus,
			Terbilang,
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
		prmBranchCode,
		prmBBMNo, 
		prmTransactionDate, 
		prmCustomerCode,
		prmTradeName,
			prmBlockUnit,
		prmBankAccountCode,	
		prmBBMFrom, 
		prmRefNo,
		prmDescription,	
		prmCurrencyCode, 
		prmExchangeRate, 		
		prmTotalTransactionAmount,
		prmPaymentType,
		prmGiroNo,
		prmGiroDueDate,
		prmBankName,
		prmGiroStatus,
		prmGiroClearanceDate,
		prmTransferNo,
		prmTransferDate,
		prmOtherRefNo,
		prmOtherDate,
		prmDeleteStatus,
		prmTerbilang,
		prmCreatedBy,	
		now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F503_Search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F503_Search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F503_Search`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmFromDueDate datetime,
   IN prmToDueDate datetime,
   IN prmCustomerCode varchar(50),
   IN prmBankName varchar(100),
   IN prmGiroNo varchar(50),	
   IN prmBBMNo varchar(50),
   IN prmGiroStatus varchar(100),
   IN prmFromTotalTransactionAmount decimal(18,4),
   IN prmToTotalTransactionAmount decimal(18,4)
)
BEGIN
	CALL usp_string_to_mysqlrow(prmGiroStatus, ",");
	Select 
		F503.BranchCode,
		F503.BBMNo,
		F503.TransactionDate,
		F503.CustomerCode,
		F106.Name as CustomerName,
		F106.ContactPerson as ContactPerson,
		F503.BankAccountCode,
		F101.Name as BankAccountName,
		F503.BBMFrom,	
		F503.RefNo,
		F503.Description,
		F503.CurrencyCode,
		F006.Name As CurrencyName,
		F503.Exchangerate,		
		F503.TotalTransactionAmount,
		(F503.TotalTransactionAmount * F503.ExchangeRate) as TotalTransactionAmountLocal, 		
		F503.PaymentType,
		F503.GiroNo,
		F503.GiroDueDate,
		F503.BankName,
		F503.GiroStatus,
		F503.GiroClearanceDate,
		F503.TransferNo,
		F503.TransferDate,
		F503.OtherRefNo,
		F503.OtherDate,
		F503.DeleteStatus
	From 
	F503
		left Join F101 On  F503.BankAccountCode = F101.Code
		INNER JOIN F106 on  F503.CustomerCode = F106.Code
		Inner Join F006 On F503.CurrencyCode = F006.Code
		
	Where 
		-- F503.BranchCode = prmBranchCode AND 
		F503.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		and F503.GiroDueDate between prmFromDueDate and prmToDueDate
		and F503.CustomerCode like prmCustomerCode
		and F503.BankName like prmBankName
		and F503.GiroNo like prmGiroNo
		And F503.BBMNo like prmBBMNo
		and F503.GiroStatus IN (SELECT * FROM Temp_SplitString)
		and F503.PaymentType = "G"
		AND F503.TotalTransactionAmount between prmFromTotalTransactionAmount and prmToTotalTransactionAmount
			Order by F503.BBMNo desc;
	DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F503_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F503_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F503_update`(
	prmBranchCode VARCHAR(50),
	prmBBMNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCustomerCode varchar(50),
	prmTradeName VARCHAR(200),
			prmBlockUnit VARCHAR(50),
	prmBankAccountCode varchar(50),	
	prmBBMFrom VARCHAR(50), 
	prmRefNo Varchar(100),
	prmDescription TEXT,	
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal, 		
	prmTotalTransactionAmount Decimal(18,4),
	prmPaymentType varchar(1),
	prmGiroNo Varchar(50),
	prmGiroDueDate datetime,
	prmBankName varchar(50),
	prmGiroStatus varchar(1),
	prmTransferNo varchar(50),
	prmTransferDate datetime,
	prmOtherRefNo varchar(50),
	prmOtherDate datetime,
	prmDeleteStatus tinyint(1),
	prmTerbilang VARCHAR(200),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F503 SET
			BranchCode	 		= prmBranchCode, 
			BBMNo 				= prmBBMNo, 
			TransactionDate			= prmTransactionDate, 
			CustomerCode 			= prmCustomerCode,
			TradeName=prmTradeName,
			BlockUnit=prmBlockUnit,
			BankAccountCode 		= prmBankAccountCode,
			BBMFrom 			= prmBBMFrom,
			RefNo 				= prmRefNo,
			Description 			= prmDescription,
			CurrencyCode 			= prmCurrencyCode,
			Exchangerate 			= prmExchangerate,
			TotalTransactionAmount 		= prmTotalTransactionAmount, 
			PaymentType 			= prmPaymentType,
			GiroNo 				= prmGiroNo,
			GiroDueDate 			= prmGiroDueDate,
			BankName 			= prmBankName,
			GiroStatus 			= prmGiroStatus,
			-- GiroClearanceDate 		= prmGiroClearanceDate,
			TransferNo 			= prmTransferNo,
			TransferDate 			= prmTransferDate,
			OtherRefNo 			= prmOtherRefNo,
			OtherDate 			= prmOtherDate,
			Terbilang			= prmTerbilang,
			DeleteStatus 			= prmDeleteStatus,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			-- BranchCode 			= 	prmbranchCode AND 
			BBMNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F503_Update_GiroStatus` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F503_Update_GiroStatus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F503_Update_GiroStatus`(
	prmBranchCode VARCHAR(50),
	prmBBMNo VARCHAR(50), 	
	-- prmBankAccountCode varchar(50),	
	prmGiroClearanceDate datetime,
	prmGiroStatus VARCHAR(1),
	prmUpdatedBy VARCHAR(50)
)
BEGIN
		UPDATE F503 SET			
			-- BankAccountCode 		= prmBankAccountCode,
			GiroStatus 			= prmGiroStatus,
			GiroClearanceDate 		= prmGiroClearanceDate,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			-- BranchCode 			= 	prmbranchCode AND 
			BBMNo 				= 	prmBBMNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F504_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F504_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F504_delete`(
	prmBranchCode VARCHAR(50),
	prmBBMNo VARCHAR(50)
)
BEGIN
		DELETE FROM F504 WHERE 
		-- BranchCode = prmBranchCode AND 
		BBMNo = prmBBMNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F504_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F504_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F504_get`(
   -- IN prmBranchCode VARCHAR(50),
   IN prmBBMNo varchar(50)
)
BEGIN
	SELECT 
		F504.BranchCode,
		F504.BBMNo,
		F504.BudgetTypeCode,
		f103.Name AS BudgetTypeName,
		f103.AccountCode AS AccountCode,
		F504.DocumentNo,
		F504.DocumentNo,
		F504.Description,
		F504.Amount,
                (F504.Amount * F503.ExchangeRate)	AS AmountLocal,
		F504.DPP_PPN_Status,
		F607.CurrencyCode	AS CurrencyCode, 
		F607.ExchangeRate,          
		-- F607.Description	as Description,        
		F607.GrandTotal 			AS GrandTotal, 
		(F607.GrandTotal * F607.ExchangeRate)	AS GrandTotalAmountLocal,
		F607.PaidAmount 			AS PaidAmount, 
		(F607.PaidAmount * F607.ExchangeRate) 	AS PaidAmountLocal,
		(F607.GrandTotal - F607.PaidAmount) AS Balance,
		(F607.GrandTotal - F607.PaidAmount)* F607.ExchangeRate AS BalanceLocal
	FROM 
		F504
		LEFT JOIN f103 ON F504.BudgetTypeCode = f103.Code
		-- Inner Join F011 On F504.BudgetTypeCode = F011.Code
		INNER JOIN F607 ON F504.DocumentNo = F607.INVNo	
		INNER JOIN F503 ON F504.BBMNo = F503.BBMNo		
	Where 	
		-- F504.BranchCode = prmBranchCode And 
		F504.BBMNo = prmBBMNo
	Order by BBMNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F504_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F504_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F504_insert`(
	prmBranchCode VARCHAR(50), 
	prmBBMNo VARCHAR(50), 
	prmBudgetTypeCode VARCHAR(50), 
	prmDocumentNo varchar(50),
	prmDescription varchar(200), 
	prmAmount decimal(18,2), 
	prmDPP_PPN_Status ENUM('PPN','PPH','MTR','ADM','DPP','ALL'),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F504 (
			BranchCode, 
			BBMNo, 
			BudgetTypeCode, 
			DocumentNo, 
			Description,
			Amount,
			DPP_PPN_Status,
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode , 
			prmBBMNo, 
			prmBudgetTypeCode, 
			prmDocumentNo, 
			prmDescription, 
			prmAmount,
			prmDPP_PPN_Status,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f505_AP_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f505_AP_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f505_AP_delete`(
	prmBranchCode VARCHAR(50),
	prmBKKNo VARCHAR(50)
)
Begin
	Delete From f506_AP
	WHERE  BKKNo = prmBKKNo;
	Delete From f505_AP 
	WHERE  BKKNo = prmBKKNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f505_AP_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f505_AP_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f505_AP_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmBKKNo varchar(50)
)
BEGIN
	Select 
		f505_AP.BranchCode,
		f505_AP.BKKNo,
		f505_AP.TransactionDate,
		f505_AP.CashTypeCode,
		F104.Name as CashTypeName,
		f505_AP.SupplierCode,
		F109.Name as SupplierName,
		F109.ContactPerson as ContactPerson,
		f505_AP.RefNo,
		f505_AP.CurrencyCode,
		F006.Name As CurrencyName,
		f505_AP.Exchangerate,
		f505_AP.BKKTo,
		f505_AP.TotalTransactionAmount,
		(f505_AP.TotalTransactionAmount * f505_AP.ExchangeRate) as TotalTransactionAmountLocal, 
		f505_AP.Description,
		f505_AP.DeleteStatus
	From 
	f505_AP
		Inner Join F104 On  f505_AP.CashTypeCode = F104.Code
		INNER JOIN F109 on  f505_AP.SupplierCode = F109.Code
		Inner Join F006 On f505_AP.CurrencyCode = F006.Code
		
	Where 
f505_AP.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		And f505_AP.BKKNo like prmBKKNo
		And f505_AP.BranchCode = prmBranchCode
	Order by f505_AP.BKKNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f505_AP_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f505_AP_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f505_AP_insert`(
	prmBranchCode VARCHAR(50),
	prmBKKNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCashTypeCode varchar(50),
	prmSupplierCode varchar(50),
	prmRefNo Varchar(100),
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal(18,4), 
	prmBKKTo VARCHAR(50), 	
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal(18,4),
	prmDeleteStatus tinyint(1),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO f505_AP 
		(
			BranchCode, 
			BKKNo, 
			TransactionDate, 
			CashTypeCode,
			SupplierCode,
			RefNo,
			CurrencyCode,
			Exchangerate,			
			BKKTo,			
			Description,			
			TotalTransactionAmount, 			
			DeleteStatus,
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
			prmBranchCode,
			prmBKKNo, 
			prmTransactionDate, 
			prmCashTypeCode,
			prmSupplierCode,
			prmRefNo,
			prmCurrencyCode, 
			prmExchangeRate,
			prmBKKTo,
			prmDescription, 
			prmTotalTransactionAmount,
			prmDeleteStatus,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f505_AP_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f505_AP_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f505_AP_update`(
	prmBranchCode VARCHAR(50),
	prmBKKNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCashTypeCode VARCHAR(50),	
	prmSuppliercode VARCHAR(50), 
	prmRefNo VARCHAR(50), 
	prmCurrencyCode VARCHAR(50),	
	prmExchangeRate Decimal(18,4),
	prmBKKTo VARCHAR(50),
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal(18,4), 
	prmDeleteStatus tinyint,
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE f505_AP SET
			BKKNo 				=	prmBKKNo, 
			TransactionDate 		=	prmTransactionDate, 
			CashTypeCode                    =       prmCashTypeCode,
			SupplierCode 			= 	prmSupplierCode,
			RefNo 				= 	prmRefno, 
			CurrencyCode 			= 	prmCurrencyCode,
			ExchangeRate 			= 	prmExchangeRate,
			BKKTo				=       prmBKKTo,
			Description 			=	prmDescription, 
			TotalTransactionAmount 		=	prmTotalTransactionAmount, 
			DeleteStatus  			=       prmDeleteStatus,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
		-- BranchCode 			= 	prmbranchCode 
		-- AND 
			BKKNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F505_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F505_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F505_delete`(
	prmBranchCode VARCHAR(50),
	prmBKKNo VARCHAR(50)
)
Begin
	Delete From F506
	WHERE  BKKNo = prmBKKNo;
	Delete From F505 
	WHERE  BKKNo = prmBKKNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F505_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F505_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F505_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmBKKNo varchar(50)
)
BEGIN
	Select 
		F505.BranchCode,
		F505.BKKNo,
		F505.TransactionDate,
		F505.CashTypeCode,
		f101.Name as CashTypeName,
		F505.SupplierCode,
		F109.Name as SupplierName,
		F109.ContactPerson as ContactPerson,
		F505.RefNo,
		F505.CurrencyCode,
		F006.Name As CurrencyName,
		F505.Exchangerate,
		F505.BKKTo,
		F505.TotalTransactionAmount,
		(F505.TotalTransactionAmount * F505.ExchangeRate) as TotalTransactionAmountLocal, 
		F505.Description,
		F505.DeleteStatus
	From 
	F505
		Left Join f101 On  F505.CashTypeCode = f101.Code
		INNER JOIN F109 on  F505.SupplierCode = F109.Code
		Inner Join F006 On F505.CurrencyCode = F006.Code
		
	Where 
F505.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		And F505.BKKNo like prmBKKNo
		And f505.BranchCode = prmBranchCode
	Order by F505.BKKNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F505_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F505_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F505_insert`(
	prmBranchCode VARCHAR(50),
	prmBKKNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCashTypeCode varchar(50),
	prmSupplierCode varchar(50),
	prmRefNo Varchar(100),
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal(18,4), 
	prmBKKTo VARCHAR(50), 	
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal(18,4),
	prmDeleteStatus tinyint(1),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F505 
		(
			BranchCode, 
			BKKNo, 
			TransactionDate, 
			CashTypeCode,
			SupplierCode,
			RefNo,
			CurrencyCode,
			Exchangerate,			
			BKKTo,			
			Description,			
			TotalTransactionAmount, 			
			DeleteStatus,
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
			prmBranchCode,
			prmBKKNo, 
			prmTransactionDate, 
			prmCashTypeCode,
			prmSupplierCode,
			prmRefNo,
			prmCurrencyCode, 
			prmExchangeRate,
			prmBKKTo,
			prmDescription, 
			prmTotalTransactionAmount,
			prmDeleteStatus,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F505_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F505_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F505_update`(
	prmBranchCode VARCHAR(50),
	prmBKKNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCashTypeCode VARCHAR(50),	
	prmSuppliercode VARCHAR(50), 
	prmRefNo VARCHAR(50), 
	prmCurrencyCode VARCHAR(50),	
	prmExchangeRate Decimal(18,4),
	prmBKKTo VARCHAR(50),
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal(18,4), 
	prmDeleteStatus tinyint,
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F505 SET
			BKKNo 				=	prmBKKNo, 
			TransactionDate 		=	prmTransactionDate, 
			CashTypeCode                    =       prmCashTypeCode,
			SupplierCode 			= 	prmSupplierCode,
			RefNo 				= 	prmRefno, 
			CurrencyCode 			= 	prmCurrencyCode,
			ExchangeRate 			= 	prmExchangeRate,
			BKKTo				=       prmBKKTo,
			Description 			=	prmDescription, 
			TotalTransactionAmount 		=	prmTotalTransactionAmount, 
			DeleteStatus  			=       prmDeleteStatus,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
		-- BranchCode 			= 	prmbranchCode 
		-- AND 
			BKKNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f506_AP_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f506_AP_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f506_AP_delete`(
	prmBranchCode VARCHAR(50),
	prmBKKNo VARCHAR(50)
)
BEGIN
		DELETE FROM f506_AP WHERE 
BKKNo = prmBKKNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f506_AP_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f506_AP_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f506_AP_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmBKKNo varchar(50)
)
BEGIN
	SELECT 
		-- f506_AP.BranchCode,
		f506_AP.BKKNo,
		f506_AP.BudgetTypeCode,
		-- F011.Name AS BudgetTypeName,
		f506_AP.DocumentNo,
		f506_AP.Description,
		f506_AP.Amount,
                (f506_AP.Amount * f505_AP.ExchangeRate)	AS AmountLocal,
		f506_AP.DPP_PPN_Status,
		F301.CurrencyCode AS CurrencyCode,
		F301.GrandTotal 				AS GrandTotalAmount, 
		(F301.GrandTotal * F301.ExchangeRate)	AS GrandTotalAmountLocal,
		F301.PaidAmount 			AS PaidAmount, 
		(F301.PaidAmount * F301.ExchangeRate) 	AS PaidAmountLocal,
		(F301.GrandTotal - F301.PaidAmount) AS Balance,
		(F301.GrandTotal - F301.PaidAmount)* F301.ExchangeRate AS BalanceLocal
	FROM 
		f506_AP
		LEFT JOIN F301 ON f506_AP.DocumentNo = F301.GRNNo	
		INNER JOIN f505_AP ON f506_AP.BKKNo = f505_AP.BKKNo			
	Where 	
f506_AP.BKKNo = prmBKKNo
	Order by BKKNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f506_AP_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f506_AP_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f506_AP_insert`(
	prmBranchCode VARCHAR(50), 
	prmBKKNo VARCHAR(50), 
	prmBudgetTypeCode VARCHAR(50), 
	prmDocumentNo varchar(50),
	prmDescription varchar(200), 
	prmAmount decimal(18,4), 
	prmDPP_PPN_Status enum('DPP','PPN','ALL'),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO f506_AP (
			BranchCode, 
			BKKNo, 
			BudgetTypeCode, 
			DocumentNo, 
			Description,
			Amount,	
			DPP_PPN_Status,
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode , 
			prmBKKNo, 
			prmBudgetTypeCode, 
			prmDocumentNo, 
			prmDescription, 
			prmAmount,
			prmDPP_PPN_Status,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F506_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F506_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F506_delete`(
	prmBranchCode VARCHAR(50),
	prmBKKNo VARCHAR(50)
)
BEGIN
		DELETE FROM F506 WHERE 
BKKNo = prmBKKNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F506_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F506_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F506_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmBKKNo varchar(50)
)
BEGIN
	SELECT 
		F506.BranchCode,
		F506.BKKNo,
		F506.BudgetTypeCode,
		f103.Name AS BudgetTypeName,
		F506.DocumentNo,
		F506.Description,
		F506.Amount,
                (F506.Amount * F505.ExchangeRate)	AS AmountLocal,
		F506.DPP_PPN_Status,
		-- F301.CurrencyCode AS CurrencyCode,
		F301.CurrencyCode AS CurrencyCode,
		F506.Amount 				AS GrandTotalAmount, 
		(F506.Amount)	AS GrandTotalAmountLocal,
		F301.PaidAmount 			AS PaidAmount, 
		(F301.PaidAmount * F301.ExchangeRate) 	AS PaidAmountLocal,
		(F301.GrandTotal - F301.PaidAmount) AS Balance,
		(F301.GrandTotal - F301.PaidAmount)* F301.ExchangeRate AS BalanceLocal
	FROM 
		F506
		INNER JOIN f103 ON F506.BudgetTypeCode = f103.Code
		LEFT JOIN F506_ap ON F506.DocumentNo = F506_ap.BKKNo	
		LEFT JOIN f301 ON F506_ap.DocumentNo= f301.GRNNo
		INNER JOIN F505 ON F506.BKKNo = F505.BKKNo		
	Where 	
F506.BKKNo = prmBKKNo
GROUP BY BKKNo
	Order by BKKNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F506_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F506_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F506_insert`(
	prmBranchCode VARCHAR(50), 
	prmBKKNo VARCHAR(50), 
	prmBudgetTypeCode VARCHAR(50), 
	prmDocumentNo varchar(50),
	prmDescription varchar(200), 
	prmAmount decimal(18,4), 
	prmDPP_PPN_Status enum('DPP','PPN','ALL'),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F506 (
			BranchCode, 
			BKKNo, 
			BudgetTypeCode, 
			DocumentNo, 
			Description,
			Amount,	
			DPP_PPN_Status,
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode , 
			prmBKKNo, 
			prmBudgetTypeCode, 
			prmDocumentNo, 
			prmDescription, 
			prmAmount,
			prmDPP_PPN_Status,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F507_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F507_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F507_delete`(
	prmBranchCode VARCHAR(50),
	prmBBKNo VARCHAR(50)
)
Begin
	Delete From F508
	WHERE  BBKNo = prmBBKNo;
	Delete From F507 
	WHERE  BBKNo = prmBBKNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F507_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F507_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F507_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmBBKNo varchar(50)
)
BEGIN
	Select 
		F507.BranchCode,
		F507.BBKNo,
		F507.TransactionDate,
		F507.SupplierCode,
		F109.Name as SupplierName,
		F109.ContactPerson as ContactPerson,
		F507.BankAccountCode,
		f101.Name as BankAccountName,
		F507.BBKTo,	
		F507.RefNo,
		F507.Description,
		F507.CurrencyCode,
		F006.Name As CurrencyName,
		F507.Exchangerate,		
		F507.TotalTransactionAmount,
		(F507.TotalTransactionAmount * F507.ExchangeRate) as TotalTransactionAmountLocal, 		
		F507.PaymentType,
		F507.GiroNo,
		F507.GiroDueDate,		
		F507.GiroStatus,
		F507.GiroClearanceDate,
		F507.TransferNo,
		F507.TransferDate,
		F507.OtherRefNo,
		F507.OtherDate,
		F507.DeleteStatus
	From 
	F507
		Inner Join f101 On F507.BankAccountCode = f101.Code
		INNER JOIN F109 on F507.SupplierCode = F109.Code
		Inner Join F006 On F507.CurrencyCode = F006.Code
		
	Where 
F507.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		And F507.BBKNo like prmBBKNo
		And f507.BranchCode = prmBranchCode
	Order by F507.BBKNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F507_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F507_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F507_insert`(
	prmBranchCode VARCHAR(50),
	prmBBKNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmSupplierCode varchar(50),
	prmBankAccountCode varchar(50),	
	prmBBKTo VARCHAR(50), 
	prmRefNo Varchar(100),
	prmDescription TEXT,	
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal(18,4), 		
	prmTotalTransactionAmount Decimal(18,4),
	prmPaymentType varchar(1),
	prmGiroNo Varchar(50),
	prmGiroDueDate datetime,	
	prmGiroStatus varchar(1),
	prmGiroClearanceDate datetime,
	prmTransferNo varchar(50),
	prmTransferDate datetime,
	prmOtherRefNo varchar(50),
	prmOtherDate datetime,
	prmDeleteStatus tinyint(1),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F507 
		(
			BranchCode, 
			BBKNo, 
			TransactionDate, 
			SupplierCode,
			BankAccountCode,
			BBKTo,
			RefNo,
			Description,
			CurrencyCode,
			Exchangerate,
			TotalTransactionAmount, 
			PaymentType,
			GiroNo,
			GiroDueDate,			
			GiroStatus,
			GiroClearanceDate,
			TransferNo,
			TransferDate,
			OtherRefNo,
			OtherDate,
			DeleteStatus,
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
		prmBranchCode,
		prmBBKNo, 
		prmTransactionDate, 
		prmSupplierCode,
		prmBankAccountCode,	
		prmBBKTo, 
		prmRefNo,
		prmDescription,	
		prmCurrencyCode, 
		prmExchangeRate, 		
		prmTotalTransactionAmount,
		prmPaymentType,
		prmGiroNo,
		prmGiroDueDate,		
		prmGiroStatus,
		prmGiroClearanceDate,
		prmTransferNo,
		prmTransferDate,
		prmOtherRefNo,
		prmOtherDate,
		prmDeleteStatus,
		prmCreatedBy,	
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F507_Search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F507_Search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F507_Search`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmFromDueDate datetime,
   IN prmToDueDate datetime,
   IN prmSupplierCode varchar(50),
   -- IN prmBankName varchar(100),
   IN prmGiroNo varchar(50),	
   IN prmBBKNo varchar(50),
   IN prmGiroStatus varchar(100),
   IN prmFromTotalTransactionAmount decimal(18,4),
   IN prmToTotalTransactionAmount decimal(18,4)
)
BEGIN
	CALL usp_string_to_mysqlrow(prmGiroStatus, ",");
	Select 
		F507.BranchCode,
		F507.BBKNo,
		F507.TransactionDate,
		F507.SupplierCode,
		F109.Name as SupplierName,
		F109.ContactPerson as ContactPerson,
		F507.BankAccountCode,
		F101.Name as BankAccountName,
		F507.BBKTo,	
		F507.RefNo,
		F507.Description,
		F507.CurrencyCode,
		F006.Name As CurrencyName,
		F507.Exchangerate,		
		F507.TotalTransactionAmount,
		(F507.TotalTransactionAmount * F507.ExchangeRate) as TotalTransactionAmountLocal, 		
		F507.PaymentType,
		F507.GiroNo,
		F507.GiroDueDate,
		-- F507.BankName,
		F507.GiroStatus,
		F507.GiroClearanceDate,
		F507.TransferNo,
		F507.TransferDate,
		F507.OtherRefNo,
		F507.OtherDate,
		F507.DeleteStatus
	From 
	F507
		left Join F101 On  F507.BankAccountCode = F101.Code
		INNER JOIN F109 on  F507.SupplierCode = F109.Code
		Inner Join F006 On F507.CurrencyCode = F006.Code
		
	Where 
		-- F507.BranchCode = prmBranchCode AND 
		F507.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		and F507.GiroDueDate between prmFromDueDate and prmToDueDate
		and F507.SupplierCode like prmSupplierCode
		-- and F507.BankName like prmBankName
		and F507.GiroNo like prmGiroNo
		And F507.BBKNo like prmBBKNo
		and F507.GiroStatus IN (SELECT * FROM Temp_SplitString)
		and F507.PaymentType = "G"
		AND F507.TotalTransactionAmount between prmFromTotalTransactionAmount and prmToTotalTransactionAmount
			Order by F507.BBKNo desc;
	DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F507_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F507_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F507_update`(
	prmBranchCode VARCHAR(50),
	prmBBKNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmSupplierCode varchar(50),
	prmBankAccountCode varchar(50),	
	prmBBKTo VARCHAR(50), 
	prmRefNo Varchar(100),
	prmDescription TEXT,	
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal(18,4), 		
	prmTotalTransactionAmount Decimal(18,4),
	prmPaymentType varchar(1),
	prmGiroNo Varchar(50),
	prmGiroDueDate datetime,
	prmGiroStatus varchar(1),
	prmGiroClearanceDate datetime,
	prmTransferNo varchar(50),
	prmTransferDate datetime,
	prmOtherRefNo varchar(50),
	prmOtherDate datetime,
	prmDeleteStatus tinyint(1),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F507 SET
			BranchCode	 		= prmBranchCode, 
			-- BBKNo 				= prmBBKNo, 
			TransactionDate			= prmTransactionDate, 
			SupplierCode 			= prmSupplierCode,
			BankAccountCode 		= prmBankAccountCode,
			BBKTo 			        = prmBBKTo,
			RefNo 				= prmRefNo,
			Description 			= prmDescription,
			CurrencyCode 			= prmCurrencyCode,
			Exchangerate 			= prmExchangerate,
			TotalTransactionAmount 		= prmTotalTransactionAmount, 
			PaymentType 			= prmPaymentType,
			GiroNo 				= prmGiroNo,
			GiroDueDate 			= prmGiroDueDate,			
			GiroStatus 			= prmGiroStatus,
			GiroClearanceDate 		= prmGiroClearanceDate,
			TransferNo 			= prmTransferNo,
			TransferDate 			= prmTransferDate,
			OtherRefNo 			= prmOtherRefNo,
			OtherDate 			= prmOtherDate,
			DeleteStatus 			= prmDeleteStatus,
			UpdatedBy 			=prmUpdatedBy, 
			UpdatedDate			=now()
		WHERE
			-- BranchCode 			= 	prmbranchCode 
			-- AND 
			BBKNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F507_Update_GiroStatus` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F507_Update_GiroStatus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F507_Update_GiroStatus`(
	prmBranchCode VARCHAR(50),
	prmBBKNo VARCHAR(50), 	
	-- prmBankAccountCode varchar(50),	
	prmGiroClearanceDate datetime,
	prmGiroStatus VARCHAR(1),
	prmUpdatedBy VARCHAR(50)
)
BEGIN
		UPDATE F507 SET			
			-- BankAccountCode 		= prmBankAccountCode,
			GiroStatus 			= prmGiroStatus,
			GiroClearanceDate 		= prmGiroClearanceDate,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			-- BranchCode 			= 	prmbranchCode AND 
			BBKNo 				= 	prmBBKNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F508_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F508_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F508_delete`(
	prmBranchCode VARCHAR(50),
	prmBBKNo VARCHAR(50)
)
BEGIN
		DELETE FROM F508 WHERE
	        -- BranchCode = prmBranchCode AND 
		BBKNo = prmBBKNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F508_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F508_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F508_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmBBKNo varchar(50)
)
BEGIN
	Select 
		F508.BranchCode,
		F508.BBKNo,
		F508.BudgetTypeCode,
		f103.Name as BudgetTypeName,
		f103.AccountCode as AccountCode,
		F508.DocumentNo,
		F508.Description,
		F508.Amount,
                (F508.Amount * F507.ExchangeRate)	as AmountLocal,
		F508.DPP_PPN_Status,
		F301.CurrencyCode as CurrencyCode,
		F508.Amount 				as GrandTotalAmount, 
		(F508.Amount)	as GrandTotalAmountLocal,
		F301.PaidAmount 			as PaidAmount, 
		(F301.PaidAmount * F301.ExchangeRate) 	as PaidAmountLocal,
		(F301.GrandTotal - F301.PaidAmount) as Balance,
		(F301.GrandTotal - F301.PaidAmount)* F301.ExchangeRate as BalanceLocal
	From 
		F508
		left Join f103 On F508.BudgetTypeCode = f103.Code
		LEFT JOIN F506_ap ON F508.DocumentNo = F506_ap.BKKNo	
		LEFT JOIN f301 ON F506_ap.DocumentNo= f301.GRNNo	
		Inner Join F507 on F508.BBKNo = F507.BBKNo		
	Where 	
		-- F508.BranchCode = prmBranchCode And 
		F508.BBKNo = prmBBKNo
	Order by BBKNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F508_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F508_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F508_insert`(
	prmBranchCode VARCHAR(50), 
	prmBBKNo VARCHAR(50), 
	prmBudgetTypeCode VARCHAR(50), 
	prmDocumentNo varchar(50),
	prmDescription varchar(200), 
	prmAmount decimal(18,4), 
	prmDPP_PPN_Status enum('DPP','PPN','ALL'),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F508 (
			BranchCode, 
			BBKNo, 
			BudgetTypeCode, 
			DocumentNo, 
			Description,
			Amount,	
			DPP_PPN_Status,
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode , 
			prmBBKNo, 
			prmBudgetTypeCode, 
			prmDocumentNo, 
			prmDescription, 
			prmAmount,
			prmDPP_PPN_Status,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F515_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F515_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F515_delete`(
	prmBranchCode VARCHAR(50),
	prmCDPNo VARCHAR(50)
)
Begin
	Delete From F517
	WHERE  CDPNo = prmCDPNo;
	Delete From F518 
	WHERE  CDPNo = prmCDPNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F515_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F515_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F515_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmCDPNo varchar(50)
)
BEGIN
	Select 
		F515.BranchCode,
		F515.CDPNo,
		F515.TransactionDate,
		F515.CurrencyCode,
		F006.Name As CurrencyName,
		F515.Exchangerate,
		F515.CustomerCode,
		F106.Name as CustomerName,
		F106.ContactPerson as ContactPerson,
		F515.CustomerNameAlias,
		F515.RefNo,	
		F515.AccountType,
		F515.TotalTransactionAmount,
		(F515.TotalTransactionAmount * F515.ExchangeRate) as TotalTransactionAmountLocal, 
		F515.PaidAmount,
		F515.SettlementDate,
		F515.SettlementDocumentNo
	From 
	F515		
		INNER JOIN F106 on  F515.CustomerCode = F106.Code
		Inner Join F006 On F515.CurrencyCode = F006.Code
		
	Where 
		-- F515.BranchCode = prmBranchCode AND 
		F515.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		And F515.CDPNo like prmCDPNo
	Order by F515.CDPNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F515_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F515_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F515_insert`(
	prmBranchCode VARCHAR(50),
	prmCDPNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCurrencyCode VARCHAR(50),
	prmExchangeRate Decimal, 
	prmCustomerCode varchar(50),	
	prmCustomerNameAlias Varchar(100),	
	prmRefNo Varchar(100),
	prmAccountType varchar(1),
	prmTotalTransactionAmount Decimal(18,4),	
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F515 
		(
			BranchCode, 
			CDPNo, 
			TransactionDate,
			CurrencyCode,
			Exchangerate,	
			CustomerCode,
			CustomerNameAlias,
			RefNo,	
			AccountType,
			TotalTransactionAmount, 
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
			prmBranchCode,
			prmCDPNo, 
			prmTransactionDate, 
			prmCurrencyCode,
			prmExchangeRate, 
			prmCustomerCode,	
			prmCustomerNameAlias,	
			prmRefNo,
			prmAccountType,
			prmTotalTransactionAmount,	
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F515_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F515_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F515_update`(
	prmBranchCode VARCHAR(50),
	prmCDPNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCurrencyCode VARCHAR(50),	
	prmExchangeRate Decimal,
	prmCustomercode VARCHAR(50), 
	prmCustomerNameAlias varchar(100),
	prmRefNo VARCHAR(100), 	
	prmAccountType varchar(1),
	prmTotalTransactionAmount Decimal(18,4), 	
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F515 SET
			CDPNo 				=	prmCDPNo, 
			TransactionDate 		=	prmTransactionDate, 
			CurrencyCode 			= 	prmCurrencyCode,
			ExchangeRate 			= 	prmExchangeRate,
			CustomerCode 			= 	prmCustomerCode,
			CustomerNameAlias               = 	prmCustomerNameAlias,
			RefNo 				= 	prmRefno, 
			AccountType                     =       prmAccountType,
			TotalTransactionAmount 		=	prmTotalTransactionAmount, 
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			-- BranchCode 			= 	prmbranchCode AND 
			CDPNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F515_Update_PaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F515_Update_PaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F515_Update_PaidAmount`(
        prmCDPNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount decimal(18,4)
)
BEGIN
		UPDATE F515 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F502 prmPaidAmount 
					where BranchCode=prmBranchCode and BKMNo=prmBuktiNo 
				     and DocumentNo=prmCDPNo),0) + 
				     prmPaidAmount 
		WHERE 
			BranchCode = prmBranchCode AND CDPNo = prmCDPNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F515_Update_PaidAmount_F504` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F515_Update_PaidAmount_F504` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F515_Update_PaidAmount_F504`(
        prmCDPNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F515 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F504 prmPaidAmount 
					where BranchCode=prmBranchCode and BBMNo=prmBuktiNo 
				     and DocumentNo=prmCDPNo),0) + 
				     prmPaidAmount 
		WHERE 
			BranchCode = prmBranchCode AND CDPNo = prmCDPNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F515_Update_PaidAmount_F520` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F515_Update_PaidAmount_F520` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F515_Update_PaidAmount_F520`(
        prmCDPNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F515 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F520 prmPaidAmount 
					where BranchCode=prmBranchCode and GJMNo=prmBuktiNo 
				     and DocumentNo=prmCDPNo),0) + 
				     prmPaidAmount 
		WHERE 
			BranchCode = prmBranchCode AND CDPNo = prmCDPNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F516_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F516_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F516_delete`(
	prmBranchCode VARCHAR(50),
	prmCDPNo VARCHAR(50)
)
BEGIN
		DELETE FROM F516 WHERE 
		-- BranchCode = prmBranchCode AND 
		CDPNo = prmCDPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F516_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F516_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F516_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmCDPNo varchar(50)
)
BEGIN
	Select 
		F516.BranchCode,
		F516.CDPNo,
		F516.CDPDescription,
		F516.Amount,				
                (F516.Amount * F515.ExchangeRate)	as AmountLocal	
	From 
		F516		
		Inner Join F515 on F516.CDPNo = F515.CDPNo		
		-- INNER JOIN F611 on F516.BranchCode   = F611.BranchCode and F516.DocumentNo = F611.SRTNo
		-- INNER JOIN F515 on F516.BranchCode   = F515.BranchCode and F516.DocumentNo = F515.CDPNo
	Where 	
		-- F516.BranchCode = prmBranchCode And 
		F516.CDPNo = prmCDPNo
	Order by CDPNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F516_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F516_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F516_insert`(
	prmBranchCode VARCHAR(50), 
	prmCDPNo VARCHAR(50), 	
	prmCDPDescription varchar(200), 
	prmAmount decimal, 
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F516 (
			BranchCode, 
			CDPNo, 			
			CDPDescription,
			Amount,			
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode , 
			prmCDPNo, 			
			prmCDPDescription, 
			prmAmount,			
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F517_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F517_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F517_delete`(
	prmBranchCode VARCHAR(50),
	prmSDPNo VARCHAR(50)
)
Begin
	Delete From F517
	WHERE SDPNo = prmSDPNo;
	Delete From F518 
	WHERE SDPNo = prmSDPNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F517_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F517_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F517_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmSDPNo varchar(50)
)
BEGIN
	Select 
		F517.BranchCode,
		F517.SDPNo,
		F517.TransactionDate,
		F517.CurrencyCode,
		F006.Name As CurrencyName,
		F517.Exchangerate,
		F517.SupplierCode,
		F109.Name as SupplierName,
		F109.ContactPerson as ContactPerson,		
		F517.SupplierNameAlias,
		F517.RefNo,	
		F517.AccountType,
		F517.TotalTransactionAmount,
		(F517.TotalTransactionAmount * F517.ExchangeRate) as TotalTransactionAmountLocal, 
		F517.PaidAmount,
		F517.SettlementDate,
		F517.SettlementDocumentNo
	From 
	F517		
		INNER JOIN F109 on  F517.SupplierCode = F109.Code
		Inner Join F006 On F517.CurrencyCode = F006.Code
		
	Where 
		-- F517.BranchCode = prmBranchCode AND 
		F517.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		And F517.SDPNo like prmSDPNo
	Order by F517.SDPNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F517_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F517_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F517_insert`(
	prmBranchCode VARCHAR(50),
	prmSDPNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCurrencyCode VARCHAR(50),
	prmExchangeRate Decimal, 
	prmSupplierCode varchar(50),	
	prmSupplierNameAlias Varchar(100),	
	prmRefNo Varchar(100),
	prmAccountType varchar(1),
	prmTotalTransactionAmount Decimal(18,4),	
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F517 
		(
			BranchCode, 
			SDPNo, 
			TransactionDate,
			CurrencyCode,
			Exchangerate,	
			SupplierCode,
			SupplierNameAlias,
			RefNo,	
			AccountType,
			TotalTransactionAmount, 
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
			prmBranchCode,
			prmSDPNo, 
			prmTransactionDate, 
			prmCurrencyCode,
			prmExchangeRate, 
			prmSupplierCode,	
			prmSupplierNameAlias,	
			prmRefNo,
			prmAccountType,
			prmTotalTransactionAmount,	
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F517_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F517_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F517_update`(
	prmBranchCode VARCHAR(50),
	prmSDPNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmCurrencyCode VARCHAR(50),	
	prmExchangeRate Decimal,
	prmSuppliercode VARCHAR(50), 
	prmSupplierNameAlias varchar(100),
	prmRefNo VARCHAR(100), 	
	prmAccountType varchar(1),
	prmTotalTransactionAmount Decimal(18,4), 	
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F517 SET
			SDPNo 				=	prmSDPNo, 
			TransactionDate 		=	prmTransactionDate, 
			CurrencyCode 			= 	prmCurrencyCode,
			ExchangeRate 			= 	prmExchangeRate,
			SupplierCode 			= 	prmSupplierCode,
			SupplierNameAlias               = 	prmSupplierNameAlias,
			RefNo 				= 	prmRefno, 
			AccountType                     =       prmAccountType,
			TotalTransactionAmount 		=	prmTotalTransactionAmount, 
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			-- BranchCode 			= 	prmbranchCode AND 
			SDPNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F517_Update_PaidAmount_F520` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F517_Update_PaidAmount_F520` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F517_Update_PaidAmount_F520`(
        prmSDPNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F517 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F520 prmPaidAmount 
					where BranchCode=prmBranchCode and GJMNo=prmBuktiNo 
				     and DocumentNo=prmSDPNo),0) + 
				     prmPaidAmount 
		WHERE 
			BranchCode = prmBranchCode AND SDPNo = prmSDPNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F518_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F518_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F518_delete`(
	prmBranchCode VARCHAR(50),
	prmSDPNo VARCHAR(50)
)
BEGIN
		DELETE FROM F518 WHERE 
		-- BranchCode = prmBranchCode AND 
		SDPNo = prmSDPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F518_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F518_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F518_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmSDPNo varchar(50)
)
BEGIN
	Select 
		F518.BranchCode,
		F518.SDPNo,
		F518.SDPDescription,
		F518.Amount,				
                (F518.Amount * F517.ExchangeRate)	as AmountLocal	
	From 
		F518		
		Inner Join F517 on F518.SDPNo = F517.SDPNo		
		-- INNER JOIN F611 on F518.BranchCode   = F611.BranchCode and F518.DocumentNo = F611.SRTNo
		-- INNER JOIN F517 on F518.BranchCode   = F517.BranchCode and F518.DocumentNo = F517.SDPNo
	Where 	
		-- F518.BranchCode = prmBranchCode And 
		F518.SDPNo = prmSDPNo
	Order by SDPNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F518_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F518_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F518_insert`(
	prmBranchCode VARCHAR(50), 
	prmSDPNo VARCHAR(50), 	
	prmSDPDescription varchar(200), 
	prmAmount decimal, 
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F518 (
			BranchCode, 
			SDPNo, 			
			SDPDescription,
			Amount,			
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode , 
			prmSDPNo, 			
			prmSDPDescription, 
			prmAmount,			
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F519_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F519_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F519_delete`(
	prmBranchCode VARCHAR(50),
	prmGJMNo VARCHAR(50)
)
Begin
	Delete From F520
	WHERE  GJMNo = prmGJMNo;
	Delete From F519 
	WHERE  GJMNo = prmGJMNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F519_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F519_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F519_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate DATETIME,
   IN prmLastDate DATETIME,
   IN prmGJMNo VARCHAR(50)
)
BEGIN
	SELECT Distinct
		F519.BranchCode,
		f519.COA,
		b.Name AS AccountName,
		b.AccountCode AS AccountCode,
		F519.GJMNo,
		f519.CBType,
		F519.TransactionDate,		
		F519.RefNo,
		F519.CurrencyCode,
		F006.Name AS CurrencyName,
		F519.Exchangerate,
		F519.TotalTransactionAmount,
		(F519.TotalTransactionAmount * F519.ExchangeRate) AS TotalTransactionAmountLocal, 
		F519.Description
	FROM 
	F519		
		INNER JOIN F006 ON F519.CurrencyCode = F006.Code
		INNER JOIN 
		(SELECT Qry1.Code,Qry1.Name,Qry1.AccountCode FROM (
		SELECT CODE,NAME,AccountCode FROM f104
		UNION ALL
		SELECT CODE,NAME,AccountCode FROM F103
		) AS Qry1) b
		 ON f519.COA = b.Code
		
	WHERE 
		F519.BranchCode = prmBranchCode AND 
		F519.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		AND F519.GJMNo LIKE prmGJMNo
	ORDER BY F519.GJMNo DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F519_getReport` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F519_getReport` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F519_getReport`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate DATETIME,
   IN prmLastDate DATETIME
)
BEGIN
	SELECT 
		F519.BranchCode,
		f519.COA,
		F519.GJMNo,
		f519.CBType,
		F519.TransactionDate,		
		(F519.TotalTransactionAmount * F519.ExchangeRate) AS TotalTransactionAmountLocal, 
		F519.Description
	FROM 
	F519		
	WHERE 
		F519.BranchCode = prmBranchCode AND 
		F519.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	ORDER BY F519.TransactionDate ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F519_getSaldoDebit` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F519_getSaldoDebit` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F519_getSaldoDebit`(
   IN prmBranchCode VARCHAR(50),
   IN prmDate DATETIME
)
BEGIN
	SELECT 
		Sum(F519.TotalTransactionAmount * F519.ExchangeRate) as total_Debit
	FROM 
	F519		
		
	WHERE 
		F519.BranchCode = prmBranchCode AND 
		F519.TransactionDate < prmDate AND 		 
		F519.CBType = 'P';
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F519_getSaldoKredit` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F519_getSaldoKredit` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F519_getSaldoKredit`(
   IN prmBranchCode VARCHAR(50),
   IN prmDate DATETIME
)
BEGIN
	SELECT 
		Sum(F519.TotalTransactionAmount * F519.ExchangeRate) as total_kredit
	FROM 
	F519		
		
	WHERE 
		F519.BranchCode = prmBranchCode AND 
		F519.TransactionDate < prmDate AND 		 
		F519.CBType = 'R';
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F519_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F519_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F519_insert`(
	prmBranchCode VARCHAR(50),
	prmCOA VARCHAR(50),
	prmGJMNo VARCHAR(50), 
	prmCBType VARCHAR(50), 
	prmTransactionDate DATETIME, 	
	prmRefNo VARCHAR(100),
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate DECIMAL, 		
	prmDescription TEXT, 
	prmTotalTransactionAmount DECIMAL,	
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F519 
		(
			BranchCode,
			COA, 
			GJMNo, 
			CBType,
			TransactionDate, 			
			RefNo,
			CurrencyCode,
			Exchangerate,	
			Description,			
			TotalTransactionAmount, 
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
			prmBranchCode,
			prmCOA,
			prmGJMNo, 
			prmCBType,
			prmTransactionDate, 
			prmRefNo,
			prmCurrencyCode, 
			prmExchangeRate,
			prmDescription, 
			prmTotalTransactionAmount,			
			prmCreatedBy,
			NOW()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F519_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F519_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F519_update`(
	prmBranchCode VARCHAR(50),
	prmCOA VARCHAR(50),
	prmGJMNo VARCHAR(50), 
	prmCBType VARCHAR(50), 
	prmTransactionDate DATETIME, 
	prmRefNo VARCHAR(50), 
	prmCurrencyCode VARCHAR(50),	
	prmExchangeRate DECIMAL,
	prmDescription TEXT, 
	prmTotalTransactionAmount DECIMAL, 
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F519 SET
			COA 				= 	prmCOA,
			GJMNo 				=	prmGJMNo, 
			CBType= prmCBType,
			TransactionDate 		=	prmTransactionDate, 
			RefNo 				= 	prmRefno, 
			CurrencyCode 			= 	prmCurrencyCode,
			ExchangeRate 			= 	prmExchangeRate,
			Description 			=	prmDescription, 
			TotalTransactionAmount 		=	prmTotalTransactionAmount, 
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	NOW()
		WHERE
			-- BranchCode 			= 	prmbranchCode AND 
			GJMNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F520_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F520_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F520_delete`(
	prmBranchCode VARCHAR(50),
	prmGJMNo VARCHAR(50)
)
BEGIN
		DELETE FROM F520 WHERE 
		-- BranchCode = prmBranchCode AND 
		GJMNo = prmGJMNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F520_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F520_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F520_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmGJMNo varchar(50)
)
BEGIN
SELECT 
		'GJM' AS TransactionType,
		F520.BranchCode,
		F520.GJMNo,
		F520.BudgetTypeCode,
		F101.Name AS BudgetTypeName,
		F520.DocumentNo,
		F520.GJMDescription,
		F520.Amount,
                (F520.Amount * F519.ExchangeRate)	AS AmountLocal	
	FROM 
		F520
		INNER JOIN F101 ON F520.BudgetTypeCode = F101.Code
		-- INNER JOIN F607 ON F520.DocumentNo = F607.INVNo	
		INNER JOIN F519 ON F520.GJMNo = F519.GJMNo
	WHERE 	
		-- F520.BranchCode = prmBranchCode And 
		F520.GJMNo = prmGJMNo
	Order by GJMNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F520_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F520_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F520_insert`(
	prmBranchCode VARCHAR(50), 
	prmGJMNo VARCHAR(50), 
	prmBudgetTypeCode VARCHAR(50), 
	prmDocumentNo varchar(50),
	prmGJMDescription varchar(200), 
	prmAmount decimal, 
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F520 (
			BranchCode, 
			GJMNo, 
			BudgetTypeCode, 
			DocumentNo, 
			GJMDescription,
			Amount,			
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode , 
			prmGJMNo, 
			prmBudgetTypeCode, 
			prmDocumentNo, 
			prmGJMDescription, 
			prmAmount,			
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F521_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F521_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F521_Delete`( 
    IN prmBranchCode VARCHAR(50), IN prmCDPNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F521 
  WHERE F521.BranchCode = prmBranchCode AND F521.CDPNo = prmCDPNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F521_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F521_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F521_Get`(IN prmBranchCode VARCHAR(50), IN prmCDPNo VARCHAR(50))
BEGIN 
 SELECT 
    F521.BranchCode, 
    F521.CDPNo, 
    F521.BKMNo,
    F501.CashTypeCode AS CashTypeCode,  
    F104.Name as CashTypeName,	
    F501.TransactionDate As BKMDate, 
    F501.TotalTransactionAmount As TotalTransactionAmount,
    (F501.TotalTransactionAmount * F501.ExchangeRate) As TotalTransactionAmountLocal,
    F502.BudgetTypeCode as BudgetTypeCode,
    F011.Name as BudgetTypeName,	
    F521.CreatedBy, 
    F521.CreatedDate, 
    F521.UpdatedBy, 
    F521.UpdatedDate
FROM F521
INNER JOIN F501 ON F501.BKMNo = F521.BKMNo  
inner join f502 on F501.BKMNo = F502.BKMNo
Inner Join F104 On  F501.CashTypeCode = F104.Code
Inner Join F011 On F502.BudgetTypeCode = F011.Code
WHERE F521.BranchCode = prmBranchCode AND F521.CDPNo = prmCDPNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F521_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F521_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F521_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmCDPNo VARCHAR(50), 
    IN prmBKMNo VARCHAR(50), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F521 ( 
    F521.BranchCode, 
    F521.CDPNo, 
    F521.BKMNo, 
    F521.CreatedBy, 
    F521.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmCDPNo, 
    prmBKMNo, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F522_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F522_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F522_Delete`( 
    IN prmBranchCode VARCHAR(50), IN prmCDPNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F522 
  WHERE F522.BranchCode = prmBranchCode AND F522.CDPNo = prmCDPNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F522_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F522_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F522_Get`(IN prmBranchCode VARCHAR(50), IN prmCDPNo VARCHAR(50))
BEGIN 
  SELECT 
    F522.BranchCode, 
    F522.CDPNo, 
    F522.BBMNo,
    F503.BankAccountCode as BankAccountCode,
    F103.Name as BankAccountName,
    F503.PaymentType as PaymentType,
    F503.TransferDate as TransferDate,
    F503.BankName as BankName,
    F503.RefNo as RefNo,
    F503.TransactionDate As BBMDate, 
    F503.TotalTransactionAmount As TotalTransactionAmount,
    (F503.TotalTransactionAmount * F503.ExchangeRate) As TotalTransactionAmountLocal,
    F504.BudgetTypeCode as BudgetTypeCode,
    F011.Name as BudgetTypeName,
    F522.CreatedBy, 
    F522.CreatedDate, 
    F522.UpdatedBy, 
    F522.UpdatedDate
FROM F522
INNER JOIN F503 ON F503.BBMNo = F522.BBMNo
inner join f504 on F503.BBMNo = F504.BBMNo
Inner Join F103 On  F503.BankAccountCode = F103.Code
Inner Join F011 On F504.BudgetTypeCode = F011.Code
WHERE F522.BranchCode = prmBranchCode AND F522.CDPNo = prmCDPNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F522_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F522_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F522_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmCDPNo VARCHAR(50), 
    IN prmBBMNo VARCHAR(50), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F522 ( 
    F522.BranchCode, 
    F522.CDPNo, 
    F522.BBMNo, 
    F522.CreatedBy, 
    F522.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmCDPNo, 
    prmBBMNo, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F523_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F523_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F523_Delete`( 
    IN prmBranchCode VARCHAR(50), IN prmSDPNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F523 
  WHERE F523.BranchCode = prmBranchCode AND F523.SDPNo = prmSDPNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F523_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F523_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F523_Get`(IN prmBranchCode VARCHAR(50), IN prmSDPNo VARCHAR(50))
BEGIN 
 SELECT 
    F523.BranchCode, 
    F523.SDPNo, 
    F523.BKKNo,
    F501.CashTypeCode AS CashTypeCode,  
    F104.Name as CashTypeName,	
    F501.TransactionDate As BKKDate, 
    F501.TotalTransactionAmount As TotalTransactionAmount,
    (F501.TotalTransactionAmount * F501.ExchangeRate) As TotalTransactionAmountLocal,
    F502.BudgetTypeCode as BudgetTypeCode,
    F011.Name as BudgetTypeName,	
    F523.CreatedBy, 
    F523.CreatedDate, 
    F523.UpdatedBy, 
    F523.UpdatedDate
FROM F523
INNER JOIN F501 ON F501.BKKNo = F523.BKKNo  
inner join f502 on F501.BKKNo = F502.BKKNo
Inner Join F104 On  F501.CashTypeCode = F104.Code
Inner Join F011 On F502.BudgetTypeCode = F011.Code
WHERE F523.BranchCode = prmBranchCode AND F523.SDPNo = prmSDPNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F523_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F523_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F523_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmSDPNo VARCHAR(50), 
    IN prmBKKNo VARCHAR(50), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F523 ( 
    F523.BranchCode, 
    F523.SDPNo, 
    F523.BKKNo, 
    F523.CreatedBy, 
    F523.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmSDPNo, 
    prmBKKNo, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F524_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F524_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F524_Delete`( 
    IN prmBranchCode VARCHAR(50), IN prmSDPNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F524 
  WHERE F524.BranchCode = prmBranchCode AND F524.SDPNo = prmSDPNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F524_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F524_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F524_Get`(IN prmBranchCode VARCHAR(50), IN prmSDPNo VARCHAR(50))
BEGIN 
  SELECT 
    F524.BranchCode, 
    F524.SDPNo, 
    F524.BBKNo,
    F503.BankAccountCode as BankAccountCode,
    F103.Name as BankAccountName,
    F503.PaymentType as PaymentType,
    F503.TransferDate as TransferDate,
    F503.BankName as BankName,
    F503.RefNo as RefNo,
    F503.TransactionDate As BBKDate, 
    F503.TotalTransactionAmount As TotalTransactionAmount,
    (F503.TotalTransactionAmount * F503.ExchangeRate) As TotalTransactionAmountLocal,
    F504.BudgetTypeCode as BudgetTypeCode,
    F011.Name as BudgetTypeName,
    F524.CreatedBy, 
    F524.CreatedDate, 
    F524.UpdatedBy, 
    F524.UpdatedDate
FROM F524
INNER JOIN F503 ON F503.BBKNo = F524.BBKNo
inner join f504 on F503.BBKNo = F504.BBKNo
Inner Join F103 On  F503.BankAccountCode = F103.Code
Inner Join F011 On F504.BudgetTypeCode = F011.Code
WHERE F524.BranchCode = prmBranchCode AND F524.SDPNo = prmSDPNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F524_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F524_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F524_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmSDPNo VARCHAR(50), 
    IN prmBBKNo VARCHAR(50), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F524 ( 
    F524.BranchCode, 
    F524.SDPNo, 
    F524.BBKNo, 
    F524.CreatedBy, 
    F524.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmSDPNo, 
    prmBBKNo, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F531_update_PaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F531_update_PaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F531_update_PaidAmount`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmKodeCabang varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F531 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F502 prmPaidAmount 
					where KodeCabang=prmKodeCabang and BKMNo=prmBuktiNo 
				     and DocumentNo=prmINVNo),0) + 
				     prmPaidAmount 
		WHERE 
			KodeCabang = prmKodeCabang AND INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F603_Closing` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F603_Closing` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F603_Closing`(
	prmBranchCode VARCHAR(50),
	prmSODNo VARCHAR(50),
	prmClosingDate DateTime,
	prmClosingStatus Boolean,
	prmUpdatedBy VARCHAR(50)
)
BEGIN
		DECLARE vClosingDate DATETIME;
		IF prmClosingDate IS NULL THEN
			SET vClosingDate = '1900-1-1';
		ELSE
			SET vClosingDate = prmClosingDate;
		END IF;
		UPDATE 
			F603 
		SET 
			ClosingStatus = prmClosingStatus,
			ClosingDate = vClosingDate,
			UpdatedBy = prmUpdatedBy
		WHERE 
			BranchCode = prmBranchCode AND SODNo = prmSODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F603_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F603_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F603_delete`(
	prmBranchCode VARCHAR(50),
	prmSODNo VARCHAR(50)
)
Begin
	Delete From F604
	WHERE SODNo = prmSODNo;
	Delete From F603 
	WHERE SODNo = prmSODNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F603_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F603_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F603_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmSODNo varchar(50),
   IN prmCustomerName varchar(100),
   IN prmCurrencyCode varchar(50),
   IN prmClosingStatus1 tinyint(1),
   IN prmClosingStatus2 tinyint(1),
   IN prmDeliveredStatus1 tinyint(1),
   IN prmDeliveredStatus2 tinyint(1)
)
BEGIN
	SELECT
	F603.BranchCode,
	F001.Name AS BranchName,
	F603.SODNo, 
	F603.TransactionDate, 
	F603.DeliveryDateStart, 
	F603.DeliveryDateEnd,
	F603.ExpiredDate, 
	F018.Code 					AS PaymentTermCode, 
	F018.Name 					AS PaymentTermName,
	F018.Days 					AS PaymentTermDays,
	F106.Code 					AS CustomerCode, 
	F106.Name 					AS CustomerName,
	F603.CustomerContact,
	F603.CustomerPODNo,
	F108.Code 					AS SalesmanCode,
	F108.Name 					AS SalesmanName,  
	F603.CurrencyCode,
	F006.Name 					AS CurrencyName,
	F603.RefNo,
	F603.Description				AS SODDescriptionHeader, 
	F603.TaxStatus,
	F603.TotalTransactionAmount 			AS SODTotalTransactionAmount,
	F603.DiscountPercent 				AS SODDiscountPercentHeader, 
	F603.DiscountAmount 				AS SODDiscountAmountHeader, 
	F603.PPNPercent 				AS SODPPNPercent, 
	F603.PPNAmount 					AS SODPPNAmount, 
	F603.FreightFeeAmount 				AS SODFreightFeeAmount, 
	F603.InsuranceFeeAmount 			AS SODInsuranceFeeAmount, 
	F603.AdministrationFeeAmount 			AS SODAdministrationFeeAmount, 
	F603.OtherFeeAmount 			    	AS SODOtherFeeAmount, 
        F603.FinalDiscount				As SODFinalDiscount,
	F603.GrandTotalAmount 			    	AS SODGrandTotalAmount, 
	F603.ClosingStatus,
	F603.ClosingDate,
	IFNULL(Group_Concat(F607.INVNO), "") AS INVNO
	FROM F603
	    INNER JOIN F001 ON F603.BranchCode 	        = F001.Code  
	    INNER JOIN F006 ON F603.CurrencyCode 	= F006.Code 
	    INNER JOIN F018 ON F603.PaymentTermCode  	= F018.Code
	    INNER JOIN F106 ON F603.CustomerCode 	= F106.Code
	    INNER JOIN F108 ON F603.SalesmanCode 	= F108.Code
	    LEFT  JOIN F607 ON F603.SODNo 		= F607.SodNo
	WHERE 
		F603.TransactionDate BETWEEN prmFirstDate AND prmLastDate 
		AND F603.SODNo LIKE prmSODNo 
		AND F106.Name  LIKE prmCustomerName
		AND F603.CurrencyCode Like prmCurrencyCode 
		AND (F603.ClosingStatus = prmClosingStatus1 OR F603.ClosingStatus = prmClosingStatus2)
		AND (IF(F607.INVNo IS NULL, false, true) = prmDeliveredStatus1 OR IF(F607.INVNo IS NULL, false, true) = prmDeliveredStatus2)
	GROUP BY F603.SODNo
	ORDER BY F603.SODNo DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F603_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F603_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F603_insert`(
	prmBranchCode VARCHAR(50),
	prmSODNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmDeliveryDateStart DateTime, 
	prmDeliveryDateend DateTime,
	prmExpiredDate DateTime,  
	prmPaymentTermCode VARCHAR(50), 
	prmCustomerCode VARCHAR(50), 
	prmSalesmanCode VARCHAR(50),
	prmCurrencyCode VARCHAR(50),
        prmRefNo Varchar(50),
	prmDescription text, 
	prmTotalTransactionAmount Decimal(18,4), 
	prmDiscountPercent Decimal(18,4), 
	prmDiscountAmount Decimal(18,4), 
	prmPPNPercent Decimal(18,4), 
	prmPPNAmount Decimal(18,4), 
	prmFreightFeeAmount Decimal(18,4), 
	prmInsuranceFeeAmount Decimal(18,4), 
	prmAdministrationFeeAmount Decimal(18,4), 
	prmOtherFeeAmount Decimal(18,4), 
        prmFinalDiscount Decimal(18,4), 
	prmGrandTotalAmount Decimal(18,4),
	prmCustomerPodNo varchar(100), 
        prmCustomerContact varchar(50),
	prmCreatedBy VARCHAR(50),
        prmTaxStatus Boolean
)
BEGIN
		INSERT INTO f603 
		(
			BranchCode, 
			SODNo, 
			TransactionDate, 
			DeliveryDateStart, 
			DeliveryDateEnd,
			ExpiredDate, 
			PaymentTermCode, 
			CustomerCode,
			SalesmanCode, 
			CurrencyCode,
			RefNo, 
			Description, 
			TotalTransactionAmount, 
			DiscountPercent, 
			DiscountAmount, 
			PPNPercent, 
			PPNAmount, 
			FreightFeeAmount, 
			InsuranceFeeAmount, 
			AdministrationFeeAmount, 
			OtherFeeAmount, 
			FinalDiscount,
			GrandTotalAmount,
			CustomerPODNo,
                        CustomerContact,
			TaxStatus,
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
			prmBranchCode, 
			prmSODNo, 
			prmTransactionDate, 
			prmDeliveryDateStart, 
			prmDeliveryDateEnd,
			prmExpiredDate, 
			prmPaymentTermCode, 
			prmCustomerCode, 
			prmSalesmanCode, 
			prmCurrencyCode, 
			prmRefno, 
			prmDescription, 
			prmTotalTransactionAmount, 
			prmDiscountPercent, 
			prmDiscountAmount, 
			prmPPNPercent, 
			prmPPNAmount, 
			prmFreightFeeAmount, 
			prmInsuranceFeeAmount, 
			prmAdministrationFeeAmount, 
			prmOtherFeeAmount, 
                        prmFinalDiscount,
			prmGrandTotalAmount,
			prmCustomerPODNo,
                        prmCustomerContact,
			prmTaxStatus,
			prmCreatedBy, 
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F603_Search` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F603_Search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F603_Search`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmTaxStatus1 TinyInt(1),
   IN prmTaxStatus2 TinyInt(1),
   IN prmClosingStatus1 tinyint(1),
   IN prmClosingStatus2 tinyint(1)
)
BEGIN
	SELECT
	F603.BranchCode,
	F001.Name AS BranchName,
	F603.SODNo, 
	F603.TransactionDate, 
	F603.DeliveryDateStart, 
	F603.DeliveryDateEnd,
	F603.ExpiredDate, 
	F018.Code 					AS PaymentTermCode, 
	F018.Name 					AS PaymentTermName,
	F018.Days 					AS PaymentTermDays,
	F106.Code 					AS CustomerCode, 
	F106.Name 					AS CustomerName,
	F106.ContactPerson 				AS CustomerContactPerson,
	F603.CustomerPODNo, 
	F108.Code 					AS SalesmanCode,
	F108.Name 					AS SalesmanName,  
	F603.CurrencyCode,
	F006.Name 					AS CurrencyName,
	F603.RefNo,
	F603.Description				AS SODDescriptionHeader, 
	F603.TaxStatus,
	F603.TotalTransactionAmount 			AS SODTotalTransactionAmount,
	F603.DiscountPercent 				AS SODDiscountPercentHeader, 
	F603.DiscountAmount 				AS SODDiscountAmountHeader, 
	F603.PPNPercent 				AS SODPPNPercent, 
	F603.PPNAmount 					AS SODPPNAmount, 
	F603.FreightFeeAmount 				AS SODFreightFeeAmount, 
	F603.InsuranceFeeAmount 			AS SODInsuranceFeeAmount, 
	F603.AdministrationFeeAmount 			AS SODAdministrationFeeAmount, 
	F603.OtherFeeAmount 			    	AS SODOtherFeeAmount, 
        F603.FinalDiscount				As SODFinalDiscount,
	F603.GrandTotalAmount 			    	AS SODGrandTotalAmount, 
	F603.ClosingStatus,
	F603.ClosingDate
	FROM F603
	    INNER JOIN F001 ON F603.BranchCode 	        = F001.Code  
	    INNER JOIN F006 ON F603.CurrencyCode 	= F006.Code 
	    INNER JOIN F018 ON F603.PaymentTermCode  	= F018.Code
	    INNER JOIN F106 ON F603.CustomerCode 	= F106.Code
	    INNER JOIN F108 ON F603.SalesmanCode 	= F108.Code
	WHERE 
		F603.BranchCode LIKE prmBranchCode AND
		F603.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
		(F603.TaxStatus = prmTaxStatus1 OR F603.TaxStatus = prmTaxStatus2) AND
		(F603.ClosingStatus = prmClosingStatus1 OR F603.ClosingStatus = prmClosingStatus2)
	ORDER BY F603.SODNo DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F603_Search_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F603_Search_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F603_Search_ByCode`(
   IN prmBranchCode VARCHAR(50),
   IN prmCode varchar(50),
   IN prmClosingStatus1 tinyint(1),
   IN prmClosingStatus2 tinyint(1),
   IN prmTaxStatus1 tinyint(1),
   IN prmTaxStatus2 tinyint(1)
)
BEGIN
	SELECT
        F603.BranchCode,
        F001.Name as BranchName,
	F603.SODNo, 
	F018.Code 		as PaymentTermCode, 
	F018.Name 		as PaymentTermName, 
	F106.Code 		as CustomerCode, 
	F106.Name 		as CustomerName, 
	F106.ContactPerson 	as CustomerContactPerson, 
	F006.Code 		as CurrencyCode, 
	F006.Name 		as CurrencyName,
	F603.DiscountPercent As SODDiscountPercentHeader,
	F603.PPNPercent as SODPPNPercent
	from F603 
	    INNER JOIN F006 on F603.CurrencyCode = F006.Code 
	    INNER JOIN F106 on F603.CustomerCode = F106.Code 
	    INNER JOIN F018 on F603.PaymentTermCode  = F018.Code
	    INNER JOIN F001 on F603.BranchCode = F001.Code
	WHERE 
	F603.BranchCode LIKE prmBranchCode AND	
	F603.SODNo = prmCode AND
	(F603.TaxStatus = prmTaxStatus1 OR F603.TaxStatus = prmTaxStatus2) AND
	(F603.ClosingStatus = prmClosingStatus1 OR F603.ClosingStatus = prmClosingStatus2);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F603_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F603_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F603_update`(
	prmBranchCode VARCHAR(50),
	prmSODNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmDeliveryDateStart DateTime, 
	prmDeliveryDateEnd DateTime,
	prmExpiredDate DateTime,  
	prmPaymentTermCode VARCHAR(50), 
	prmCustomerCode VARCHAR(50),
	prmSalesmanCode VARCHAR(50),  
	prmCurrencyCode VARCHAR(50), 
	prmRefNo VARCHAR(50), 
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal(18,4), 
	prmDiscountPercent Decimal(18,4), 
	prmDiscountAmount Decimal(18,4), 
	prmPPNPercent Decimal(18,4), 
	prmPPNAmount Decimal(18,4), 
	prmFreightFeeAmount Decimal(18,4), 
	prmInsuranceFeeAmount Decimal(18,4), 
	prmAdministrationFeeAmount Decimal(18,4), 
	prmOtherFeeAmount Decimal(18,4), 
        prmFinalDiscount Decimal(18,4), 
	prmGrandTotalAmount Decimal(18,4),
	prmCustomerPODNo VARCHAR(100), 
        prmCustomerContact varchar(50),
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50),
	prmTaxStatus Boolean
)
BEGIN
		UPDATE F603 SET
			BranchCode 			= 	prmBranchCode,
			SODNo 				=	prmSODNo, 
			TransactionDate 		=	prmTransactionDate, 
			DeliveryDateStart 		=	prmDeliveryDateStart, 
			DeliveryDateEnd 		=	prmDeliveryDateEnd,
			ExpiredDate 			=	prmExpiredDate,  
			PaymentTermCode 		=	prmPaymentTermCode, 
			CustomerCode 			=	prmCustomerCode,
			CustomerPODNo 			= 	prmCustomerPODNo,  
                        CustomerContact			=	prmCustomerContact,
			SalesmanCode 			=   	prmSalesmanCode,
			CurrencyCode 			=	prmCurrencyCode,
			RefNo 				= 	prmRefno, 
			Description 			=	prmDescription, 
			TotalTransactionAmount 		=	prmTotalTransactionAmount, 
			DiscountPercent 		=	prmDiscountPercent, 
			DiscountAmount 			=	prmDiscountAmount, 
			PPNPercent 			=	prmPPNPercent, 
			PPNAmount 			=	prmPPNAmount, 
			FreightFeeAmount 		=	prmFreightFeeAmount, 
			InsuranceFeeAmount 		=	prmInsuranceFeeAmount, 
			AdministrationFeeAmount 	=	prmAdministrationFeeAmount, 
			OtherFeeAmount 			=	prmOtherFeeAmount, 
                        FinalDiscount           	=       prmFinalDiscount,
			GrandTotalAmount 		=	prmGrandTotalAmount,
			TaxStatus			=	prmTaxStatus,
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			SODNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F604_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F604_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F604_delete`(
	prmBranchCode VARCHAR(50),
	prmSODNo VARCHAR(50)
)
BEGIN
		DELETE FROM F604 WHERE SODNo = prmSODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F604_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F604_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F604_get`(prmBranchCode VARCHAR(50), prmSODNo VARCHAR(50))
BEGIN
		SELECT 	
			F604.SODNo,			
			F604.ItemCode,
			F013.Name As ItemName,
			F604.ItemAlias,
			F013.UnitCode,
			F604.Quantity, 
			F604.Description, 
			F604.Price, 
			F604.DiscountPercent1, 
			F604.DiscountAmount1, 
			F604.DiscountPercent2, 
			F604.DiscountAmount2, 
			F604.DiscountPercent3, 
			F604.DiscountAmount3,
			((F604.Quantity * Price) - F604.DiscountAmount1 - F604.DiscountAmount2 - F604.DiscountAmount3) As Total
		FROM
			F604
			INNER JOIN F013 ON F604.ItemCode = F013.Code
		WHERE
			F604.SODNo = prmSODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F604_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F604_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F604_insert`(
	prmBranchCode VARCHAR(50), 
	prmSODNo VARCHAR(50), 
	prmItemCode VARCHAR(50),
	prmItemAlias VARCHAR(100), 
	prmQuantity Decimal(18,4), 
	prmDescription TEXT, 
	prmPrice Decimal(18,4), 
	prmDiscountPercent1 Decimal(18,4), 
	prmDiscountAmount1 Decimal(18,4), 
	prmDiscountPercent2 Decimal(18,4), 
	prmDiscountAmount2 Decimal(18,4), 
	prmDiscountPercent3 Decimal(18,4), 
	prmDiscountAmount3 Decimal(18,4), 
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F604 (
			BranchCode, 
			SODNo, 
			ItemCode,
			ItemAlias, 
			Quantity, 
			Description, 
			Price, 
			DiscountPercent1, 
			DiscountAmount1, 
			DiscountPercent2, 
			DiscountAmount2, 
			DiscountPercent3, 
			DiscountAmount3, 
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode, 
			prmSODNo, 
			prmItemCode,
			prmItemAlias, 
			prmQuantity, 
			prmDescription, 
			prmPrice, 
			prmDiscountPercent1, 
			prmDiscountAmount1, 
			prmDiscountPercent2, 
			prmDiscountAmount2, 
			prmDiscountPercent3, 
			prmDiscountAmount3, 
			prmCreatedBy, 
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmDODNo VARCHAR(50)
 )
BEGIN 
  
  -- DELETE FROM F606 
  -- WHERE F606.BranchCode = prmBranchCode AND F606.DODNo = prmDODNo;
  
  DELETE FROM F605 
  WHERE F605.BranchCode = prmBranchCode AND F605.DODNo = prmDODNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_DODNoGet` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_DODNoGet` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_DODNoGet`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmDODNo varchar(50),
   IN prmCustomerName varchar(100),
   IN prmSODNo Varchar(50) 
)
BEGIN
	SELECT
	F605.BranchCode,
	F605.DODNo, 
	F605.TransactionDate, 	
        F605.SODNo 				    	As SODNo,
	F106.Code 					As CustomerCode, 
	F106.Name 					As CustomerName,
	F106.Address 					As CustomerAddress,
	F106.ContactPerson 				As CustomerContactPerson, 
	F108.Code 					As SalesmanCode,
	F108.Name 					As SalesmanName,  
	F113.Code 					As DriverCode, 
	F113.Name 					As DriverName,
	F605.Description				As DODDescriptionHeader, 
	F605.TotalTransaction	 			As DODTotalTransactionAmount,
	F605.DiscountPercent 				As DODDiscountPercentHeader, 
	F605.DiscountAmount 				As DODDiscountAmountHeader, 
	F605.PPNPercent 				As DODPPNPercent, 
	F605.PPNAmount 					As DODPPNAmount, 
	F605.GrandTotal 			    	As DODGrandTotalAmount	
	from F605 	    
	    INNER JOIN F106 on F605.BranchCode 		= F106.BranchCode and F605.CustomerCode = F106.Code
	    INNER JOIN F108 on F605.BranchCode  	= F108.BranchCode and F605.SalesmanCode = F108.Code
	    INNER JOIN F113 on F605.BranchCode  	= F113.BranchCode and F605.DriverCode = F113.Code
	WHERE 
		F605.BranchCode = prmBranchCode 
                 and F605.dodno not in (select F928.dodno from f928 where F928.BranchCode = prmBranchCode)
		 AND F605.TransactionDate BETWEEN prmFirstDate AND prmLastDate 
		 AND F605.DODNo LIKE prmDODNo 
		 AND F106.Name  LIKE prmCustomerName
                 AND F605.SODNo LIKE prmSODNo
		
	Order by F605.DODNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_DODNoSODNoGet` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_DODNoSODNoGet` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_DODNoSODNoGet`(
   IN prmBranchCode VARCHAR(50),  
   IN prmDODNo varchar(50),  
   IN prmSODNo Varchar(50) 
)
BEGIN
	SELECT
	F605.BranchCode,
	F605.DODNo, 
	-- F605.TransactionDate, 	
        F605.SODNo 				    	As SODNo,
	-- F106.Code 					As CustomerCode, 
	-- F106.Name 					As CustomerName,
	-- F106.Address 					As CustomerAddress,
	-- F106.ContactPerson 				As CustomerContactPerson, 
	-- F108.Code 					As SalesmanCode,
	-- F108.Name 					As SalesmanName,  
	-- F113.Code 					As DriverCode, 
	-- F113.Name 					As DriverName,
	-- F605.Description				As DODDescriptionHeader, 
	F605.TotalTransaction	 			As DODTotalTransactionAmount,
	F605.DiscountPercent 				As DODDiscountPercentHeader, 
	F605.DiscountAmount 				As DODDiscountAmountHeader, 
	F605.PPNPercent 				As DODPPNPercent, 
	F605.PPNAmount 					As DODPPNAmount, 
	F605.GrandTotal 			    	As DODGrandTotalAmount	
	from F605 	    
	   --  INNER JOIN F106 on F605.BranchCode 		= F106.BranchCode and F605.CustomerCode = F106.Code
	   --  INNER JOIN F108 on F605.BranchCode  	= F108.BranchCode and F605.SalesmanCode = F108.Code
	   --   INNER JOIN F113 on F605.BranchCode  	= F113.BranchCode and F605.DriverCode = F113.Code
	WHERE 
		F605.BranchCode = prmBranchCode 
                 and F605.dodno not in (select F928.dodno from f928 where F928.BranchCode = prmBranchCode)
		-- AND F605.TransactionDate BETWEEN prmFirstDate AND prmLastDate 
		 AND F605.DODNo LIKE prmDODNo 
		--  AND F106.Name  LIKE prmCustomerName
                 AND F605.SODNo LIKE prmSODNo
		
	Order by F605.DODNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_Expedition` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_Expedition` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_Expedition`(IN prmDODNo VARCHAR(50))
BEGIN 
  SELECT 
    F605.DODNo, 
    F605.TransactionDate, 
    F605.DriverCode, 
    F605.SODNo, 
    F605.SPDescription,
    F605.BranchCode, 
    F001.Name As BranchName,
    F001.Address As BranchAddress,
    F001.Phone1 As BranchPhone1,
    F001.Fax As BranchFax,
    F001.CityCode As BranchCityCode,
    BranchCity.Name As BranchCityName,
    F001.EmailAddress As BranchEmail,
    
    F605.CustomerCode, 
    F106.Name As CustomerName,
    F106.Address As CustomerAddress,
    F106.CityCode As CustomerCityCode,
    CustomerCity.Name As CustomerCityName,
    F106.Phone1 As CustomerPhone1,
    F106.Fax As CustomerFax,
    F605.ExpeditionCode, 
    F038.Name As ExpeditionName,
    F038.Address As ExpeditionAddress,
    F038.CityCode As ExpeditionCityCode,
    ExpeditionCity.Name As ExpeditionCityName,
    F038.Phone1 As ExpeditionPhone1,
    F038.Fax As ExpeditionFax
    
FROM F605
INNER JOIN F001 ON F605.BranchCode = F001.Code
INNER JOIN F038 ON F605.ExpeditionCode = F038.Code
INNER JOIN F106 ON F605.CustomerCode = F106.Code
LEFT JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
LEFT JOIN F009 ExpeditionCity ON F038.CityCode = ExpeditionCity.Code
LEFT JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
WHERE F605.DODNo = prmDODNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmDODNo varchar(50),
   IN prmCustomerName varchar(100),
   IN prmSODNo Varchar(50) 
)
BEGIN
	SELECT
	F605.BranchCode,
	F605.DODNo, 
	F605.TransactionDate, 	
        F605.SODNo 				    	As SODNo,
	F106.Code 					As CustomerCode, 
	F106.Name 					As CustomerName,
	F106.Address 					As CustomerAddress,
	F106.ContactPerson 				As CustomerContactPerson, 
	F108.Code 					As SalesmanCode,
	F108.Name 					As SalesmanName,  
	F113.Code 					As DriverCode, 
	F113.Name 					As DriverName,
	F605.Description				As DODDescriptionHeader, 
	F605.TotalTransaction	 			As DODTotalTransactionAmount,
	F605.DiscountPercent 				As DODDiscountPercentHeader, 
	F605.DiscountAmount 				As DODDiscountAmountHeader, 
	F605.PPNPercent 				As DODPPNPercent, 
	F605.PPNAmount 					As DODPPNAmount, 
	F605.GrandTotal 			    	As DODGrandTotalAmount	
	from F605 	    
	    INNER JOIN F106 on F605.BranchCode 		= F106.BranchCode and F605.CustomerCode = F106.Code
	    INNER JOIN F108 on F605.BranchCode  	= F108.BranchCode and F605.SalesmanCode = F108.Code
	    INNER JOIN F113 on F605.BranchCode  	= F113.BranchCode and F605.DriverCode = F113.Code
	WHERE 
		F605.BranchCode = prmBranchCode 
		 AND F605.TransactionDate BETWEEN prmFirstDate AND prmLastDate 
		 AND F605.DODNo LIKE prmDODNo 
		 AND F106.Name  LIKE prmCustomerName
                 AND F605.SODNo LIKE prmSODNo		
	Order by F605.DODNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_Get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_Get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_Get_ByCode`(
   IN prmBranchCode VARCHAR(50),
   IN prmDODNo varchar(50)
   
)
BEGIN
	SELECT
	F605.BranchCode,
	F605.DODNo, 
	F605.TransactionDate, 	
        F605.SODNo,
	F605.CustomerCode,
        F605.WarehouseCode,
	F605.ExchangeRate,
	F605.TotalTransaction,
	F605.DiscountPercent,
	F605.DiscountAmount,
	F605.PPNPercent,
	F605.PPNAmount,
	F605.GrandTotal,
	F605.CreatedBy,
	F605.UpdatedBy
	from F605 	    
	WHERE 
		F605.BranchCode = prmBranchCode 
		 AND F605.DODNo = prmDODNo; 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_Get_BySOD` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_Get_BySOD` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_Get_BySOD`(prmBranchCode VarChar(50), prmFirstDate DateTime, prmLastDate DateTime)
BEGIN 
  SELECT 
    F605.BranchCode,
    F001.Name As BranchName, 
    F605.DODNo, 
    F605.TransactionDate, 
    F605.CurrencyCode,
    F006.Name 				as CurrencyName,
    F605.ExchangeRate, 
    F605.CustomerCode, 
    F106.Name				as CustomerName,
    F106.ContactPerson 		as CustomerContactPerson,
    F605.SalesmanCode, 
    F108.Name				as SalesmanName,
    F605.DriverCode, 
    F113.Name				as DriverName,
    F605.ExpeditionCode,
    F038.Name as ExpeditionName,
    F605.Description, 
    F605.SPDescription,
    F605.TotalTransaction,
    (F605.TotalTransaction * F605.ExchangeRate) AS TotalTransactionLocal,  
    F605.DiscountPercent, 
    F605.DiscountAmount, 
    (F605.DiscountAmount * F605.ExchangeRate) AS DiscountAmountLocal,  
    F605.PPNPercent, 
    F605.PPNAmount,
    (F605.PPNAmount * F605.ExchangeRate) AS PPNAmountLocal,   
    F605.GrandTotal,
    (F605.GrandTotal * F605.ExchangeRate) AS GrandTotalLocal,   
    F605.DeleteStatus, 
    F605.SODNo, 
    F605.WarehouseCode, 
    F110.Name				as WarehouseName,
    F605.CreatedBy, 
    F605.CreatedDate, 
    F605.UpdatedBy, 
    F605.UpdatedDate
FROM F605
	INNER JOIN F006 ON F605.CurrencyCode = F006.Code
	INNER JOIN F106 ON F605.CustomerCode = F106.Code
	INNER JOIN F108 ON F605.SalesmanCode = F108.Code
        INNER JOIN F038 ON F605.ExpeditionCode = F038.Code
	INNER JOIN F001 ON F605.BranchCode = F001.Code
	INNER JOIN F110 ON F605.WarehouseCode = F110.Code
    LEFT  JOIN F113 ON F605.DriverCode = F113.Code
WHERE 
  F605.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
  F605.DeleteStatus = FALSE AND
  LENGTH(SODNo) > 0
ORDER By F605.DODNo DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_Get_BySODNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_Get_BySODNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F605_Get_BySODNo`(IN prmSODNo VARCHAR(50))
BEGIN
      SELECT SODNo from F605 Where SODNo = prmSODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_Get_BySOD_NonDate` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_Get_BySOD_NonDate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_Get_BySOD_NonDate`(IN prmBranchCode VarChar(50), prmSODNo VarChar(50))
BEGIN 
  SELECT 
    F605.BranchCode,
    F605.DODNo, 
    F605.TransactionDate
FROM F605
WHERE 
  F605.DeleteStatus = FALSE AND F605.SODNo = prmSODNo
ORDER By F605.DODNo DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_Get_NonSOD` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_Get_NonSOD` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_Get_NonSOD`(prmBranchCode VarChar(50), prmFirstDate DateTime, prmLastDate DateTime)
BEGIN 
  SELECT 
    F605.BranchCode, 
    F605.DODNo, 
    F605.TransactionDate, 
    F605.CurrencyCode,
    F006.Name 				as CurrencyName,
    F605.ExchangeRate, 
    F605.CustomerCode, 
    F106.Name				as CustomerName,
    F605.SalesmanCode, 
    F108.Name				as SalesmanName,
    F605.DriverCode, 
    F113.Name				as DriverName,
    F605.Description, 
    F605.TotalTransaction,
    (F605.TotalTransaction * F605.ExchangeRate) AS TotalTransactionLocal,  
    F605.DiscountPercent, 
    F605.DiscountAmount, 
    (F605.DiscountAmount * F605.ExchangeRate) AS DiscountAmountLocal,  
    F605.PPNPercent, 
    F605.PPNAmount,
    (F605.PPNAmount * F605.ExchangeRate) AS PPNAmountLocal,   
    F605.GrandTotal, 
    F605.DeleteStatus, 
    F605.SODNo, 
    F605.WarehouseCode, 
    F110.Name				as WarehouseName,
    F605.CreatedBy, 
    F605.CreatedDate, 
    F605.UpdatedBy, 
    F605.UpdatedDate
FROM F605
    INNER JOIN F006 ON F605.CurrencyCode = F006.Code
    INNER JOIN F106 ON F605.CustomerCode = F106.Code
    INNER JOIN F108 ON F605.SalesmanCode = F108.Code
    INNER JOIN F110 ON F605.WarehouseCode = F110.Code
    LEFT  JOIN F113 ON F605.DriverCode = F113.Code
WHERE 
  -- F605.BranchCode = prmBranchCode AND
  F605.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
  F605.DeleteStatus = FALSE AND
  LENGTH(SODNo) = 0
ORDER By F605.DODNo DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmDODNo VARCHAR(50), 
    IN prmTransactionDate DateTime, 
    IN prmCurrencyCode VARCHAR(50), 
    IN prmExchangeRate Decimal(18,4), 
    IN prmCustomerCode VARCHAR(50), 
    IN prmSalesmanCode VARCHAR(50), 
    IN prmDriverCode VARCHAR(50),
    IN prmExpeditionCode VARCHAR(50), 
    IN prmDescription Text, 
    IN prmTotalTransaction Decimal(18,4), 
    IN prmDiscountPercent Decimal(18,4), 
    IN prmDiscountAmount Decimal(18,4), 
    IN prmPPNPercent Decimal(18,4), 
    IN prmPPNAmount Decimal(18,4), 
    IN prmTaxStatus Boolean,
    IN prmGrandTotal Decimal(18,4), 
    IN prmSODNo VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmCreatedBy VARCHAR(50) 
 )
BEGIN 
  INSERT INTO F605 ( 
    F605.BranchCode, 
    F605.DODNo, 
    F605.TransactionDate, 
    F605.CurrencyCode, 
    F605.ExchangeRate, 
    F605.CustomerCode, 
    F605.SalesmanCode, 
    F605.DriverCode, 
    F605.ExpeditionCode,
    F605.Description, 
    F605.TotalTransaction, 
    F605.DiscountPercent, 
    F605.DiscountAmount, 
    F605.PPNPercent, 
    F605.PPNAmount,
    F605.TaxStatus, 
    F605.GrandTotal, 
    F605.SODNo, 
    F605.WarehouseCode, 
    F605.CreatedBy, 
    F605.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmDODNo, 
    prmTransactionDate, 
    prmCurrencyCode, 
    prmExchangeRate, 
    prmCustomerCode, 
    prmSalesmanCode, 
    prmDriverCode, 
    prmExpeditionCode,
    prmDescription, 
    prmTotalTransaction, 
    prmDiscountPercent, 
    prmDiscountAmount, 
    prmPPNPercent, 
    prmPPNAmount,
    prmTaxStatus, 
    prmGrandTotal, 
    prmSODNo, 
    prmWarehouseCode, 
    prmCreatedBy, 
    NOW()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_Update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_Update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_Update`( 
    IN oldBranchCode VARCHAR(50),
    IN oldDODNo VARCHAR(50),
 
    IN prmBranchCode varchar(50),
    IN prmTransactionDate DateTime
    IN prmCurrencyCode
    IN prmExchangeRate Decimal
    IN prmCustomerCode
    IN prmSalesmanCode
    IN prmDriverCode VARCHAR(50),
    IN prmExpeditionCode VARCHAR(50),
    IN prmDescription Text
    IN prmTotalTransaction Decimal
    IN prmDiscountPercent Decimal
    IN prmDiscountAmount Decimal
    IN prmPPNPercent Decimal
    IN prmPPNAmount Decimal
    IN prmTaxStatus Boolean,
    IN prmGrandTotal Decimal
    IN prmSODNo VARCHAR(50),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
    IN prmWarehouseCode
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE F605 SET 
    BranchCode = prmBranchCode,
    TransactionDate = prmTransactionDate, 
    CurrencyCode = prmCurrencyCode, 
    ExchangeRate = prmExchangeRate, 
    CustomerCode = prmCustomerCode, 
    SalesmanCode = prmSalesmanCode, 
    DriverCode = prmDriverCode, 
    ExpeditionCode = prmExpeditionCode,
    Description = prmDescription, 
    TotalTransaction = prmTotalTransaction, 
    DiscountPercent = prmDiscountPercent, 
    DiscountAmount = prmDiscountAmount, 
    PPNPercent = prmPPNPercent, 
    PPNAmount = prmPPNAmount,
    TaxStatus = prmTaxStatus, 
    GrandTotal = prmGrandTotal, 
    SODNo = prmSODNo, 
    WarehouseCode = prmWarehouseCode, 
    UpdatedBy = prmUpdatedBy, 
    UpdatedDate = NOW()
  WHERE F605.DODNo = oldDODNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F605_Update_SP` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F605_Update_SP` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F605_Update_SP`( 
    IN oldBranchCode VARCHAR(50),
    IN oldDODNo VARCHAR(50),
    IN prmSPDescription Text
 )
BEGIN 
  UPDATE F605 SET 
    SPDescription = prmSPDescription
  WHERE F605.DODNo = oldDODNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F606_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F606_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F606_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmDODNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F606 
  WHERE F606.BranchCode = prmBranchCode AND F606.DODNo = prmDODNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F606_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F606_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F606_get`(prmBranchCode VARCHAR(50), prmDODNo VARCHAR(50))
BEGIN
		SELECT 	
			F606.DODNo,			
			F606.ItemCode,
			F013.Name As ItemName,
			F606.ItemAlias,
			F013.UnitCode,
			F008.Name As UnitName,
			F606.Quantity, 
			F606.BonusQuantity,
			F606.Description, 
			F606.Price, 
			F606.DiscountPercent1, 
			F606.DiscountAmount1, 
			F606.DiscountPercent2, 
			F606.DiscountAmount2, 
			F606.DiscountPercent3, 
			F606.DiscountAmount3
		FROM
			F606
			INNER JOIN F013 ON F606.ItemCode = F013.Code
			INNER JOIN F008 ON F013.UnitCode =  F008.Code
		WHERE
			F606.DODNo = prmDODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F606_Get_QtyBySOD` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F606_Get_QtyBySOD` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F606_Get_QtyBySOD`(
in prmBranchCode VarChar(50), in prmSODNo VarChar(50))
BEGIN                                                                                                                                                                                                                                                                                                                                                                              
                                 Select F605.BranchCode, F605.SODNo, F605.DODNo, F606.ItemCode, F606.ItemAlias, Sum(Quantity) As DeliveredQuantity from F606                                                                                                                                                                                                                                                                         
                                   INNER JOIN F605 ON F606.DODNo = F605.DODNo                                                                                                                                                                                                                                                                                                                                       
                                 WHERE F605.BranchCode = prmBranchCode AND F605.SODNo = prmSODNo                                                                                                                                                                                                                                                                                                                    
                                 Group By F606.ItemCode, F606.ItemAlias;                                                                                                                                                                                                                                                                                                                                                            
                                     END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F606_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F606_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F606_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmDODNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmItemAlias VARCHAR(100),
    IN prmQuantity Decimal(18,4), 
    IN prmBonusQuantity Decimal(18,4), 
    IN prmPrice Decimal(18,4), 
    IN prmDescription VARCHAR(200),  
    IN prmDiscountPercent1 Decimal(18,4), 
    IN prmDiscountPercent2 Decimal(18,4), 
    IN prmDiscountPercent3 Decimal(18,4), 
    IN prmDiscountAmount1 Decimal(18,4), 
    IN prmDiscountAmount2 Decimal(18,4), 
    IN prmDiscountAmount3 Decimal(18,4), 
    IN prmCreatedBy VARCHAR(50)
    
 )
BEGIN 
  INSERT INTO F606 ( 
    F606.BranchCode, 
    F606.DODNo, 
    F606.ItemCode,
    F606.ItemAlias, 
    F606.Quantity, 
    F606.BonusQuantity,
    F606.Price, 
    F606.Description,  
    F606.DiscountPercent1, 
    F606.DiscountPercent2, 
    F606.DiscountPercent3, 
    F606.DiscountAmount1, 
    F606.DiscountAmount2, 
    F606.DiscountAmount3, 
    F606.CreatedBy, 
    F606.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmDODNo, 
    prmItemCode, 
    prmItemAlias,
    prmQuantity, 
    prmBonusQuantity,
    prmPrice, 
    prmDescription, 
    prmDiscountPercent1, 
    prmDiscountPercent2, 
    prmDiscountPercent3, 
    prmDiscountAmount1, 
    prmDiscountAmount2, 
    prmDiscountAmount3, 
    prmCreatedBy, 
    NOW()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607b_Get_FakNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607b_Get_FakNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607b_Get_FakNo`(prmINVNo VARCHAR(50))
BEGIN
		SELECT 	
	-- F607b.BranchCode,   
	IF(ISNULL(F607b.INVNo), "", F607b.INVNo) AS INVNo,                     
	 IF(ISNULL(F607b.FakNo), "", F607b.FakNo) AS FakNo, 
	  IF(ISNULL(F607b.BPno), "", F607b.BPno) AS BPno,
	F607b.FakDate,
 IF(ISNULL(F607b.StatusRef), "", F607b.StatusRef) AS StatusRef
	
	-- MAX(F607b.StatusRef) AS StatusRef
		FROM
			F607b
		WHERE
			F607b.INVNo = prmINVNo
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607b_Get_FakNo_inv` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607b_Get_FakNo_inv` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607b_Get_FakNo_inv`(prmINVNo VARCHAR(50))
BEGIN
		SELECT 	
	-- F607b.BranchCode,                        
	F607b.INVNo,   
	f607b.BPno,
	F607b.FakNo,      
	F607b.FakDate,    
	F607b.StatusRef
		FROM
			F607b
		WHERE
			F607b.INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607b_get_Faktur` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607b_get_Faktur` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607b_get_Faktur`(prmBranchCode varchar(50),prmFakNo VARCHAR(50))
BEGIN
		SELECT 	
	-- F607b.BranchCode,                        
	-- F607b.INVNo,   
	F607b.FakNo,      
	F607b.FakDate,    
	F607b.StatusRef, 
F607.BranchCode,
    F001.Name As BranchName,
    F001.NPWPNo as NPWPNo,
    F001.Address As BranchAddress,
    F001.CityCode As BranchCityCode,
    BranchCity.Name As BranchCityName,
    F607.INVNo, 
    F607.SODNo,
    F607.VoucherNo, 
    F607.TransactionDate, 
    F607.CurrencyCode,
    F006.Name As CurrencyName, 
F607.BankAccountCode,
F103.Name as BankAccountName,
    F607.PaymentTermCode,
    F018.Name As PaymentTermName,
    F018.Days As PaymentTermDays, 
    F607.ExchangeRate, 
    F607.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    F106.CityCode As CustomerCityCode,
    CustomerCity.Name As CustomerCityName,
    F106.Address As CustomerAddress,
    F106.NPWPAddress As CustomerNPWPAddress,
    F106.NPWP as CustomerNPWP,
    F106.ZipCode,
    f106.Phone1,
    F106.Phone2,
    f106.Fax,
    F607.SalesmanCode,
    F108.Name As SalesmanName,
    F607.WarehouseCode,
    F110.Name As WarehouseName,
    F607.Description, 
    F607.TotalTransaction As TotalTransactionForeign,
    (F607.TotalTransaction * F607.ExchangeRate) As TotalTransactionLocal,
    F607.DiscountPercent,
    F607.DiscountAmount As DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) As DiscountAmountLocal,
    F607.OtherFeeBeforePPN As OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) As OtherFeeBeforePPNLocal,
    F607.PPNPercent,
    F607.PPNAmount As PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) As PPNAmountLocal,
    F607.OtherFeeAfterPPN As OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) As OtherFeeAfterPPNLocal,
F607.MateraiFeeAfterPPN 			      as MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   as MateraiFeeAfterPPNLocal, 
   F607.PackingFeeAfterPPN 			      as PackingFeeAfterPPNForeign, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   as PackingFeeAfterPPNLocal, 
   F607.AsuransiFeeAfterPPN 			      as AsuransiFeeAfterPPNForeign, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   as AsuransiFeeAfterPPNLocal, 
   F607.PPh23FeeAfterPPN 			      as PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   as PPh23FeeAfterPPNLocal, 
    F607.FinalDiscount As FinalDiscountForeign,
    (F607.FinalDiscount * F607.ExchangeRate) As FinalDiscountLocal,
F607.DeductionAfterPPn 			      as DeductionAfterPPnForeign, 
	(F607.DeductionAfterPPn * F607.ExchangeRate)   as DeductionAfterPPnLocal, 
    F607.GrandTotal As GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) As GrandTotalLocal,
"Service" As ItemType,
    F609.ServiceCode As ItemCode,
    "" As ItemAlias,
    F025.Name As ItemName,
F609.ServiceAliasCode As ServiceAliasCode,
F041.Name As ServiceAliasName,
    "" As ItemUnitCode,
    F609.Description as DescriptionDetail,
    F609.Quantity,
    0 as BonusQuantity,
    F609.Price, 
    F609.DiscountPercent1,
    F609.DiscountAmount1,
    F609.FinalDiscount1,
    F609.DiscountPercent2,
    F609.DiscountAmount2,
    F609.DiscountPercent3,
    F609.DiscountAmount3
		FROM
			F607b
			INNER JOIN F607 ON F607b.INVNo = F607.INVNo
  INNER JOIN F001 ON F607.BranchCode = F001.Code
  INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  INNER JOIN F106 ON F607.CustomerCode = F106.Code
  INNER JOIN F108 ON F607.SalesmanCode = F108.Code
  INNER JOIN F110 ON F607.WareHouseCode = F110.Code
  Inner Join F103 On  F607.BankAccountCode = F103.Code
  INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
  INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
INNER JOIN F609 ON F607b.INVNo = F609.INVNo
 INNER JOIN F025 ON F609.ServiceCode = F025.Code
 INNER JOIN F041 ON F609.ServiceAliasCode = F041.Code
		WHERE
			F607b.BranchCode = prmBranchCode AND F607b.FakNo = prmFakNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607b_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607b_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607b_insert`(
	-- prmBranchCode varchar(50),      
	prmINVNo                 varchar(50),           
	prmFakNo VARCHAR(50),    
	prmFakDate       datetime,    
	prmStatusRef          varchar(1),
	prmCreatedBy             varchar(50)    
)
BEGIN
	insert into F607b
	(
	-- BranchCode,                        
	INVNo,   
	FakNo,      
	FakDate,    
	StatusRef,    
	CreatedBy,      
	CreatedDate 
	)
	value
	(
	-- prmBranchCode,      
	prmINVNo,           
	prmFakNo,    
	prmFakDate,     
	prmStatusRef,      
	prmCreatedBy,
	NOW()
	);         
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607b_insertBP` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607b_insertBP` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607b_insertBP`(
	-- prmBranchCode varchar(50),      
	prmINVNo                 varchar(50),           
	prmBPno VARCHAR(50),    
	-- prmFakDate       datetime,    
	-- prmStatusRef          varchar(1),
	prmCreatedBy             varchar(50)    
)
BEGIN
	insert into F607b
	(
	-- BranchCode,                        
	INVNo,   
	BPno,      
	-- FakDate,    
	-- StatusRef,    
	CreatedBy,      
	CreatedDate 
	)
	value
	(
	-- prmBranchCode,      
	prmINVNo,           
	prmBPno,    
	-- prmFakDate,     
	-- prmStatusRef,      
	prmCreatedBy,
	NOW()
	);         
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607b_UpdateBP` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607b_UpdateBP` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607b_UpdateBP`(
	-- prmBranchCode varchar(50),      
	prmINVNo                 varchar(50),           
	prmBPno VARCHAR(50),    
	-- prmFakDate       datetime,    
	-- prmStatusRef          varchar(1),
	prmCreatedBy             varchar(50)    
)
BEGIN
	update F607b set BPno=prmBPno where INVNo = prmINVNo;
	update f607 set f607.BPno = prmBPno WHERE INVNo = prmINVNo
	;         
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607b_Update_FakNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607b_Update_FakNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607b_Update_FakNo`( 
    prmOldBranchCode VARCHAR(50),
    prmOldINVNo VARCHAR(50),     
    prmFakNo VARCHAR(50),      
	prmFakDate       datetime, 
	prmStatusRef          varchar(1),
	prmUpdatedBy             varchar(50)  
 )
BEGIN 
  UPDATE F607b SET    
    FakNo = prmFakNo, 
    FakDate = NOW(),
StatusRef=prmStatusRef,
UpdatedBy=prmUpdatedBy    
  WHERE F607b.BranchCode = prmOldBranchCode AND F607b.INVNo = prmOldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_delete`(
	prmBranchCode VARCHAR(50),
	prmINVNo VARCHAR(50)
)
Begin
	Delete From F928
	Where   INVNo = prmINVNo;
	Delete From F608
	WHERE INVNo = prmINVNo;
	Delete From F607 
	WHERE  INVNo = prmINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Delete_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Delete_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_Delete_InvNonDO`(
	prmBranchCode VARCHAR(50),
	prmINVNo VARCHAR(50)
)
Begin
	Delete From F607 
	WHERE F607.BranchCode = prmBranchCode AND F607.INVNo = prmINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmINVNo varchar(50),
   IN prmSODNo varchar(50),
   IN prmCustomerName varchar(100),
   IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT
	F607.BranchCode, 
	F607.INVNo, 
	F607.TransactionDate,
F607.FromDate,
F607.ToDate,
        F603.SODNo as SODNo , 
F607.BankAccountCode,
F103.Name as BankAccountName,
	F018.Code 		as PaymentTermCode, 
	F018.Name 		as PaymentTermName, 
	F018.Days 		as PaymentTermDays, 
	F106.Code 		as CustomerCode, 
	F106.Name 		as CustomerName, 
	F108.Code 		As SalesmanCode,
	F108.Name 		As SalesmanName, 	
	F006.Code 		as CurrencyCode, 
	F006.Name 		as CurrencyName, 	
	F106.ContactPerson 	as CustomerContactPerson, 
	F607.AssignStatus,   
        F607.VoucherNo,	         	
        F607.ExchangeRate, 
	F106.Address	 	as CustomerAddress, 
	F106.ZipCode 		as CustomerZipCode, 
	F106.Phone1 		as CustomerPhone1, 
	F106.Phone2 		as CustomerPhone2, 
	F106.Fax 		as CustomerFax, 
	F106.EmailAddress 	as CustomerEmailAddress, 
	F010.Code 		as CustomerCountryCode,  
	F010.Name 		as CustomerCountryName, 
	F009.Code 		as CustomerCityCode,  
	F009.Name 		as CustomerCityName, 
        F607.Description	as INVDescriptionHeader, 
        F607.TotalTransaction   as INVTotalTransaction, 
       (F607.TotalTransaction * F607.ExchangeRate) as INVTotalTransactionAmountLocal, 
        F607.DiscountPercent 	as INVDiscountPercentHeader, 
	F607.DiscountAmount 	as INVDiscountAmountHeader, 
	(F607.DiscountAmount * F607.ExchangeRate) as INVDiscountAmountHeaderLocal, 
	F607.OtherFeeBeforePPN 			      as INVOtherFeeBeforePPNAmount, 
	(F607.OtherFeeBeforePPN * F607.ExchangeRate)   as INVOtherFeeBeforePPNAmountLocal, 
        F607.PPNPercent 	as INVPPNPercent, 
	F607.PPNAmount 		as INVPPNAmount, 
	(F607.PPNAmount * F607.ExchangeRate)		as INVPPNAmountLocal, 
        F607.OtherFeeAfterPPN 			      as INVOtherFeeAfterPPNAmount, 
	(F607.OtherFeeAfterPPN * F607.ExchangeRate)   as INVOtherFeeAfterPPNAmountLocal, 
   F607.MateraiFeeAfterPPN 			      as INVMateraiFeeAfterPPNAmount, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   as INVMateraiFeeAfterPPNAmountLocal, 
   F607.PackingFeeAfterPPN 			      as INVPackingFeeAfterPPNAmount, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   as INVPackingFeeAfterPPNAmountLocal, 
   F607.AsuransiFeeAfterPPN 			      as INVAsuransiFeeAfterPPNAmount, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   as INVAsuransiFeeAfterPPNAmountLocal, 
   F607.PPh23FeeAfterPPN 			      as INVPPh23FeeAfterPPNAmount, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   as INVPPh23FeeAfterPPNAmountLocal, 
F607.DeductionAfterPPn 			      as DeductionAfterPPnForeign, 
	(F607.DeductionAfterPPn * F607.ExchangeRate)   as DeductionAfterPPnLocal,
        F607.GrandTotal 			    as INVGrandTotal, 
	(F607.GrandTotal * F607.ExchangeRate) as INVGrandTotalAmountLocal, 
	F607.PaidAmount 			    as INVPaidAmount, 
	(F607.PaidAmount * F607.ExchangeRate) 	    as INVPaidAmountLocal
        	
	from F607 
Inner Join F103 On  F607.BankAccountCode = F103.Code
	    INNER JOIN F006 on F607.CurrencyCode = F006.Code 
            INNER JOIN F018 on F607.PaymentTermCode  = F018.Code
	    INNER JOIN F106 on  F607.CustomerCode = F106.Code 
	    INNER JOIN F009 on F106.CityCode     = F009.Code 
	    INNER JOIN F010 on F106.CountryCode  = F010.Code     
            INNER JOIN F108 on  F607.SalesmanCode = F108.Code 
            -- INNER JOIN F110 on F607.BranchCode = F110.BranchCode and F607.WarehouseCode = F110.Code 
	    INNER JOIN F603 on  F607.SODNo = F603.SODNo
	    
	   WHERE 
		-- F607.BranchCode = prmBranchCode AND
		F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
		F607.INVNo LIKE prmINVNo
		and F607.SODNo like prmSODNo;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Get_ByCode`(In prmBranchCode varchar(50), IN prmINVNo varchar(50))
BEGIN 
  SELECT 
    f607.BranchCode, 
    f607.INVNo,
    f607.TransactionDate, 
    f607.ExchangeRate, 
    f607.CustomerCode, 
    f607.WarehouseCode,
    F607.ExchangeRate,
    f607.DiscountPercent,
    f607.DiscountAmount, 
    f607.FinalDiscount, 
    f607.OtherFeeBeforePPN, 
f607.MateraiFeeAfterPPN, 
f607.PackingFeeAfterPPN, 
f607.AsuransiFeeAfterPPN, 
f607.PPh23FeeAfterPPN, 
    f607.PPNPercent,
    f607.PPNAmount, 
    f607.OtherFeeAfterPPN,
    f607.GrandTotal
    
FROM f607
WHERE
  f607.BranchCode = prmBranchCode AND
  f607.INVNo = prmINVNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Get_ByItemCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Get_ByItemCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_Get_ByItemCode`(
  prmBranchCode VarChar(50), 
  prmCustomerCode VarChar(50),
  prmSalesmanCode VarChar(50),
  prmItemCode VarChar(50),
  prmCurrencyCode VarChar(50),
  prmFirstDate DateTime,
  prmLastDate DateTime)
BEGIN	
	SELECT
		F607.INVNo,
		F607.TransactionDate,
		F607.CurrencyCode,
		F608.Quantity,
		F608.Price,
		F608.DiscountPercent1,
		F608.DiscountPercent2,
		F608.DiscountPercent3,
		F607.DiscountPercent,
		F607.PPNPercent
		
	FROM F608
	INNER JOIN F607 ON F607.BranchCode = prmBranchCode AND F608.INVNo = F607.INVNo
	WHERE 
		F608.BranchCode = prmBranchCode AND
		F608.ItemCode = prmItemCode AND
		F607.CustomerCode = prmCustomerCode AND
		F607.CurrencyCode = prmCurrencyCode AND
		F607.SalesmanCode = prmSalesmanCode AND
		F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	ORDER BY
		F608.INVNo DESC;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Get_ByTaxInvoice` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Get_ByTaxInvoice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Get_ByTaxInvoice`(
  IN prmBranchCode varchar(50), 
  IN prmCustomerCode varchar(50),
  IN prmCurrencyCode varchar(50),
  IN prmExchangeRate Decimal(18,4),
  IN prmOldTINNo VARCHAR(50)
)
BEGIN 
  SELECT 
    f607.BranchCode, 
    f607.INVNo,
    f607.TransactionDate, 
    f607.CustomerCode, 
    F607.CurrencyCode,
    f607.ExchangeRate, 
    f607.GrandTotal As GrandTotalForeign,
    (f607.GrandTotal * F607.ExchangeRate) As GrandTotalLocal
    
FROM f607
WHERE
  f607.BranchCode = prmBranchCode AND
  F607.CustomerCode = prmCustomerCode AND
  F607.CurrencyCode = prmCurrencyCode AND
  F607.ExchangeRate = prmExchangeRate AND
  F607.PPNPercent > 0 AND
  F607.INVNo not in (select F642.INVNo from F642 where F642.BranchCode = prmBranchCode AND F642.TINNo <> prmOldTINNo)
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Get_FakNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Get_FakNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Get_FakNo`(IN prmBranchCode varchar(50), 
  IN prmINVNo varchar(50))
BEGIN 
  SELECT 
    F607.BranchCode,
        F607.INVNo,
    F607.FakNo, 
    F607.FakDate,
F607.StatusRef,
f607.FakNoRef,
f607.FakRefDate
    
FROM F607
WHERE 
    F607.BranchCode = prmBranchCode AND INVNo =prmINVNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Get_InvByDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Get_InvByDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Get_InvByDO`(IN prmBranchCode varchar(50), 
  IN prmFirstDate datetime, IN prmLastDate datetime)
BEGIN 
  SELECT 
    F607.BranchCode,
    F001.Name As BranchName,
    F607.INVNo,
    F607.SODNo, 
    F607.VoucherNo, 
    F607.TransactionDate, 
    F607.CurrencyCode,
    F006.Name As CurrencyName, 
F607.BankAccountCode,
F103.Name as BankAccountName,
    F607.PaymentTermCode,
    F018.Name As PaymentTermName,
    F018.Days As PaymentTermDays, 
    F607.ExchangeRate, 
    F607.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    F607.SalesmanCode,
    F108.Name As SalesmanName,
    F607.Description, 
    F607.TotalTransaction As TotalTransactionForeign,
    (F607.TotalTransaction * F607.ExchangeRate) As TotalTransactionLocal,
    F607.DiscountPercent,
    F607.DiscountAmount As DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) As DiscountAmountLocal,
    F607.OtherFeeBeforePPN As OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) As OtherFeeBeforePPNLocal,
    F607.PPNPercent,
    F607.PPNAmount As PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) As PPNAmountLocal,
    F607.OtherFeeAfterPPN As OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) As OtherFeeAfterPPNLocal,
 F607.MateraiFeeAfterPPN 			      as MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   as MateraiFeeAfterPPNLocal, 
   F607.PackingFeeAfterPPN 			      as PackingFeeAfterPPNForeign, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   as PackingFeeAfterPPNLocal, 
   F607.AsuransiFeeAfterPPN 			      as AsuransiFeeAfterPPNForeign, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   as AsuransiFeeAfterPPNLocal, 
   F607.PPh23FeeAfterPPN 			      as PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   as PPh23FeeAfterPPNLocal, 
    F607.FinalDiscount As FinalDiscountForeign,
    (F607.FinalDiscount * F607.ExchangeRate) As FinalDiscountLocal,
 F607.DeductionAfterPPn 			      as DeductionAfterPPnForeign, 
	(F607.DeductionAfterPPn * F607.ExchangeRate)   as DeductionAfterPPnLocal, 
    F607.GrandTotal As GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) As GrandTotalLocal,
    F607.CreatedBy, 
    F607.CreatedDate, 
    F607.UpdatedBy, 
    F607.UpdatedDate
    
FROM F607
Inner Join F103 On  F607.BankAccountCode = F103.Code
  INNER JOIN F001 ON F607.BranchCode = F001.Code
  INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  INNER JOIN F106 ON F607.CustomerCode = F106.Code
  LEFT JOIN F108 ON F607.SalesmanCode = F108.Code
WHERE 
    F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND LENGTH(F607.SODNo) > 0
ORDER BY F607.TransactionDate DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Get_InvDEV` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Get_InvDEV` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Get_InvDEV`(
  IN prmFirstDate varchar(8), IN prmLastDate VARCHAR(8))
BEGIN 
	SELECT 
    F607.BranchCode,
    -- F001.Name AS BranchName,
    F607.INVNo,
	F607.PostingSend,
	F607.PostingRec,
    F607.RefNo,
    F607.VoucherNo, 
    F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
    F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
IF(ISNULL(f607.BPno), "", f607.BPno) AS BPno,
IF(ISNULL(f607b.FakDate), NOW(), f607b.FakDate) AS FakDate,
	F607.FakDate,
	F607.StatusRef,
	F607.FakNoRef,
	F607.FakRefDate,
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
    F607.PaymentTermCode,
    -- F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
    F607.ExchangeRate, 
    F607.CustomerCode,
    IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
    F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F607.WarehouseCode,
    -- F110.Name AS WarehouseName,
    F106.Name as Description, 
    F607.TotalTransaction AS TotalTransactionForeign,
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
    F607.DiscountPercent,
    F607.DiscountAmount AS DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
    F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
    F607.PPNPercent,
    F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
    F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	F607.MateraiFeeAfterPPN   AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
   F607.PackingFeeAfterPPN 			      AS PackingFeeAfterPPNForeign, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
    F607.FinalDiscount AS FinalDiscountForeign,
    (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	F607.DeductionAfterPPn 			      AS DeductionAfterPPnForeign, 
	(F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal,
      F607.TotalTransaction+F607.PPNAmount AS GrandTotalForeign,
    -- (F607.GrandTotal * F607.ExchangeRate)  AS GrandTotalLocal,
    F607.TotalTransaction+F607.PPNAmount AS GrandTotalLocal,
    F607.CreatedBy, 
	f607.fbill_ppj,
    F607.CreatedBy, 
    F607.CreatedDate, 
    F607.UpdatedBy, 
    F607.UpdatedDate
    
FROM F607
 -- INNER JOIN F103 ON  F607.BankAccountCode = F103.Code
  -- INNER JOIN F001 ON F607.BranchCode = F001.Code
  -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  left JOIN F106 ON F607.CustomerCode = F106.Code
  LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
  -- LEFT JOIN F108 ON F607.SalesmanCode = F108.Code
  -- LEFT JOIN F110 ON F607.WareHouseCode = F110.Code
WHERE 
    -- F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate
    CONVERT(CONCAT(SUBSTR(CONVERT(TransactionDate, CHAR(10)),1,4),
SUBSTR(CONVERT(TransactionDate, CHAR(10)),6,2),SUBSTR(CONVERT(TransactionDate, CHAR(10)),9,2)), DECIMAL) >= prmFirstDate AND 
    CONVERT(CONCAT(SUBSTR(CONVERT(TransactionDate, CHAR(10)),1,4),
SUBSTR(CONVERT(TransactionDate, CHAR(10)),6,2),SUBSTR(CONVERT(TransactionDate, CHAR(10)),9,2)), DECIMAL) <= prmLastDate
    and LEFT(F607.INVno,7)='INV/BSP'
    
ORDER BY F607.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Get_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Get_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Get_InvNonDO`(
  IN prmFirstDate varchar(8), IN prmLastDate VARCHAR(8))
BEGIN 
	SELECT 
    F607.BranchCode,
    -- F001.Name AS BranchName,
    F607.INVNo,
	F607.PostingSend,
	F607.PostingRec,
    F607.RefNo,
    F607.VoucherNo, 
    F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
    F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
IF(ISNULL(f607.BPno), "", f607.BPno) AS BPno,
IF(ISNULL(f607b.FakDate), NOW(), f607b.FakDate) AS FakDate,
	F607.FakDate,
	F607.StatusRef,
	F607.FakNoRef,
	F607.FakRefDate,
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
    F607.PaymentTermCode,
    -- F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
    F607.ExchangeRate, 
    F607.CustomerCode,
    IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
    F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F607.WarehouseCode,
    -- F110.Name AS WarehouseName,
    F106.Name as Description, 
    F607.TotalTransaction AS TotalTransactionForeign,
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
    F607.DiscountPercent,
    F607.DiscountAmount AS DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
    F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
    F607.PPNPercent,
    F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
    F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	F607.MateraiFeeAfterPPN   AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
   F607.PackingFeeAfterPPN 			      AS PackingFeeAfterPPNForeign, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
    F607.FinalDiscount AS FinalDiscountForeign,
    (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	F607.DeductionAfterPPn 			      AS DeductionAfterPPnForeign, 
	(F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal,
      F607.TotalTransaction+F607.PackingFeeAfterPPN + F607.OtherFeeBeforePPN AS GrandTotalForeign,
    -- (F607.GrandTotal * F607.ExchangeRate)  AS GrandTotalLocal,
    F607.TotalTransaction+F607.PackingFeeAfterPPN + F607.OtherFeeBeforePPN AS GrandTotalLocal,
    F607.CreatedBy, 
	f607.fbill_ppj,
    F607.CreatedBy, 
    F607.CreatedDate, 
    F607.UpdatedBy, 
    F607.UpdatedDate
    
FROM F607
 -- INNER JOIN F103 ON  F607.BankAccountCode = F103.Code
  -- INNER JOIN F001 ON F607.BranchCode = F001.Code
  -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  left JOIN F106 ON F607.CustomerCode = F106.Code
  LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
  -- LEFT JOIN F108 ON F607.SalesmanCode = F108.Code
  -- LEFT JOIN F110 ON F607.WareHouseCode = F110.Code
WHERE 
    -- F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate
    CONVERT(CONCAT(SUBSTR(CONVERT(TransactionDate, CHAR(10)),1,4),
SUBSTR(CONVERT(TransactionDate, CHAR(10)),6,2),SUBSTR(CONVERT(TransactionDate, CHAR(10)),9,2)), DECIMAL) >= prmFirstDate AND 
    CONVERT(CONCAT(SUBSTR(CONVERT(TransactionDate, CHAR(10)),1,4),
SUBSTR(CONVERT(TransactionDate, CHAR(10)),6,2),SUBSTR(CONVERT(TransactionDate, CHAR(10)),9,2)), DECIMAL) <= prmLastDate
    AND LEFT(F607.INVno,6)='INV/MP'
    
    
ORDER BY F607.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Get_InvNonDORec` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Get_InvNonDORec` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Get_InvNonDORec`(IN prmBranchCode varchar(50), 
  IN prmFirstDate datetime, IN prmLastDate datetime)
BEGIN 
  SELECT 
    F607.BranchCode,
    F001.Name As BranchName,
    F607.INVNo,
	F607.PostingSend,
F607.PostingRec,
    F607.RefNo,
    F607.VoucherNo, 
    F607.TransactionDate, 
F607.FromDate,
F607.ToDate,
    F607.CurrencyCode,
    F006.Name As CurrencyName, 
F607.FakNo,
F607.FakDate,
F607.StatusRef,
F607.FakNoRef,
F607.FakRefDate,
F607.BankAccountCode,
F103.Name as BankAccountName,
    F607.PaymentTermCode,
    F018.Name As PaymentTermName,
    F018.Days As PaymentTermDays, 
    F607.ExchangeRate, 
    F607.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    F607.SalesmanCode,
    F108.Name As SalesmanName,
    F607.WarehouseCode,
    F110.Name As WarehouseName,
    F607.Description, 
    F607.TotalTransaction As TotalTransactionForeign,
    (F607.TotalTransaction * F607.ExchangeRate) As TotalTransactionLocal,
    F607.DiscountPercent,
    F607.DiscountAmount As DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) As DiscountAmountLocal,
    F607.OtherFeeBeforePPN As OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) As OtherFeeBeforePPNLocal,
    F607.PPNPercent,
    F607.PPNAmount As PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) As PPNAmountLocal,
    F607.OtherFeeAfterPPN As OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) As OtherFeeAfterPPNLocal,
F607.MateraiFeeAfterPPN 			      as MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   as MateraiFeeAfterPPNLocal, 
   F607.PackingFeeAfterPPN 			      as PackingFeeAfterPPNForeign, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   as PackingFeeAfterPPNLocal, 
   F607.AsuransiFeeAfterPPN 			      as AsuransiFeeAfterPPNForeign, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   as AsuransiFeeAfterPPNLocal, 
   F607.PPh23FeeAfterPPN 			      as PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   as PPh23FeeAfterPPNLocal, 
    F607.FinalDiscount As FinalDiscountForeign,
    (F607.FinalDiscount * F607.ExchangeRate) As FinalDiscountLocal,
F607.DeductionAfterPPn 			      as DeductionAfterPPnForeign, 
	(F607.DeductionAfterPPn * F607.ExchangeRate)   as DeductionAfterPPnLocal,
    F607.GrandTotal As GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) As GrandTotalLocal,
    F607.CreatedBy, 
    F607.CreatedDate, 
    F607.UpdatedBy, 
    F607.UpdatedDate
    
FROM F607
Inner Join F103 On  F607.BankAccountCode = F103.Code
  INNER JOIN F001 ON F607.BranchCode = F001.Code
  INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  INNER JOIN F106 ON F607.CustomerCode = F106.Code
  LEFT JOIN F108 ON F607.SalesmanCode = F108.Code
  LEFT JOIN F110 ON F607.WareHouseCode = F110.Code
WHERE 
    F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND LENGTH(F607.SODNo) = 0
AND F607.PostingSend = 1
ORDER BY F607.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Get_InvNonDO_PostingStatus` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Get_InvNonDO_PostingStatus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Get_InvNonDO_PostingStatus`(IN prmBranchCode varchar(50), 
  IN prmFirstDate datetime, IN prmLastDate datetime, IN prmPostingStatus boolean)
BEGIN 
  SELECT 
    F607.BranchCode,
    F001.Name As BranchName,
    F607.INVNo,
	F607.PostingSend,
F607.PostingRec,
    F607.RefNo,
    F607.VoucherNo, 
    F607.TransactionDate, 
    F607.CurrencyCode,
    F006.Name As CurrencyName, 
F607.FakNo,
F607.FakDate,
F607.StatusRef,
F607.FakNoRef,
F607.FakRefDate,
F607.BankAccountCode,
F103.Name as BankAccountName,
    F607.PaymentTermCode,
    F018.Name As PaymentTermName,
    F018.Days As PaymentTermDays, 
    F607.ExchangeRate, 
    F607.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    F607.SalesmanCode,
    F108.Name As SalesmanName,
    F607.WarehouseCode,
    F110.Name As WarehouseName,
    F607.Description, 
    F607.TotalTransaction As TotalTransactionForeign,
    (F607.TotalTransaction * F607.ExchangeRate) As TotalTransactionLocal,
    F607.DiscountPercent,
    F607.DiscountAmount As DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) As DiscountAmountLocal,
    F607.OtherFeeBeforePPN As OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) As OtherFeeBeforePPNLocal,
    F607.PPNPercent,
    F607.PPNAmount As PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) As PPNAmountLocal,
    F607.OtherFeeAfterPPN As OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) As OtherFeeAfterPPNLocal,
F607.MateraiFeeAfterPPN 			      as MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   as MateraiFeeAfterPPNLocal, 
   F607.PackingFeeAfterPPN 			      as PackingFeeAfterPPNForeign, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   as PackingFeeAfterPPNLocal, 
   F607.AsuransiFeeAfterPPN 			      as AsuransiFeeAfterPPNForeign, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   as AsuransiFeeAfterPPNLocal, 
   F607.PPh23FeeAfterPPN 			      as PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   as PPh23FeeAfterPPNLocal, 
    F607.FinalDiscount As FinalDiscountForeign,
    (F607.FinalDiscount * F607.ExchangeRate) As FinalDiscountLocal,
    F607.GrandTotal As GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) As GrandTotalLocal,
    F607.CreatedBy, 
    F607.CreatedDate, 
    F607.UpdatedBy, 
    F607.UpdatedDate
    
FROM F607
Inner Join F103 On  F607.BankAccountCode = F103.Code
  INNER JOIN F001 ON F607.BranchCode = F001.Code
  INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  INNER JOIN F106 ON F607.CustomerCode = F106.Code
  LEFT JOIN F108 ON F607.SalesmanCode = F108.Code
  LEFT JOIN F110 ON F607.WareHouseCode = F110.Code
WHERE 
    F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND LENGTH(F607.SODNo) = 0
AND PostingSend = prmPostingStatus
ORDER BY F607.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Get_InvNonDO_PostingStatusRec` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Get_InvNonDO_PostingStatusRec` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Get_InvNonDO_PostingStatusRec`(IN prmBranchCode varchar(50), 
  IN prmFirstDate datetime, IN prmLastDate datetime, IN prmPostingStatus boolean)
BEGIN 
  SELECT 
    F607.BranchCode,
    F001.Name As BranchName,
    F607.INVNo,
	F607.PostingSend,
F607.PostingRec,
    F607.RefNo,
    F607.VoucherNo, 
    F607.TransactionDate, 
    F607.CurrencyCode,
    F006.Name As CurrencyName, 
F607.FakNo,
F607.FakDate,
F607.StatusRef,
F607.FakNoRef,
F607.FakRefDate,
F607.BankAccountCode,
F103.Name as BankAccountName,
    F607.PaymentTermCode,
    F018.Name As PaymentTermName,
    F018.Days As PaymentTermDays, 
    F607.ExchangeRate, 
    F607.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    F607.SalesmanCode,
    F108.Name As SalesmanName,
    F607.WarehouseCode,
    F110.Name As WarehouseName,
    F607.Description, 
    F607.TotalTransaction As TotalTransactionForeign,
    (F607.TotalTransaction * F607.ExchangeRate) As TotalTransactionLocal,
    F607.DiscountPercent,
    F607.DiscountAmount As DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) As DiscountAmountLocal,
    F607.OtherFeeBeforePPN As OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) As OtherFeeBeforePPNLocal,
    F607.PPNPercent,
    F607.PPNAmount As PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) As PPNAmountLocal,
    F607.OtherFeeAfterPPN As OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) As OtherFeeAfterPPNLocal,
F607.MateraiFeeAfterPPN 			      as MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   as MateraiFeeAfterPPNLocal, 
   F607.PackingFeeAfterPPN 			      as PackingFeeAfterPPNForeign, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   as PackingFeeAfterPPNLocal, 
   F607.AsuransiFeeAfterPPN 			      as AsuransiFeeAfterPPNForeign, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   as AsuransiFeeAfterPPNLocal, 
   F607.PPh23FeeAfterPPN 			      as PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   as PPh23FeeAfterPPNLocal, 
    F607.FinalDiscount As FinalDiscountForeign,
    (F607.FinalDiscount * F607.ExchangeRate) As FinalDiscountLocal,
    F607.GrandTotal As GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) As GrandTotalLocal,
    F607.CreatedBy, 
    F607.CreatedDate, 
    F607.UpdatedBy, 
    F607.UpdatedDate
    
FROM F607
Inner Join F103 On  F607.BankAccountCode = F103.Code
  INNER JOIN F001 ON F607.BranchCode = F001.Code
  INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  INNER JOIN F106 ON F607.CustomerCode = F106.Code
  LEFT JOIN F108 ON F607.SalesmanCode = F108.Code
  LEFT JOIN F110 ON F607.WareHouseCode = F110.Code
WHERE 
    F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND LENGTH(F607.SODNo) = 0
AND PostingSend = 1
and PostingRec = prmPostingStatus
ORDER BY F607.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_get_Pay` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_get_Pay` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_get_Pay`(
   IN prmBranchCode VARCHAR(50),
   IN prmINVNo varchar(50)
)
BEGIN
  SELECT
    F607.PayDescription
  FROM F607
  WHERE 
    F607.BranchCode = prmBranchCode AND F607.INVNo = prmINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_get_PaymentNotes` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_get_PaymentNotes` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_get_PaymentNotes`(
   IN prmBranchCode VARCHAR(50),
   IN prmINVNo varchar(50)
)
BEGIN
	SELECT
	F607.INVNo, 
	F607.TransactionDate,
	F106.Code 		as CustomerCode, 
	F106.Name 		as CustomerName, 
	F106.ContactPerson 	as CustomerContact,
        F607.ExchangeRate, 
	F106.Address	 	as CustomerAddress, 
	F106.ZipCode 		as CustomerZipCode, 
	F106.Phone1 		as CustomerPhone1, 
	F106.Phone2 		as CustomerPhone2, 
	F106.Fax 		as CustomerFax, 
	F106.EmailAddress 	as CustomerEmailAddress, 
	F010.Code 		as CustomerCountryCode,  
	F010.Name 		as CustomerCountryName, 
	F009.Code 		as CustomerCityCode,  
	F009.Name 		as CustomerCityName, 
        F607.Description	as INVDescriptionHeader, 
	F607.PayDescription,	
        F607.GrandTotal 	as INVGrandTotal, 
	(F607.GrandTotal * F607.ExchangeRate) as INVGrandTotalAmountLocal	
	from F607 
	    INNER JOIN F106 on  F607.CustomerCode = F106.Code 
	    INNER JOIN F009 on F106.CityCode     = F009.Code 
	    INNER JOIN F010 on F106.CountryCode  = F010.Code     
	WHERE 
		F607.BranchCode = prmBranchCode AND
		F607.INVNo = prmINVNo;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_insert`(
	prmINVNo                 varchar(50),           
	prmSODNo                 varchar(50),    
	prmTransactionDate       datetime,  
prmFromDate       datetime,
prmToDate       datetime,    
	prmCurrencyCode          varchar(50),  
prmBankAccountCode varchar(50), 
	prmPaymentTermCode       varchar(50),   
	prmExchangeRate          decimal(18,4), 
	prmCustomerCode          varchar(50),   
	prmSalesmanCode          varchar(50),   
	prmDescription           text,          
	prmTotalTransaction      decimal(18,4), 
	prmDiscountPercent       decimal(18,4),  
	prmDiscountAmount        decimal(18,4), 
	prmPPNPercent            decimal(18,4),  
	prmPPNAmount             decimal(18,4), 
	prmGrandTotal            decimal(18,4), 
	prmPaidAmount            decimal(18,4), 
	prmAssignStatus          decimal(1,0),  
	prmDeleteStatus          tinyint(1),  
        prmTaxStatus             tinyint(1),  
	prmOtherFeeBeforePPN     decimal(18,4),   
	prmOtherFeeAfterPPN      decimal(18,4), 
prmMateraiFeeAfterPPN    decimal(18,4),  
prmPackingFeeAfterPPN    decimal(18,4),  
prmAsuransiFeeAfterPPN   decimal(18,4), 
prmPPh23FeeAfterPPN      decimal(18,4), 
	prmBranchCode            varchar(50),   
	prmWarehouseCode         varchar(50),  
	prmCreatedBy             varchar(50)    
)
BEGIN
	insert into F607
	(
	INVNo,                        
	SODNo,
	StatusRef,
	TransactionDate, 
FromDate,
ToDate,        
	CurrencyCode,    
BankAccountCode,      
	PaymentTermCode,      
	ExchangeRate,     
	CustomerCode,         
	SalesmanCode,         
	Description,          
	TotalTransaction,     
	DiscountPercent,      
	DiscountAmount,       
	PPNPercent,           
	PPNAmount,            
	GrandTotal,           
	PaidAmount,           
	AssignStatus,         
	DeleteStatus,         
        TaxStatus,
	OtherFeeBeforePPN, 
	OtherFeeAfterPPN,    
MateraiFeeAfterPPN,  
PackingFeeAfterPPN,  
AsuransiFeeAfterPPN, 
PPh23FeeAfterPPN,         
	BranchCode,           
	WarehouseCode,      
	CreatedBy,      
	CreatedDate 
	)
	value
	(
	prmINVNo,                        
	prmSODNo,
	'N',
	prmTransactionDate,   
prmFromDate,
prmToDate,      
	prmCurrencyCode,    
prmBankAccountCode,     
	prmPaymentTermCode,      
	prmExchangeRate,         
	prmCustomerCode,         
	prmSalesmanCode,         
	prmDescription,          
	prmTotalTransaction,     
	prmDiscountPercent,      
	prmDiscountAmount,       
	prmPPNPercent,           
	prmPPNAmount,            
	prmGrandTotal,           
	prmPaidAmount,           
	prmAssignStatus,         
	prmDeleteStatus,         
	prmTaxStatus,         
	prmOtherFeeBeforePPN,
	prmOtherFeeAfterPPN,
prmMateraiFeeAfterPPN,  
prmPackingFeeAfterPPN,  
prmAsuransiFeeAfterPPN, 
prmPPh23FeeAfterPPN, 
	prmBranchCode,           
	prmWarehouseCode,       
	prmCreatedBy,
	NOW()
	);         
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Insert_InvManual` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Insert_InvManual` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Insert_InvManual`( 
    -- IN prmBranchCode VARCHAR(50), 
    IN prmINVNo VARCHAR(50), 
    IN prmVoucherNo VARCHAR(50), 
    IN prmTransactionDate datetime, 
    IN prmCurrencyCode VARCHAR(50), 
	IN prmBankAccountCode varchar(50), 
    IN prmPaymentTermCode VARCHAR(50), 
    IN prmExchangeRate decimal(18,4), 
    IN prmCustomerCode VARCHAR(50), 
    IN prmSalesmanCode VARCHAR(50),
    IN prmWarehouseCode VARCHAR(50),  
    IN prmDescription Text, 
    IN prmTaxStatus TinyInt,
    IN prmTotalTransaction decimal(18,4),
    IN prmDiscountPercent decimal(4,2), 
    IN prmDiscountAmount decimal(18,4),
    IN prmOtherFeeBeforePPN decimal(18,4),
    IN prmPPNPercent decimal(4,2),
    IN prmPPNAmount decimal(18,4), 
    IN prmOtherFeeAfterPPN decimal(18,4),
IN prmMateraiFeeAfterPPN    decimal(18,4),  
IN prmPackingFeeAfterPPN    decimal(18,4),  
IN prmAsuransiFeeAfterPPN   decimal(18,4), 
IN prmPPh23FeeAfterPPN      decimal(18,4), 
    IN prmFinalDiscount decimal(18,4),
IN prmDeductionAfterPPn decimal(18,4),
    IN prmGrandTotal decimal(18,4), 
    IN prmCreatedBy VARCHAR(50) 
    
 )
BEGIN 
  INSERT INTO F607 ( 
    F607.BranchCode, 
    F607.INVNo, 
	F607.StatusRef,
    F607.VoucherNo, 
    F607.TransactionDate,
    F607.CurrencyCode, 
F607.BankAccountCode,
    F607.PaymentTermCode, 
    F607.ExchangeRate, 
    F607.CustomerCode, 
    F607.SalesmanCode,
    F607.WarehouseCode,  
    F607.Description, 
    F607.TaxStatus,
    F607.TotalTransaction, 
    F607.DiscountPercent, 
    F607.DiscountAmount, 
    F607.OtherFeeBeforePPN, 
    F607.PPNPercent, 
    F607.PPNAmount, 
    F607.OtherFeeAfterPPN, 
F607.MateraiFeeAfterPPN,  
F607.PackingFeeAfterPPN,  
F607.AsuransiFeeAfterPPN, 
F607.PPh23FeeAfterPPN, 
    F607.FinalDiscount,
F607.DeductionAfterPPn,
    F607.GrandTotal, 
    F607.CreatedBy, 
    F607.CreatedDate
    
    
 ) VALUES ( 
  'PKB', 
    prmINVNo, 
'N',
   prmVoucherNo, 
    prmTransactionDate,
    prmCurrencyCode, 
prmBankAccountCode,
    prmPaymentTermCode, 
    prmExchangeRate, 
    prmCustomerCode, 
    prmSalesmanCode,
    prmWarehouseCode,  
    prmDescription, 
    prmTaxStatus,
    prmTotalTransaction, 
    prmDiscountPercent, 
    prmDiscountAmount, 
    prmOtherFeeBeforePPN, 
    prmPPNPercent, 
    prmPPNAmount, 
    prmOtherFeeAfterPPN, 
prmMateraiFeeAfterPPN,  
prmPackingFeeAfterPPN,  
prmAsuransiFeeAfterPPN, 
prmPPh23FeeAfterPPN, 
    prmFinalDiscount,
prmDeductionAfterPPn,
    prmGrandTotal, 
    prmCreatedBy, 
    Now() 
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Insert_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Insert_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Insert_InvNonDO`( 
   --  IN prmBranchCode VARCHAR(50), 
    IN prmINVNo VARCHAR(50), 
    IN prmVoucherNo VARCHAR(50), 
    IN prmTransactionDate datetime, 
	in prmDueDate DATETIME,
IN prmFromDate datetime,
IN prmToDate datetime, 
    IN prmCurrencyCode VARCHAR(50), 
IN prmBankAccountCode varchar(50), 
    IN prmPaymentTermCode VARCHAR(50), 
    IN prmExchangeRate decimal(18,4), 
    IN prmCustomerCode VARCHAR(50), 
    IN prmSalesmanCode VARCHAR(50),
    IN prmWarehouseCode VARCHAR(50),  
    IN prmDescription Text, 
    IN prmTaxStatus TinyInt,
    IN prmTotalTransaction decimal(18,4),
    IN prmDiscountPercent decimal(4,2), 
    IN prmDiscountAmount decimal(18,4),
    IN prmOtherFeeBeforePPN decimal(18,4),
    IN prmPPNPercent decimal(4,2),
    IN prmPPNAmount decimal(18,4), 
    IN prmOtherFeeAfterPPN decimal(18,4),
IN prmMateraiFeeAfterPPN    decimal(18,4),  
IN prmPackingFeeAfterPPN    decimal(18,4),  
IN prmAsuransiFeeAfterPPN   decimal(18,4), 
IN prmPPh23FeeAfterPPN      decimal(18,4), 
    IN prmFinalDiscount decimal(18,4),
IN prmDeductionAfterPPn decimal(18,4),
in prmfbill_ppj DECIMAL(18,4),
    IN prmGrandTotal decimal(18,4), 
    IN prmCreatedBy VARCHAR(50) 
    
 )
BEGIN 
  INSERT INTO F607 ( 
   --  F607.BranchCode, 
    F607.INVNo, 
	F607.StatusRef,
    F607.VoucherNo, 
    F607.TransactionDate,
	f607.DueDate,
F607.FromDate,
F607.ToDate,    
    F607.CurrencyCode, 
F607.BankAccountCode,
    F607.PaymentTermCode, 
    F607.ExchangeRate, 
    F607.CustomerCode, 
    F607.SalesmanCode,
    F607.WarehouseCode,  
    F607.Description, 
    F607.TaxStatus,
    F607.TotalTransaction, 
    F607.DiscountPercent, 
    F607.DiscountAmount, 
    F607.OtherFeeBeforePPN, 
    F607.PPNPercent, 
    F607.PPNAmount, 
    F607.OtherFeeAfterPPN, 
F607.MateraiFeeAfterPPN,  
F607.PackingFeeAfterPPN,  
F607.AsuransiFeeAfterPPN, 
F607.PPh23FeeAfterPPN, 
    F607.FinalDiscount,
F607.DeductionAfterPPn,
f607.fbill_ppj,
    F607.GrandTotal, 
    F607.CreatedBy, 
    F607.CreatedDate
    
    
 ) VALUES ( 
  --   prmBranchCode, 
    prmINVNo, 
'N',
   prmVoucherNo, 
    prmTransactionDate,
    prmDueDate,
prmFromDate,
prmToDate,    
    prmCurrencyCode, 
prmBankAccountCode,
    prmPaymentTermCode, 
    prmExchangeRate, 
    prmCustomerCode, 
    prmSalesmanCode,
    prmWarehouseCode,  
    prmDescription, 
    prmTaxStatus,
    prmTotalTransaction, 
    prmDiscountPercent, 
    prmDiscountAmount, 
    prmOtherFeeBeforePPN, 
    prmPPNPercent, 
    prmPPNAmount, 
    prmOtherFeeAfterPPN, 
prmMateraiFeeAfterPPN,  
prmPackingFeeAfterPPN,  
prmAsuransiFeeAfterPPN, 
prmPPh23FeeAfterPPN, 
    prmFinalDiscount,
prmDeductionAfterPPn,
prmfbill_ppj,
    prmGrandTotal, 
    prmCreatedBy, 
    Now() 
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Search_ByItemAndCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Search_ByItemAndCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Search_ByItemAndCode`(
  prmBranchCode VarChar(50), 
  prmCustomerCode VarChar(50), 
  prmSalesmanCode VarChar(50), 
  prmItemCode VarChar(50),
  prmCurrencyCode VarChar(50),
  prmCode varChar(50))
BEGIN	
	SELECT
		F607.INVNo,
		F607.TransactionDate,
		F607.CurrencyCode,
		F608.Quantity,
		F608.Price,
		F608.DiscountPercent1,
		F608.DiscountPercent2,
		F608.DiscountPercent3,
		F607.DiscountPercent,
		F607.PPNPercent
		
	FROM F608
	INNER JOIN F607 ON F607.BranchCode = prmBranchCode AND F608.INVNo = F607.INVNo
	WHERE 
		F608.BranchCode = prmBranchCode AND
		F608.ItemCode = prmItemCode AND
		F607.CustomerCode = prmCustomerCode AND
		F607.SalesmanCode = prmSalesmanCode AND
		F607.CurrencyCode = prmCurrencyCode AND
		F607.INVNo = prmCode
	ORDER BY
		F608.INVNo DESC;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_update`(
        prmINVNo                 varchar(50),           
	prmSODNo                 varchar(50),    
	prmStatusRef varchar(1),
	-- prmVoucherNo             varchar(50),   
	prmTransactionDate       datetime,     
prmFromDate       datetime,
prmToDate       datetime,  
	prmCurrencyCode          varchar(50), 
IN prmBankAccountCode varchar(50),  
	prmPaymentTermCode       varchar(50),   
	prmExchangeRate          decimal(18,4), 
	prmCustomerCode          varchar(50),   
	prmDescription           text,          
	prmTotalTransaction      decimal(18,4), 
	prmDiscountPercent       decimal(18,4),  
	prmDiscountAmount        decimal(18,4), 
	prmPPNPercent            decimal(18,4),  
	prmPPNAmount             decimal(18,4), 
	prmGrandTotal            decimal(18,4), 
	prmPaidAmount            decimal(18,4), 
	prmAssignStatus          decimal(18,4),  
	prmDeleteStatus          tinyint,    
        prmTaxStatus             tinyint,    
	prmOtherFeeBeforePPN     decimal(18,4), 
	prmOtherFeeAfterPPN      decimal(18,4), 
prmMateraiFeeAfterPPN    decimal(18,4),  
prmPackingFeeAfterPPN    decimal(18,4),  
prmAsuransiFeeAfterPPN   decimal(18,4), 
prmPPh23FeeAfterPPN      decimal(18,4), 
	prmBranchCode            varchar(50),   
	prmWarehouseCode         varchar(50),  
	prmUpdatedBy             varchar(50),    
	-- prmCreatedDate           datetime  
        prmOldCode VARCHAR(50) 
)
BEGIN
		UPDATE F607 SET
			INVNo                			= prmINVNo,               
			SODNo                			= prmSODNo,
		StatusRef 		= prmStatusRef,
			-- VoucherNo            		 	= prmVoucherNo,
			TransactionDate   			= prmTransactionDate, 
FromDate=prmFromDate,
ToDate=prmToDate, 
			CurrencyCode     			= prmCurrencyCode, 
BankAccountCode=prmBankAccountCode,
			PaymentTermCode 			= prmPaymentTermCode,    
			ExchangeRate    			= prmExchangeRate,
			CustomerCode     			= prmCustomerCode,   
			-- SalesmanCode   				= prmSalesmanCode,    
			Description  				= prmDescription,       
			TotalTransaction 			= prmTotalTransaction,   
			DiscountPercent 		        = prmDiscountPercent,   
			DiscountAmount   		        = prmDiscountAmount,    
			PPNPercent   				= prmPPNPercent,      
			PPNAmount   				= prmPPNAmount,        
			GrandTotal  				= prmGrandTotal,         
			PaidAmount 				= prmPaidAmount,         
			AssignStatus  				= prmAssignStatus,       
			DeleteStatus 				= prmDeleteStatus,       
			TaxStatus 				= prmTaxStatus,       
			OtherFeeBeforePPN 			= prmOtherFeeBeforePPN,   
			OtherFeeAfterPPN 			= prmOtherFeeAfterPPN,  
MateraiFeeAfterPPN=prmMateraiFeeAfterPPN,  
PackingFeeAfterPPN=prmPackingFeeAfterPPN,  
AsuransiFeeAfterPPN=prmAsuransiFeeAfterPPN, 
PPh23FeeAfterPPN=prmPPh23FeeAfterPPN,       
			BranchCode  				= prmBranchCode,        
			WarehouseCode 				= prmWarehouseCode,     
			UpdatedBy 				= prmUpdatedBy
			-- UpdatedDate				= prmUpdatedDate
		WHERE
			INVNo = prmOldCode
			AND 
			INVNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_UpdateGen` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_UpdateGen` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_UpdateGen`( 
        IN prmOldINVNo VARCHAR(50),
  
    IN prmDescription Text, 
    IN prmRefNo varchar(50),
    IN prmTaxStatus TinyInt,   
IN prmMateraiFeeAfterPPN    decimal(18,4),  
    IN prmPPNPercent Decimal(4,2), 
    IN prmPPNAmount Decimal(18,4), 
      IN prmGrandTotal Decimal(18,4), 
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE F607 SET 
    
    
    Description = prmDescription, 
    RefNo = prmRefNo,
    TaxStatus = prmTaxStatus,
   
MateraiFeeAfterPPN=prmMateraiFeeAfterPPN,  
    PPNPercent = prmPPNPercent, 
    PPNAmount = prmPPNAmount, 
    GrandTotal = prmGrandTotal,
    UpdatedBy = prmUpdatedBy, 
    UpdatedDate = Now()
  WHERE  F607.INVNo = prmOldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Update_FakNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Update_FakNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Update_FakNo`( 
    prmOldBranchCode VARCHAR(50),
    prmOldINVNo VARCHAR(50),     
    prmFakNo VARCHAR(50),      
	prmFakDate       datetime, 
	prmStatusFak          varchar(1),
	prmUpdatedBy             varchar(50)  
 )
BEGIN 
  UPDATE F607 SET    
    FakNo = prmFakNo, 
    FakDate = NOW(),
StatusFak=prmStatusFak,
UpdatedBy=prmUpdatedBy    
  WHERE F607.BranchCode = prmOldBranchCode AND F607.INVNo = prmOldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Update_FakNoRef` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Update_FakNoRef` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Update_FakNoRef`( 
    IN prmOldBranchCode VARCHAR(50),
    IN prmOldINVNo VARCHAR(50),     
    IN prmFakNoRef VARCHAR(50)
 )
BEGIN 
  UPDATE F607 SET    
    FakNoRef = prmFakNoRef, 
    FakRefDate = NOW()    
  WHERE F607.BranchCode = prmOldBranchCode AND F607.INVNo = prmOldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Update_GiroReject_F504PaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Update_GiroReject_F504PaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_Update_GiroReject_F504PaidAmount`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE F607 SET
			PaidAmount = PaidAmount - prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Update_InvManual` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Update_InvManual` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_Update_InvManual`(
prmBranchCode VARCHAR(50), 
        prmSODNo                 varchar(50),    
	prmTransactionDate       datetime,     
	
	prmBankAccountCode varchar(50),  
	
	
	prmCustomerCode          varchar(50),   
	     
	prmTotalTransaction      decimal(18,4), 
	prmDiscountPercent       decimal(18,4),  
	prmDiscountAmount        decimal(18,4), 
	prmPPNPercent            decimal(18,4),  
	prmPPNAmount             decimal(18,4), 
	prmGrandTotal            decimal(18,4), 
	prmDeductionAfterPPn DECIMAL(18,4),
	prmTaxStatus             tinyint,    
	prmOtherFeeBeforePPN     decimal(18,4), 
	prmOtherFeeAfterPPN      decimal(18,4), 
	prmMateraiFeeAfterPPN    decimal(18,4),  
	prmPackingFeeAfterPPN    decimal(18,4),  
	prmAsuransiFeeAfterPPN   decimal(18,4), 
	prmPPh23FeeAfterPPN      decimal(18,4), 
	
	prmWarehouseCode         varchar(50),  
	prmUpdatedBy             varchar(50),    
	-- prmCreatedDate           datetime  
        prmOldCode VARCHAR(50) 
)
BEGIN
		UPDATE F607 SET
			-- INVNo                			= prmINVNo,    
			BranchCode=prmBranchCode,           
			SODNo                			= prmSODNo,
		
			-- VoucherNo            		 	= prmVoucherNo,
			TransactionDate   			= prmTransactionDate, 
			
BankAccountCode=prmBankAccountCode,
			
			
			CustomerCode     			= prmCustomerCode,   
			-- SalesmanCode   				= prmSalesmanCode,    
			   
			TotalTransaction 			= prmTotalTransaction,   
			DiscountPercent 		        = prmDiscountPercent,   
			DiscountAmount   		        = prmDiscountAmount,    
			PPNPercent   				= prmPPNPercent,      
			PPNAmount   				= prmPPNAmount,        
			GrandTotal  				= prmGrandTotal,   
			DeductionAfterPPn=prmDeductionAfterPPn,      
			TaxStatus 				= prmTaxStatus,       
			OtherFeeBeforePPN 			= prmOtherFeeBeforePPN,   
			OtherFeeAfterPPN 			= prmOtherFeeAfterPPN,  
MateraiFeeAfterPPN=prmMateraiFeeAfterPPN,  
PackingFeeAfterPPN=prmPackingFeeAfterPPN,  
AsuransiFeeAfterPPN=prmAsuransiFeeAfterPPN, 
PPh23FeeAfterPPN=prmPPh23FeeAfterPPN,       
			       
			WarehouseCode 				= prmWarehouseCode,     
			UpdatedBy 				= prmUpdatedBy
			-- UpdatedDate				= prmUpdatedDate
		WHERE
			INVNo = prmOldCode
			AND 
			INVNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Update_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Update_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Update_InvNonDO`( 
    IN prmOldBranchCode VARCHAR(50),
    IN prmOldINVNo VARCHAR(50),
     IN prmBranchCode VARCHAR(50),
    IN prmSODNo VARCHAR(50),
prmStatusRef varchar(1),
    IN prmVoucherNo VARCHAR(50), 
    IN prmTransactionDate datetime, 
  IN prmFromDate       datetime,
  IN prmToDate       datetime, 
    IN prmCurrencyCode VARCHAR(50), 
IN prmBankAccountCode varchar(50), 
    IN prmPaymentTermCode VARCHAR(50), 
    IN prmExchangeRate Decimal(18,4), 
    IN prmCustomerCode VARCHAR(50), 
    IN prmSalesmanCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmDescription Text, 
    IN prmRefNo varchar(50),
    IN prmTaxStatus TinyInt,
    IN prmTotalTransaction Decimal(18,4), 
    IN prmDiscountPercent Decimal(4,2), 
    IN prmDiscountAmount Decimal(18,4), 
    IN prmFinalDiscount Decimal(18,4), 
    IN prmOtherFeeBeforePPN Decimal(18,4), 
IN prmMateraiFeeAfterPPN    decimal(18,4),  
IN prmPackingFeeAfterPPN    decimal(18,4),  
IN prmAsuransiFeeAfterPPN   decimal(18,4), 
IN prmPPh23FeeAfterPPN      decimal(18,4), 
    IN prmPPNPercent Decimal(4,2), 
    IN prmPPNAmount Decimal(18,4), 
    IN prmOtherFeeAfterPPN Decimal(18,4), 
IN prmDeductionAfterPPn decimal(18,4),
    IN prmGrandTotal Decimal(18,4), 
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE F607 SET 
    BranchCode = prmBranchCode,
    SODNo = prmSODNo,
StatusRef 		= prmStatusRef,
    VoucherNo = prmVoucherNo, 
    TransactionDate = prmTransactionDate, 
FromDate=prmFromDate,
ToDate=prmToDate, 
    CurrencyCode = prmCurrencyCode, 
BankAccountCode=prmBankAccountCode,
    PaymentTermCode = prmPaymentTermCode, 
    ExchangeRate = prmExchangeRate, 
    CustomerCode = prmCustomerCode, 
    SalesmanCode = prmSalesmanCode, 
    WarehouseCode = prmWarehouseCode, 
    Description = prmDescription, 
    RefNo = prmRefNo,
    TaxStatus = prmTaxStatus,
    TotalTransaction = prmTotalTransaction, 
    DiscountPercent = prmDiscountPercent, 
    DiscountAmount = prmDiscountAmount, 
    FinalDiscount = prmFinalDiscount, 
    OtherFeeBeforePPN = prmOtherFeeBeforePPN, 
MateraiFeeAfterPPN=prmMateraiFeeAfterPPN,  
PackingFeeAfterPPN=prmPackingFeeAfterPPN,  
AsuransiFeeAfterPPN=prmAsuransiFeeAfterPPN, 
PPh23FeeAfterPPN=prmPPh23FeeAfterPPN,  
    PPNPercent = prmPPNPercent, 
    PPNAmount = prmPPNAmount, 
    OtherFeeAfterPPN = prmOtherFeeAfterPPN, 
DeductionAfterPPn=prmDeductionAfterPPn,
    GrandTotal = prmGrandTotal,
    UpdatedBy = prmUpdatedBy, 
    UpdatedDate = Now()
  WHERE F607.BranchCode = prmOldBranchCode AND F607.INVNo = prmOldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Update_PaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Update_PaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_Update_PaidAmount`(
        prmINVNo  varchar(50),
	-- prmBuktiNo  varchar(50),
	-- prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F607 SET
			PaidAmount = PaidAmount + prmPaidAmount
				    -- IFNull((select 0-Amount from F502 prmPaidAmount 
					-- where 
					-- BranchCode=prmBranchCode and 
					-- BKMNo=prmBuktiNo 
				    -- and DocumentNo=prmINVNo),0) + 
				    -- prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Update_PaidAmount_F504` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Update_PaidAmount_F504` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_Update_PaidAmount_F504`(
        prmINVNo  varchar(50),
	-- prmBuktiNo  varchar(50),
	-- prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE F607 SET
			PaidAmount = PaidAmount + prmPaidAmount
				   -- IFNull((select 0-Amount from F504 prmPaidAmount 
					-- where 
					-- BranchCode=prmBranchCode and 
					-- BBMNo=prmBuktiNo 
				   --  and DocumentNo=prmINVNo),0) + 
				   --  prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Update_PaidAmount_F520` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Update_PaidAmount_F520` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_Update_PaidAmount_F520`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE F607 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F520 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					GJMNo=prmBuktiNo 
				     and DocumentNo=prmINVNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Update_PaidAmount_GiroReject` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Update_PaidAmount_GiroReject` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_Update_PaidAmount_GiroReject`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE F607 SET
			PaidAmount = PaidAmount -
				    IFNull((select 0-Amount from F504 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					BBMNo=prmBuktiNo 
				     and DocumentNo=prmINVNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_Update_Pay` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_Update_Pay` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F607_Update_Pay`( 
    IN oldBranchCode VARCHAR(50),
    IN oldINVNo VARCHAR(50),
    IN prmPayDescription Text
 )
BEGIN 
  UPDATE F607 SET 
    PayDescription = prmPayDescription
  WHERE F607.INVNo = oldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_update_posting` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_update_posting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_update_posting`(
    IN prmBranchCode VARCHAR(50),
    IN prmINVNo VARCHAR(50),
    IN prmPosting boolean
)
BEGIN
	UPDATE 
	   F607 
	SET 
	   PostingSend = prmPosting
	WHERE
	   BranchCode = prmBranchCode AND INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F607_update_postingRec` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F607_update_postingRec` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F607_update_postingRec`(
    IN prmBranchCode VARCHAR(50),
    IN prmINVNo VARCHAR(50),
    IN prmPosting boolean
)
BEGIN
	UPDATE 
	   F607 
	SET 
	   PostingRec = prmPosting
	WHERE
	   BranchCode = prmBranchCode AND INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F608_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F608_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F608_delete`(
	prmBranchCode VARCHAR(50),
	prmINVNo VARCHAR(50)
)
BEGIN
		DELETE FROM F608 WHERE  F608.INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F608_F609_Get_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F608_F609_Get_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F608_F609_Get_InvNonDO`(prmINVNo VARCHAR(50))
BEGIN
     SELECT 
	F608.BranchCode, 
	F608.INVNo, 
	
        "ITEM" AS TYPE,
	F608.ItemCode AS CODE,
	f048.ftrade_name AS ItemAlias,
	 -- F013.Name,
CAST('' AS CHAR(50)) AS ProductCode,
 -- cast('' as char(50)) as ProductName,
	F608.Description,
	f608.fbill_typeCode,
	f608.BIllNo,
	f608.BillDate,
		 -- F013.UnitCode,
	F608.Quantity, 
	f608.BiayaBeban,
	F608.BonusQuantity, 
	F608.Price, 
	F608.PPn,
  F608.fbill_pph,
  F608.fbill_adm,
  F608.fbill_ppj,
f608.Total,
	F608.DiscountPercent1, 
	F608.DiscountAmount1, 
	F608.FinalDiscount1, 
	F608.DiscountPercent2, 
	F608.DiscountAmount2, 
	F608.DiscountPercent3, 
	F608.DiscountAmount3, 
	 '' AS AccountCodeC,
        	  '' AS AccountCodeD, 
        	  '' AS AccountCodeListrikC,
        	 '' AS AccountCodeListrikD,
        	  '' AS AccountCodeAirC,
        	  '' AS AccountCodeAirD,
	F608.CreatedBy, 
	F608.CreatedDate, 
	F608.UpdatedBy, 
	F608.UpdatedDate
      FROM F608
	 LEFT JOIN F048 ON F048.funit_code = F608.ItemCode
	WHERE  F608.INVNo = prmINVNo
    -- UNION ALL
      
   --  SELECT 
     --  F609.BranchCode, 
    --   F609.INVNo,
     --  "SERVICE" as Type, 
     --  F609.ServiceCode As Code,
      --  F025.Name,
	-- F609.ProductCode,
 -- F040.Name as ProductName,
   --    F609.Description,
      --  '' As UnitCode,
    --   F609.Quantity,
   --    0 As BonusQuantity, 
   --    F609.Price, 
   --    0 as PPn,
 -- 0 AS fbill_pph,
 --  0 AS fbill_adm,
 --  0 AS fbill_ppj,
    --   F609.DiscountPercent1, 
    --   F609.DiscountAmount1, 
    --   F609.FinalDiscount1, 
     --  F609.DiscountPercent2, 
      -- F609.DiscountAmount2, 
     --  F609.DiscountPercent3, 
    --   F609.DiscountAmount3, 
    --   F609.CreatedBy, 
     --  F609.CreatedDate, 
     --  F609.UpdatedBy, 
    --   F609.UpdatedDate
   --  FROM F609
      -- INNER JOIN F025 ON F609.ServiceCode = F025.Code
  --  INNER JOIN F040 ON F609.ProductCode = F040.Code
   --    WHERE  F609.INVNo = prmINVNo
   ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F608_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F608_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F608_get`(prmBranchCode VARCHAR(50), prmINVNo VARCHAR(50))
BEGIN
		SELECT 	
			F608.INVNo, 
			F608.ItemCode,
			F608.ItemAlias,
			F013.Name as ItemName,
			F013.UnitCode,
			F608.Quantity, 
			F608.BonusQuantity, 
			F608.Price, 
			F608.DiscountPercent1, 
			F608.DiscountAmount1, 
			F608.DiscountPercent2, 
			F608.DiscountAmount2, 
			F608.DiscountPercent3, 
			F608.DiscountAmount3,
			((F608.Quantity * F608.Price) - F608.DiscountAmount1 - F608.DiscountAmount2 - F608.DiscountAmount3) As Total
		FROM
			F608
			INNER JOIN F013 ON F608.ItemCode = F013.Code
		WHERE
			F608.BranchCode = prmBranchCode AND
			F608.INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F608_get_F607_History` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F608_get_F607_History` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F608_get_F607_History`(
	IN prmBranchCode VARCHAR(50),
	IN prmFirstDate Datetime,
	IN prmLastDate Datetime,
	IN prmINVNo varchar(50),  
	IN prmCustomerCode Varchar(50), 
	IN prmCustomerName Varchar(100),
	IN prmCurrencyCode varchar(50),
	IN prmCurrencyName varchar(100),
	IN prmPaymentTermCode Varchar(50),
	IN prmPaymentTermName varchar(100),
	IN prmSalesmanCode Varchar(50),
	IN prmSalesmanName varchar(100),
	IN prmItemCode Varchar(50),
	IN prmItemName varchar(100)
)
BEGIN
	SELECT 	
		        F607.INVNo			as INVNo,
			F607.TransactionDate 		as TransactionDate,
			F607.SODNo 			as SODNo,
			F607.PaymentTermCode 		as PaymentTermCode, 	
			F106.Code 			as CustomerCode, 	
			F106.Name 			as CustomerName, 	
			F607.SalesmanCode 		As SalesmanCode,		
			F006.Code 			as CurrencyCode, 
			F006.Name 			as CurrencyName, 
			F607.ExchangeRate		as ExchangeRate,
			F607.Description 		as Description,	
			F013.Code 			as ItemCode,
			F013.Name		        as ItemName,
			F608.Quantity, 
			F608.BonusQuantity, 
			F608.Price, 
			F608.DiscountPercent1, 
			F608.DiscountAmount1, 
			F608.DiscountPercent2, 
			F608.DiscountAmount2, 
			F608.DiscountPercent3, 
			F608.DiscountAmount3, 
			F607.TotalTransaction   			as INVTotalTransaction, 
		       (F607.TotalTransaction * F607.ExchangeRate) 	as INVTotalTransactionAmountLocal, 
			F607.DiscountPercent 				as INVDiscountPercentHeader, 
			F607.DiscountAmount 				as INVDiscountAmountHeader, 
			(F607.DiscountAmount * F607.ExchangeRate) 	as INVDiscountAmountHeaderLocal, 
			F607.OtherFeeBeforePPN 			        as INVOtherFeeBeforePPNAmount, 
			(F607.OtherFeeBeforePPN * F607.ExchangeRate)    as INVOtherFeeBeforePPNAmountLocal, 
			F607.PPNPercent 				as INVPPNPercent, 
			F607.PPNAmount 					as INVPPNAmount, 
			(F607.PPNAmount * F607.ExchangeRate)		as INVPPNAmountLocal, 
                        F607.OtherFeeAfterPPN 			      as INVOtherFeeAfterPPNAmount, 
			(F607.OtherFeeAfterPPN * F607.ExchangeRate)   as INVOtherFeeAfterPPNAmountLocal, 
			F607.GrandTotal 			  	as INVGrandTotal, 
			(F607.GrandTotal * F607.ExchangeRate) 		as INVGrandTotalAmountLocal, 
			F607.PaidAmount 			   	as INVPaidAmount, 
			(F607.PaidAmount * F607.ExchangeRate) 	   	as INVPaidAmountLocal
		FROM
			F608
			INNER JOIN F607 ON F608.INVNo = F607.INVNo and F608.BranchCode = F607.BranchCode
			INNER JOIN F013 ON F608.ItemCode = F013.Code
			INNER JOIN F106 ON F607.CustomerCode = F106.Code and F607.BranchCode = F106.BranchCode
			INNER JOIN F006 ON F607.CurrencyCode = F006.Code
			INNER JOIN F108 ON F607.SalesmanCode = F108.Code and F607.BranchCode = F108.BranchCode
		 WHERE
		 F607.BranchCode = prmBranchCode AND
		 F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate 
		 And F607.INVNo Like prmINVNo 
		 And F013.Code Like prmItemCode 
		 And F013.Name Like prmItemName 
		 and F106.Code like prmCustomerCode 
		 and F106.Name like prmCustomerName 
		 and F006.Code like prmCurrencyCode 
		 and F006.Name like prmCurrencyName
		 and F108.Code like prmSalesmanCode 
		 and F108.Name like prmSalesmanName
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F608_Get_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F608_Get_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F608_Get_InvNonDO`(prmINVNo varchar(50))
BEGIN 
  SELECT 
    F608.BranchCode, 
    F608.INVNo, 
    F608.ItemCode,
    F013.Name As ItemName,
    F013.UnitCode,
    F608.Quantity, 
    F608.BonusQuantity, 
    F608.Price, 
    F608.DiscountPercent1, 
    F608.DiscountAmount1, 
    F608.FinalDiscount1, 
    F608.DiscountPercent2, 
    F608.DiscountAmount2, 
    F608.DiscountPercent3, 
    F608.DiscountAmount3, 
    F608.CreatedBy, 
    F608.CreatedDate, 
    F608.UpdatedBy, 
    F608.UpdatedDate
FROM F608
  INNER JOIN F013 ON F608.ItemCode = F013.Code
  WHERE F608.INVNo = prmINVNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F608_Get_SumQtyByItemAndInvNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F608_Get_SumQtyByItemAndInvNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F608_Get_SumQtyByItemAndInvNo`(prmBranchCode VarChar(50), prmItemCode VarChar(50), prmINVNo VarChar(50))
BEGIN
		SELECT 
			Sum(F608.Quantity) as INVQuantity 
		FROM F608 
		WHERE 
			F608.BranchCode = prmBranchCode AND 
            F608.ItemCode = prmItemCode AND 
			F608.INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F608_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F608_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F608_insert`(
	-- prmBranchCode VARCHAR(50), 
	prmINVNo VARCHAR(50), 
	prmBIllNo VARCHAR(50), 
	prmBillDate date,
	prmItemCode VARCHAR(50),
        prmItemAlias VARCHAR(100),
        prmDescription VARCHAR(200),
	prmQuantity Decimal(18,4), 
	prmBonusQuantity Decimal(18,4), 
	prmPrice Decimal(18,4), 
	prmPPn DECIMAL(18,4), 
	prmBiayaBeban DECIMAL(18,4), 
	prmfbill_adm DECIMAL(18,4), 
	prmfbill_ppj DECIMAL(18,4), 
	prmfbill_pph DECIMAL(18,4),
	prmDiscountPercent1 Decimal(4,2), 
	prmDiscountAmount1 Decimal(18,4), 
	prmDiscountPercent2 Decimal(4,2), 
	prmDiscountAmount2 Decimal(18,4), 
	prmDiscountPercent3 Decimal(4,2), 
	prmDiscountAmount3 Decimal(18,4), 
	prmTotal DECIMAL(18,4), 
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F608 (
			-- BranchCode, 
			INVNo, 
			BIllNo, 
			BillDate,
			ItemCode,
			ItemAlias,
			Description,
			Quantity, 
			BonusQuantity, 
			Price, 
			PPn,
			BiayaBeban,
			fbill_adm,
			fbill_ppj,
			fbill_pph,
			DiscountPercent1, 
			DiscountAmount1, 
			DiscountPercent2, 
			DiscountAmount2, 
			DiscountPercent3, 
			DiscountAmount3, 
			Total,
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			-- prmBranchCode, 
			prmINVNo, 
			prmBIllNo, 
			prmBillDate,
			prmItemCode,
			prmItemAlias,
			prmDescription,
			prmQuantity, 
			prmBonusQuantity, 
			prmPrice, 
			prmPPn,
			prmBiayaBeban,
			prmfbill_adm,
			prmfbill_ppj,
			prmfbill_pph,
			prmDiscountPercent1, 
			prmDiscountAmount1, 
			prmDiscountPercent2, 
			prmDiscountAmount2, 
			prmDiscountPercent3, 
			prmDiscountAmount3, 
			prmTotal,
			prmCreatedBy, 
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F608_Insert_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F608_Insert_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F608_Insert_InvNonDO`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmINVNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmQuantity Decimal(18,4), 
    IN prmBonusQuantity Decimal(18,4), 
    IN prmPrice Decimal(18,4), 
    IN prmDiscountPercent1 Decimal(4,2), 
    IN prmDiscountAmount1 Decimal(18,4), 
    IN prmFinalDiscount1 Decimal(18,4), 
    IN prmDiscountPercent2 Decimal(4,2), 
    IN prmDiscountAmount2 Decimal(18,4), 
    IN prmDiscountPercent3 Decimal(4,2), 
    IN prmDiscountAmount3 Decimal(18,4), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F608 ( 
    F608.BranchCode, 
    F608.INVNo, 
    F608.ItemCode, 
    F608.Quantity, 
    F608.BonusQuantity, 
    F608.Price, 
    F608.DiscountPercent1, 
    F608.DiscountAmount1, 
    F608.FinalDiscount1, 
    F608.DiscountPercent2, 
    F608.DiscountAmount2, 
    F608.DiscountPercent3, 
    F608.DiscountAmount3, 
    F608.CreatedBy, 
    F608.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmINVNo, 
    prmItemCode, 
    prmQuantity, 
    prmBonusQuantity, 
    prmPrice, 
    prmDiscountPercent1, 
    prmDiscountAmount1, 
    prmFinalDiscount1, 
    prmDiscountPercent2, 
    prmDiscountAmount2, 
    prmDiscountPercent3, 
    prmDiscountAmount3, 
    prmCreatedBy,
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F608_insert_Manual` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F608_insert_Manual` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F608_insert_Manual`(
	prmBranchCode VARCHAR(50), 
	prmINVNo VARCHAR(50), 
	prmItemCode VARCHAR(50),
	prmDescription varchar(200),
        prmItemAlias VARCHAR(100), 
	prmQuantity Decimal(18,4), 
		prmPrice Decimal(18,4), 
	
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F608 (
			BranchCode,
			INVNo, 
			ItemCode,
			Description,
			ItemAlias,
			Quantity, 
			
			Price, 
			
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode,
			prmINVNo, 
			prmItemCode,
			prmDescription,
			prmItemAlias,
			prmQuantity, 
			
			prmPrice, 
			
			prmCreatedBy, 
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F609_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F609_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F609_delete`(
	prmBranchCode VARCHAR(50),
	prmINVNo VARCHAR(50)
)
BEGIN
  DELETE FROM F609 WHERE F609.BranchCode = prmBranchCode AND F609.INVNo = prmINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F609_Get_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F609_Get_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F609_Get_InvNonDO`(prmBranchCode varchar(50), prmINVNo varchar(50))
BEGIN
         
    SELECT 
      F609.BranchCode, 
      F609.INVNo,
      "SERVICE" as Type, 
      F609.ServiceCode As Code,
      F025.Name,
F609.ProductCode,
F040.Name as ProductName,
      F609.Description,
      '' As UnitCode,
      F609.Quantity,
      0 As BonusQuantity, 
      F609.Price, 
      F609.DiscountPercent1, 
      F609.DiscountAmount1, 
      F609.FinalDiscount1, 
      F609.DiscountPercent2, 
      F609.DiscountAmount2, 
      F609.DiscountPercent3, 
      F609.DiscountAmount3,
      F609.MonthPeriod,
      F609.YearPeriod,
	F609.ServiceAliasCode,
	F041.Name as ServiceAliasName,
      F609.CreatedBy, 
      F609.CreatedDate, 
      F609.UpdatedBy, 
      F609.UpdatedDate
    FROM F609
      INNER JOIN F025 ON F609.ServiceCode = F025.Code
       INNER JOIN F041 ON F609.ServiceAliasCode = F041.Code
 INNER JOIN F040 ON F609.ProductCode = F040.Code
      WHERE F609.BranchCode = prmBranchCode AND F609.INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F609_Insert_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F609_Insert_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F609_Insert_InvNonDO`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmINVNo VARCHAR(50), 
    IN prmServiceCode VARCHAR(50), 
IN prmProductCode VARCHAR(50), 
IN prmServiceAliasCode VARCHAR(50), 
    IN prmDescription varchar(200),
    IN prmQuantity Decimal(18,4),  
    IN prmPrice Decimal(18,4), 
    IN prmDiscountPercent1 Decimal(4,2), 
    IN prmDiscountAmount1 Decimal(18,4), 
    IN prmFinalDiscount1 Decimal(18,4), 
    IN prmDiscountPercent2 Decimal(4,2), 
    IN prmDiscountAmount2 Decimal(18,4), 
    IN prmDiscountPercent3 Decimal(4,2), 
    IN prmDiscountAmount3 Decimal(18,4), 
    IN prmMonthPeriod enum('Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','November','Desember'),
    IN prmYearPeriod DECIMAL(4,0), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F609 ( 
    F609.BranchCode, 
    F609.INVNo, 
    F609.ServiceCode, 
F609.ProductCode,
F609.ServiceAliasCode,
    F609.Description,
    F609.Quantity, 
    F609.Price, 
    F609.DiscountPercent1, 
    F609.DiscountAmount1, 
    F609.FinalDiscount1, 
    F609.DiscountPercent2, 
    F609.DiscountAmount2, 
    F609.DiscountPercent3, 
    F609.DiscountAmount3, 
    F609.MonthPeriod,
    F609.YearPeriod,
    F609.CreatedBy, 
    F609.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmINVNo, 
    prmServiceCode, 
prmProductCode,
prmServiceAliasCode,
    prmDescription,
    prmQuantity, 
    prmPrice, 
    prmDiscountPercent1, 
    prmDiscountAmount1, 
    prmFinalDiscount1, 
    prmDiscountPercent2, 
    prmDiscountAmount2, 
    prmDiscountPercent3, 
    prmDiscountAmount3, 
    PrmMonthPeriod,
    PrmYearPeriod,
    prmCreatedBy,
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F610_Delete_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F610_Delete_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F610_Delete_InvNonDO`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmINVNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F610 
  WHERE F610.BranchCode = prmBranchCode AND F610.INVNo = prmINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F610_Get_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F610_Get_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F610_Get_InvNonDO`(IN prmBranchCode varchar(50), IN prmINVNo varchar(50))
BEGIN 
  SELECT 
    F610.BranchCode, 
    F610.INVNo, 
    F610.PaymentTypeCode,
    F037.Name As PaymentTypeName,
    F607.ExchangeRate,
    F610.PaymentAmount As PaymentAmountForeign,
    (F610.PaymentAmount * F607.ExchangeRate) As PaymentAmountLocal,
    F610.CreatedBy, 
    F610.CreatedDate, 
    F610.UpdatedBy, 
    F610.UpdatedDate
FROM F610
  INNER JOIN F037 ON F610.PaymentTypeCode = F037.Code
  INNER JOIN F607 ON F610.BranchCode = F607.BranchCode AND F610.INVNo = F607.INVNo
  WHERE F610.BranchCode = prmBranchCode AND F610.INVNo = prmINVNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F610_Insert_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F610_Insert_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F610_Insert_InvNonDO`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmINVNo VARCHAR(50), 
    IN prmPaymentTypeCode VARCHAR(50), 
    IN prmPaymentAmount decimal(18,4), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F610 ( 
    F610.BranchCode, 
    F610.INVNo, 
    F610.PaymentTypeCode, 
    F610.PaymentAmount, 
    F610.CreatedBy, 
    F610.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmINVNo, 
    prmPaymentTypeCode, 
    prmPaymentAmount, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611b_Get_FakNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611b_Get_FakNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611b_Get_FakNo`(prmBranchCode varchar(50),prmINVNo VARCHAR(50))
BEGIN
		SELECT 	
	f611b.BranchCode,                        
	f611b.INVNo,   
	max(f611b.FakNo)as FakNo,      
	max(f611b.FakDate) as FakDate,    
	max(f611b.StatusRef) as StatusRef
		FROM
			f611b
		WHERE
			f611b.BranchCode = prmBranchCode AND f611b.INVNo = prmINVNo
group by INVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611b_Get_FakNo_inv` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611b_Get_FakNo_inv` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611b_Get_FakNo_inv`(prmBranchCode varchar(50),prmINVNo VARCHAR(50))
BEGIN
		SELECT 	
	f611b.BranchCode,                        
	f611b.INVNo,   
	f611b.FakNo,      
	f611b.FakDate,    
	f611b.StatusRef
		FROM
			f611b
		WHERE
			f611b.BranchCode = prmBranchCode AND f611b.INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611b_get_Faktur` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611b_get_Faktur` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611b_get_Faktur`(prmBranchCode varchar(50),prmFakNo VARCHAR(50))
BEGIN
		SELECT 	
	-- f611b.BranchCode,                        
	-- f611b.INVNo,   
	f611b.FakNo,      
	f611b.FakDate,    
	f611b.StatusRef, 
f611.BranchCode,
    F001.Name As BranchName,
    F001.NPWPNo as NPWPNo,
    F001.Address As BranchAddress,
    F001.CityCode As BranchCityCode,
    BranchCity.Name As BranchCityName,
    f611.INVNo, 
    f611.SODNo,
    f611.VoucherNo, 
    f611.TransactionDate, 
    f611.CurrencyCode,
    F006.Name As CurrencyName, 
f611.BankAccountCode,
F103.Name as BankAccountName,
    f611.PaymentTermCode,
    F018.Name As PaymentTermName,
    F018.Days As PaymentTermDays, 
    f611.ExchangeRate, 
    f611.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    F106.CityCode As CustomerCityCode,
    CustomerCity.Name As CustomerCityName,
    F106.Address As CustomerAddress,
    F106.NPWPAddress As CustomerNPWPAddress,
    F106.NPWP as CustomerNPWP,
    F106.ZipCode,
    f106.Phone1,
    F106.Phone2,
    f106.Fax,
    f611.SalesmanCode,
    F108.Name As SalesmanName,
    f611.WarehouseCode,
    F110.Name As WarehouseName,
    f611.Description, 
    f611.TotalTransaction As TotalTransactionForeign,
    (f611.TotalTransaction * f611.ExchangeRate) As TotalTransactionLocal,
    f611.DiscountPercent,
    f611.DiscountAmount As DiscountAmountForeign,
    (f611.DiscountAmount * f611.ExchangeRate) As DiscountAmountLocal,
    f611.OtherFeeBeforePPN As OtherFeeBeforePPNForeign,
    (f611.OtherFeeBeforePPN * f611.ExchangeRate) As OtherFeeBeforePPNLocal,
    f611.PPNPercent,
    f611.PPNAmount As PPNAmountForeign,
    (f611.PPNAmount * f611.ExchangeRate) As PPNAmountLocal,
    f611.OtherFeeAfterPPN As OtherFeeAfterPPNForeign,
    (f611.OtherFeeAfterPPN * f611.ExchangeRate) As OtherFeeAfterPPNLocal,
f611.MateraiFeeAfterPPN 			      as MateraiFeeAfterPPNForeign, 
	(f611.MateraiFeeAfterPPN * f611.ExchangeRate)   as MateraiFeeAfterPPNLocal, 
   f611.PackingFeeAfterPPN 			      as PackingFeeAfterPPNForeign, 
	(f611.PackingFeeAfterPPN * f611.ExchangeRate)   as PackingFeeAfterPPNLocal, 
   f611.AsuransiFeeAfterPPN 			      as AsuransiFeeAfterPPNForeign, 
	(f611.AsuransiFeeAfterPPN * f611.ExchangeRate)   as AsuransiFeeAfterPPNLocal, 
   f611.PPh23FeeAfterPPN 			      as PPh23FeeAfterPPNForeign, 
	(f611.PPh23FeeAfterPPN * f611.ExchangeRate)   as PPh23FeeAfterPPNLocal, 
    f611.FinalDiscount As FinalDiscountForeign,
    (f611.FinalDiscount * f611.ExchangeRate) As FinalDiscountLocal,
f611.DeductionAfterPPn 			      as DeductionAfterPPnForeign, 
	(f611.DeductionAfterPPn * f611.ExchangeRate)   as DeductionAfterPPnLocal, 
    f611.GrandTotal As GrandTotalForeign,
    (f611.GrandTotal * f611.ExchangeRate) As GrandTotalLocal,
"Service" As ItemType,
    F609.ServiceCode As ItemCode,
    "" As ItemAlias,
    F025.Name As ItemName,
F609.ServiceAliasCode As ServiceAliasCode,
F041.Name As ServiceAliasName,
    "" As ItemUnitCode,
    F609.Description as DescriptionDetail,
    F609.Quantity,
    0 as BonusQuantity,
    F609.Price, 
    F609.DiscountPercent1,
    F609.DiscountAmount1,
    F609.FinalDiscount1,
    F609.DiscountPercent2,
    F609.DiscountAmount2,
    F609.DiscountPercent3,
    F609.DiscountAmount3
		FROM
			f611b
			INNER JOIN f611 ON f611b.INVNo = f611.INVNo
  INNER JOIN F001 ON f611.BranchCode = F001.Code
  INNER JOIN F006 ON f611.CurrencyCode = F006.Code
  INNER JOIN F018 ON f611.PaymentTermCode = F018.Code
  INNER JOIN F106 ON f611.CustomerCode = F106.Code
  INNER JOIN F108 ON f611.SalesmanCode = F108.Code
  INNER JOIN F110 ON f611.WareHouseCode = F110.Code
  Inner Join F103 On  f611.BankAccountCode = F103.Code
  INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
  INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
INNER JOIN F609 ON f611b.INVNo = F609.INVNo
 INNER JOIN F025 ON F609.ServiceCode = F025.Code
 INNER JOIN F041 ON F609.ServiceAliasCode = F041.Code
		WHERE
			f611b.BranchCode = prmBranchCode AND f611b.FakNo = prmFakNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611b_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611b_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611b_insert`(
	prmBranchCode varchar(50),      
	prmINVNo                 varchar(50),           
	prmFakNo VARCHAR(50),    
	prmFakDate       datetime,    
	prmStatusRef          varchar(1),
	prmCreatedBy             varchar(50)    
)
BEGIN
	insert into f611b
	(
	BranchCode,                        
	INVNo,   
	FakNo,      
	FakDate,    
	StatusRef,    
	CreatedBy,      
	CreatedDate 
	)
	value
	(
	prmBranchCode,      
	prmINVNo,           
	prmFakNo,    
	prmFakDate,     
	prmStatusRef,      
	prmCreatedBy,
	NOW()
	);         
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611b_Update_FakNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611b_Update_FakNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611b_Update_FakNo`( 
    prmOldBranchCode VARCHAR(50),
    prmOldINVNo VARCHAR(50),     
    prmFakNo VARCHAR(50),      
	prmFakDate       datetime, 
	prmStatusRef          varchar(1),
	prmUpdatedBy             varchar(50)  
 )
BEGIN 
  UPDATE f611b SET    
    FakNo = prmFakNo, 
    FakDate = NOW(),
StatusRef=prmStatusRef,
UpdatedBy=prmUpdatedBy    
  WHERE f611b.BranchCode = prmOldBranchCode AND f611b.INVNo = prmOldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_delete`(
	prmBranchCode VARCHAR(50),
	prmINVNo VARCHAR(50)
)
Begin
	Delete From F928
	Where   INVNo = prmINVNo;
	Delete From f612
	WHERE INVNo = prmINVNo;
	Delete From f611 
	WHERE  INVNo = prmINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Delete_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Delete_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_Delete_InvNonDO`(
	prmBranchCode VARCHAR(50),
	prmINVNo VARCHAR(50)
)
Begin
	Delete From f611 
	WHERE f611.BranchCode = prmBranchCode AND f611.INVNo = prmINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmINVNo varchar(50),
   IN prmSODNo varchar(50),
   IN prmCustomerName varchar(100),
   IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT
	f611.BranchCode, 
	f611.INVNo, 
	f611.TransactionDate,
f611.FromDate,
f611.ToDate,
        F603.SODNo as SODNo , 
f611.BankAccountCode,
F103.Name as BankAccountName,
	F018.Code 		as PaymentTermCode, 
	F018.Name 		as PaymentTermName, 
	F018.Days 		as PaymentTermDays, 
	F106.Code 		as CustomerCode, 
	F106.Name 		as CustomerName, 
	F108.Code 		As SalesmanCode,
	F108.Name 		As SalesmanName, 	
	F006.Code 		as CurrencyCode, 
	F006.Name 		as CurrencyName, 	
	F106.ContactPerson 	as CustomerContactPerson, 
	f611.AssignStatus,   
        f611.VoucherNo,	         	
        f611.ExchangeRate, 
	F106.Address	 	as CustomerAddress, 
	F106.ZipCode 		as CustomerZipCode, 
	F106.Phone1 		as CustomerPhone1, 
	F106.Phone2 		as CustomerPhone2, 
	F106.Fax 		as CustomerFax, 
	F106.EmailAddress 	as CustomerEmailAddress, 
	F010.Code 		as CustomerCountryCode,  
	F010.Name 		as CustomerCountryName, 
	F009.Code 		as CustomerCityCode,  
	F009.Name 		as CustomerCityName, 
        f611.Description	as INVDescriptionHeader, 
        f611.TotalTransaction   as INVTotalTransaction, 
       (f611.TotalTransaction * f611.ExchangeRate) as INVTotalTransactionAmountLocal, 
        f611.DiscountPercent 	as INVDiscountPercentHeader, 
	f611.DiscountAmount 	as INVDiscountAmountHeader, 
	(f611.DiscountAmount * f611.ExchangeRate) as INVDiscountAmountHeaderLocal, 
	f611.OtherFeeBeforePPN 			      as INVOtherFeeBeforePPNAmount, 
	(f611.OtherFeeBeforePPN * f611.ExchangeRate)   as INVOtherFeeBeforePPNAmountLocal, 
        f611.PPNPercent 	as INVPPNPercent, 
	f611.PPNAmount 		as INVPPNAmount, 
	(f611.PPNAmount * f611.ExchangeRate)		as INVPPNAmountLocal, 
        f611.OtherFeeAfterPPN 			      as INVOtherFeeAfterPPNAmount, 
	(f611.OtherFeeAfterPPN * f611.ExchangeRate)   as INVOtherFeeAfterPPNAmountLocal, 
   f611.MateraiFeeAfterPPN 			      as INVMateraiFeeAfterPPNAmount, 
	(f611.MateraiFeeAfterPPN * f611.ExchangeRate)   as INVMateraiFeeAfterPPNAmountLocal, 
   f611.PackingFeeAfterPPN 			      as INVPackingFeeAfterPPNAmount, 
	(f611.PackingFeeAfterPPN * f611.ExchangeRate)   as INVPackingFeeAfterPPNAmountLocal, 
   f611.AsuransiFeeAfterPPN 			      as INVAsuransiFeeAfterPPNAmount, 
	(f611.AsuransiFeeAfterPPN * f611.ExchangeRate)   as INVAsuransiFeeAfterPPNAmountLocal, 
   f611.PPh23FeeAfterPPN 			      as INVPPh23FeeAfterPPNAmount, 
	(f611.PPh23FeeAfterPPN * f611.ExchangeRate)   as INVPPh23FeeAfterPPNAmountLocal, 
f611.DeductionAfterPPn 			      as DeductionAfterPPnForeign, 
	(f611.DeductionAfterPPn * f611.ExchangeRate)   as DeductionAfterPPnLocal,
        f611.GrandTotal 			    as INVGrandTotal, 
	(f611.GrandTotal * f611.ExchangeRate) as INVGrandTotalAmountLocal, 
	f611.PaidAmount 			    as INVPaidAmount, 
	(f611.PaidAmount * f611.ExchangeRate) 	    as INVPaidAmountLocal
        	
	from f611 
Inner Join F103 On  f611.BankAccountCode = F103.Code
	    INNER JOIN F006 on f611.CurrencyCode = F006.Code 
            INNER JOIN F018 on f611.PaymentTermCode  = F018.Code
	    INNER JOIN F106 on  f611.CustomerCode = F106.Code 
	    INNER JOIN F009 on F106.CityCode     = F009.Code 
	    INNER JOIN F010 on F106.CountryCode  = F010.Code     
            INNER JOIN F108 on  f611.SalesmanCode = F108.Code 
            -- INNER JOIN F110 on f611.BranchCode = F110.BranchCode and f611.WarehouseCode = F110.Code 
	    INNER JOIN F603 on  f611.SODNo = F603.SODNo
	    
	   WHERE 
		-- f611.BranchCode = prmBranchCode AND
		f611.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
		f611.INVNo LIKE prmINVNo
		and f611.SODNo like prmSODNo;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Get_ByCode`(
IN prmINVNo varchar(50))
BEGIN 
  SELECT 
      f611.PostingSend,
 f611.PostingRec,
 f611.INVNo,
 f611.FakNo,
 f611.FakDate,
 f611.StatusFak,
 f611.StatusRef,
 f611.FakNoRef,
 f611.FakRefDate,
 f611.SODNo,
 f611.VoucherNo,
 f611.TransactionDate,
 f611.FromDate,
 f611.ToDate,
 f611.PrintDate,
 f611.BankAccountCode,
 f611.CurrencyCode,
 f611.PaymentTermCode,
 f611.ExchangeRate,
 f611.CustomerCode,
 f611.SalesmanCode,
 f611.WarehouseCode,
 f611.Description,
 f611.TaxStatus,
 f611.TotalTransaction,
 f611.DiscountPercent,
 f611.DiscountAmount,
 f611.FinalDiscount,
 f611.OtherFeeBeforePPN,
 f611.PPNPercent,
 f611.PPNAmount,
 f611.OtherFeeAfterPPN,
 f611.MateraiFeeAfterPPN,
 f611.PackingFeeAfterPPN,
 f611.AsuransiFeeAfterPPN,
 f611.PPh23FeeAfterPPN,
 f611.DeductionAfterPPn,
 f611.GrandTotal,
 f611.PaidAmount,
 f611.AssignStatus,
 f611.DeleteStatus,
 f611.SettlementDate,
 f611.SettlementDocumentNo,
 f611.PayDescription,
 f611.CreatedBy,
 f611.CreatedDate,
 f611.UpdatedBy,
 f611.UpdatedDate,
 f611.RefNo,
 f611.PostingSendCust,
 f611.PostingRecCust,
 f611.RefDate,
 f611.funit_sqm,
 f611.funit_long,
 f611.funit_width,
 f611.fkva_code,
 f611.fkva_tariff,
 f611.fkva_load,
 f611.StartMeter,
 f611.FinishMeter,
 f611.fUsage,
 f611.fPhase,
 f611.AbonemenBeforePPN,
 f611.AdminBeforePPN,
 f611.MinimumFeeBeforePPN,
 f611.PJBBeforePPN,
 f611.PPHAmount
    
FROM f611
WHERE
   f611.INVNo = prmINVNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Get_ByItemCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Get_ByItemCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_Get_ByItemCode`(
  prmBranchCode VarChar(50), 
  prmCustomerCode VarChar(50),
  prmSalesmanCode VarChar(50),
  prmItemCode VarChar(50),
  prmCurrencyCode VarChar(50),
  prmFirstDate DateTime,
  prmLastDate DateTime)
BEGIN	
	SELECT
		f611.INVNo,
		f611.TransactionDate,
		f611.CurrencyCode,
		f612.Quantity,
		f612.Price,
		f612.DiscountPercent1,
		f612.DiscountPercent2,
		f612.DiscountPercent3,
		f611.DiscountPercent,
		f611.PPNPercent
		
	FROM f612
	INNER JOIN f611 ON f611.BranchCode = prmBranchCode AND f612.INVNo = f611.INVNo
	WHERE 
		f612.BranchCode = prmBranchCode AND
		f612.ItemCode = prmItemCode AND
		f611.CustomerCode = prmCustomerCode AND
		f611.CurrencyCode = prmCurrencyCode AND
		f611.SalesmanCode = prmSalesmanCode AND
		f611.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	ORDER BY
		f612.INVNo DESC;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Get_ByTaxInvoice` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Get_ByTaxInvoice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Get_ByTaxInvoice`(
  IN prmBranchCode varchar(50), 
  IN prmCustomerCode varchar(50),
  IN prmCurrencyCode varchar(50),
  IN prmExchangeRate Decimal(18,4),
  IN prmOldTINNo VARCHAR(50)
)
BEGIN 
  SELECT 
    f611.BranchCode, 
    f611.INVNo,
    f611.TransactionDate, 
    f611.CustomerCode, 
    f611.CurrencyCode,
    f611.ExchangeRate, 
    f611.GrandTotal As GrandTotalForeign,
    (f611.GrandTotal * f611.ExchangeRate) As GrandTotalLocal
    
FROM f611
WHERE
  f611.BranchCode = prmBranchCode AND
  f611.CustomerCode = prmCustomerCode AND
  f611.CurrencyCode = prmCurrencyCode AND
  f611.ExchangeRate = prmExchangeRate AND
  f611.PPNPercent > 0 AND
  f611.INVNo not in (select F642.INVNo from F642 where F642.BranchCode = prmBranchCode AND F642.TINNo <> prmOldTINNo)
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Get_FakNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Get_FakNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Get_FakNo`(IN prmBranchCode varchar(50), 
  IN prmINVNo varchar(50))
BEGIN 
  SELECT 
    f611.BranchCode,
        f611.INVNo,
    f611.FakNo, 
    f611.FakDate,
f611.StatusRef,
f611.FakNoRef,
f611.FakRefDate
    
FROM f611
WHERE 
    f611.BranchCode = prmBranchCode AND INVNo =prmINVNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_get_ForInv` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_get_ForInv` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_get_ForInv`(
   -- IN prmBranchCode VARCHAR(50),
   IN prmMONTH INT(2),
   IN prmYear INT(4),
   IN prmUnitCode varchar(50)
   -- IN prmSODNo varchar(50),
   -- IN prmCustomerName varchar(100),
   -- IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT
	f611.BranchCode, 
	-- f611.INVNo, 
	f611.INVNo, 
	f611.RefNo,
	f611.TransactionDate,
	f611.Description,
	f611.FromDate,
	f611.ToDate,
	f611.funit_sqm,
	f611.funit_long,
	f611.funit_width,
		f611.fkva_code,
	f611.fkva_tariff,
	f611.StartMeter,
	f611.FinishMeter,
	f611.fUsage,
	f611.fPhase,
	f611.SODNo AS SODNo , 
	f611.BankAccountCode,
	f611.CustomerCode,
	IFNULL(f106.Name, "") AS  CustomerName,
	f611.SODNo,
	f048.funit_name,
	f048.ftrade_name,
	f611.WarehouseCode,	 	
	       f611.Description	AS INVDescriptionHeader, 
        f611.TotalTransaction   AS INVTotalTransaction,
	
       	f611.AdminBeforePPN,
	f611.MinimumFeeBeforePPN,
	-- f611.MinimumFeeBeforePPN,
     	f611.PPNAmount 		AS INVPPNAmount, 
     	f611.PJBBeforePPN,
 
        f611.GrandTotal 			    AS INVGrandTotal, 
         f611.PPh23FeeAfterPPN 			      AS INVPPh23FeeAfterPPNAmount, 
	  f611.AbonemenBeforePPN,
        	 f611.DaysDueDate,
        	 '' as AccountCodeC,
        	  '' AS AccountCodeD,  
        	  '' AS AccountCodeListrikC,
        	  '' AS AccountCodeListrikD,  
        	  '' AS AccountCodeAirC,
        	  '' AS AccountCodeAirD
	FROM f611 
	-- INNER JOIN F103 ON  f611.BankAccountCode = F103.Code
	   --  INNER JOIN F006 ON f611.CurrencyCode = F006.Code 
          --   INNER JOIN F018 ON f611.PaymentTermCode  = F018.Code
	    left JOIN F106 ON  f611.CustomerCode = F106.Code 
	   --  INNER JOIN F009 ON F106.CityCode     = F009.Code 
	   --  INNER JOIN F010 ON F106.CountryCode  = F010.Code     
          --   INNER JOIN F108 ON  f611.SalesmanCode = F108.Code 
            -- INNER JOIN F110 on f611.BranchCode = F110.BranchCode and f611.WarehouseCode = F110.Code 
	    INNER JOIN f048 ON  f611.SODNo = f048.funit_code	    
	  	   WHERE 
		-- f611.BranchCode = prmBranchCode AND
		MONTH(f611.TransactionDate)=prmMONTH AND YEAR(f611.TransactionDate)=prmYear
		and f611.SODNo LIKE prmUnitCode
;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Get_InvByDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Get_InvByDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Get_InvByDO`(IN prmBranchCode varchar(50), 
  IN prmFirstDate datetime, IN prmLastDate datetime)
BEGIN 
  SELECT 
    f611.BranchCode,
    F001.Name As BranchName,
    f611.INVNo,
    f611.SODNo, 
    f611.VoucherNo, 
    f611.TransactionDate, 
    f611.CurrencyCode,
    F006.Name As CurrencyName, 
f611.BankAccountCode,
F103.Name as BankAccountName,
    f611.PaymentTermCode,
    F018.Name As PaymentTermName,
    F018.Days As PaymentTermDays, 
    f611.ExchangeRate, 
    f611.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    f611.SalesmanCode,
    F108.Name As SalesmanName,
    f611.Description, 
    f611.TotalTransaction As TotalTransactionForeign,
    (f611.TotalTransaction * f611.ExchangeRate) As TotalTransactionLocal,
    f611.DiscountPercent,
    f611.DiscountAmount As DiscountAmountForeign,
    (f611.DiscountAmount * f611.ExchangeRate) As DiscountAmountLocal,
    f611.OtherFeeBeforePPN As OtherFeeBeforePPNForeign,
    (f611.OtherFeeBeforePPN * f611.ExchangeRate) As OtherFeeBeforePPNLocal,
    f611.PPNPercent,
    f611.PPNAmount As PPNAmountForeign,
    (f611.PPNAmount * f611.ExchangeRate) As PPNAmountLocal,
    f611.OtherFeeAfterPPN As OtherFeeAfterPPNForeign,
    (f611.OtherFeeAfterPPN * f611.ExchangeRate) As OtherFeeAfterPPNLocal,
 f611.MateraiFeeAfterPPN 			      as MateraiFeeAfterPPNForeign, 
	(f611.MateraiFeeAfterPPN * f611.ExchangeRate)   as MateraiFeeAfterPPNLocal, 
   f611.PackingFeeAfterPPN 			      as PackingFeeAfterPPNForeign, 
	(f611.PackingFeeAfterPPN * f611.ExchangeRate)   as PackingFeeAfterPPNLocal, 
   f611.AsuransiFeeAfterPPN 			      as AsuransiFeeAfterPPNForeign, 
	(f611.AsuransiFeeAfterPPN * f611.ExchangeRate)   as AsuransiFeeAfterPPNLocal, 
   f611.PPh23FeeAfterPPN 			      as PPh23FeeAfterPPNForeign, 
	(f611.PPh23FeeAfterPPN * f611.ExchangeRate)   as PPh23FeeAfterPPNLocal, 
    f611.FinalDiscount As FinalDiscountForeign,
    (f611.FinalDiscount * f611.ExchangeRate) As FinalDiscountLocal,
 f611.DeductionAfterPPn 			      as DeductionAfterPPnForeign, 
	(f611.DeductionAfterPPn * f611.ExchangeRate)   as DeductionAfterPPnLocal, 
    f611.GrandTotal As GrandTotalForeign,
    (f611.GrandTotal * f611.ExchangeRate) As GrandTotalLocal,
    f611.CreatedBy, 
    f611.CreatedDate, 
    f611.UpdatedBy, 
    f611.UpdatedDate
    
FROM f611
Inner Join F103 On  f611.BankAccountCode = F103.Code
  INNER JOIN F001 ON f611.BranchCode = F001.Code
  INNER JOIN F006 ON f611.CurrencyCode = F006.Code
  INNER JOIN F018 ON f611.PaymentTermCode = F018.Code
  INNER JOIN F106 ON f611.CustomerCode = F106.Code
  LEFT JOIN F108 ON f611.SalesmanCode = F108.Code
WHERE 
    f611.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND LENGTH(f611.SODNo) > 0
ORDER BY f611.TransactionDate DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Get_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Get_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Get_InvNonDO`(IN prmBranchCode varchar(50), 
  IN prmFirstDate datetime, IN prmLastDate datetime)
BEGIN 
  SELECT 
    f611.BranchCode,
    F001.Name As BranchName,
    f611.INVNo,
	f611.PostingSend,
	f611.PostingRec,
    f611.RefNo,
    f611.VoucherNo, 
    f611.TransactionDate, 
f611.FromDate,
f611.ToDate,
    f611.CurrencyCode,
    F006.Name As CurrencyName, 
f611.FakNo,
f611.FakDate,
f611.StatusRef,
f611.FakNoRef,
f611.FakRefDate,
f611.BankAccountCode,
F103.Name as BankAccountName,
    f611.PaymentTermCode,
    F018.Name As PaymentTermName,
    F018.Days As PaymentTermDays, 
    f611.ExchangeRate, 
    f611.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    f611.SalesmanCode,
    F108.Name As SalesmanName,
    f611.WarehouseCode,
    F110.Name As WarehouseName,
    f611.Description, 
    f611.TotalTransaction As TotalTransactionForeign,
    (f611.TotalTransaction * f611.ExchangeRate) As TotalTransactionLocal,
    f611.DiscountPercent,
    f611.DiscountAmount As DiscountAmountForeign,
    (f611.DiscountAmount * f611.ExchangeRate) As DiscountAmountLocal,
    f611.OtherFeeBeforePPN As OtherFeeBeforePPNForeign,
    (f611.OtherFeeBeforePPN * f611.ExchangeRate) As OtherFeeBeforePPNLocal,
    f611.PPNPercent,
    f611.PPNAmount As PPNAmountForeign,
    (f611.PPNAmount * f611.ExchangeRate) As PPNAmountLocal,
    f611.OtherFeeAfterPPN As OtherFeeAfterPPNForeign,
    (f611.OtherFeeAfterPPN * f611.ExchangeRate) As OtherFeeAfterPPNLocal,
f611.MateraiFeeAfterPPN 			      as MateraiFeeAfterPPNForeign, 
	(f611.MateraiFeeAfterPPN * f611.ExchangeRate)   as MateraiFeeAfterPPNLocal, 
   f611.PackingFeeAfterPPN 			      as PackingFeeAfterPPNForeign, 
	(f611.PackingFeeAfterPPN * f611.ExchangeRate)   as PackingFeeAfterPPNLocal, 
   f611.AsuransiFeeAfterPPN 			      as AsuransiFeeAfterPPNForeign, 
	(f611.AsuransiFeeAfterPPN * f611.ExchangeRate)   as AsuransiFeeAfterPPNLocal, 
   f611.PPh23FeeAfterPPN 			      as PPh23FeeAfterPPNForeign, 
	(f611.PPh23FeeAfterPPN * f611.ExchangeRate)   as PPh23FeeAfterPPNLocal, 
    f611.FinalDiscount As FinalDiscountForeign,
    (f611.FinalDiscount * f611.ExchangeRate) As FinalDiscountLocal,
f611.DeductionAfterPPn 			      as DeductionAfterPPnForeign, 
	(f611.DeductionAfterPPn * f611.ExchangeRate)   as DeductionAfterPPnLocal,
    f611.GrandTotal As GrandTotalForeign,
    (f611.GrandTotal * f611.ExchangeRate) As GrandTotalLocal,
    f611.CreatedBy, 
    f611.CreatedDate, 
    f611.UpdatedBy, 
    f611.UpdatedDate
    
FROM f611
Inner Join F103 On  f611.BankAccountCode = F103.Code
  INNER JOIN F001 ON f611.BranchCode = F001.Code
  INNER JOIN F006 ON f611.CurrencyCode = F006.Code
  INNER JOIN F018 ON f611.PaymentTermCode = F018.Code
  INNER JOIN F106 ON f611.CustomerCode = F106.Code
  LEFT JOIN F108 ON f611.SalesmanCode = F108.Code
  LEFT JOIN F110 ON f611.WareHouseCode = F110.Code
WHERE 
    f611.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND LENGTH(f611.SODNo) = 0
ORDER BY f611.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Get_InvNonDORec` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Get_InvNonDORec` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Get_InvNonDORec`(IN prmBranchCode varchar(50), 
  IN prmFirstDate datetime, IN prmLastDate datetime)
BEGIN 
  SELECT 
    f611.BranchCode,
    F001.Name As BranchName,
    f611.INVNo,
	f611.PostingSend,
f611.PostingRec,
f611.PostingSendCust,
f611.PostingRecCust,
    f611.RefNo,
    f611.VoucherNo, 
    f611.TransactionDate, 
f611.FromDate,
f611.ToDate,
    f611.CurrencyCode,
    F006.Name As CurrencyName, 
f611.FakNo,
f611.FakDate,
f611.StatusRef,
f611.FakNoRef,
f611.FakRefDate,
f611.BankAccountCode,
F103.Name as BankAccountName,
    f611.PaymentTermCode,
    F018.Name As PaymentTermName,
    F018.Days As PaymentTermDays, 
    f611.ExchangeRate, 
    f611.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    f611.SalesmanCode,
    F108.Name As SalesmanName,
    f611.WarehouseCode,
    F110.Name As WarehouseName,
    f611.Description, 
    f611.TotalTransaction As TotalTransactionForeign,
    (f611.TotalTransaction * f611.ExchangeRate) As TotalTransactionLocal,
    f611.DiscountPercent,
    f611.DiscountAmount As DiscountAmountForeign,
    (f611.DiscountAmount * f611.ExchangeRate) As DiscountAmountLocal,
    f611.OtherFeeBeforePPN As OtherFeeBeforePPNForeign,
    (f611.OtherFeeBeforePPN * f611.ExchangeRate) As OtherFeeBeforePPNLocal,
    f611.PPNPercent,
    f611.PPNAmount As PPNAmountForeign,
    (f611.PPNAmount * f611.ExchangeRate) As PPNAmountLocal,
    f611.OtherFeeAfterPPN As OtherFeeAfterPPNForeign,
    (f611.OtherFeeAfterPPN * f611.ExchangeRate) As OtherFeeAfterPPNLocal,
f611.MateraiFeeAfterPPN 			      as MateraiFeeAfterPPNForeign, 
	(f611.MateraiFeeAfterPPN * f611.ExchangeRate)   as MateraiFeeAfterPPNLocal, 
   f611.PackingFeeAfterPPN 			      as PackingFeeAfterPPNForeign, 
	(f611.PackingFeeAfterPPN * f611.ExchangeRate)   as PackingFeeAfterPPNLocal, 
   f611.AsuransiFeeAfterPPN 			      as AsuransiFeeAfterPPNForeign, 
	(f611.AsuransiFeeAfterPPN * f611.ExchangeRate)   as AsuransiFeeAfterPPNLocal, 
   f611.PPh23FeeAfterPPN 			      as PPh23FeeAfterPPNForeign, 
	(f611.PPh23FeeAfterPPN * f611.ExchangeRate)   as PPh23FeeAfterPPNLocal, 
    f611.FinalDiscount As FinalDiscountForeign,
    (f611.FinalDiscount * f611.ExchangeRate) As FinalDiscountLocal,
f611.DeductionAfterPPn 			      as DeductionAfterPPnForeign, 
	(f611.DeductionAfterPPn * f611.ExchangeRate)   as DeductionAfterPPnLocal,
    f611.GrandTotal As GrandTotalForeign,
    (f611.GrandTotal * f611.ExchangeRate) As GrandTotalLocal,
    f611.CreatedBy, 
    f611.CreatedDate, 
    f611.UpdatedBy, 
    f611.UpdatedDate
    
FROM f611
Inner Join F103 On  f611.BankAccountCode = F103.Code
  INNER JOIN F001 ON f611.BranchCode = F001.Code
  INNER JOIN F006 ON f611.CurrencyCode = F006.Code
  INNER JOIN F018 ON f611.PaymentTermCode = F018.Code
  INNER JOIN F106 ON f611.CustomerCode = F106.Code
  LEFT JOIN F108 ON f611.SalesmanCode = F108.Code
  LEFT JOIN F110 ON f611.WareHouseCode = F110.Code
WHERE 
    f611.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND LENGTH(f611.SODNo) = 0
AND f611.PostingSend = 1
ORDER BY f611.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Get_InvNonDO_PostingStatus` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Get_InvNonDO_PostingStatus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Get_InvNonDO_PostingStatus`(IN prmBranchCode varchar(50), 
  IN prmFirstDate datetime, IN prmLastDate datetime, IN prmPostingStatus boolean)
BEGIN 
  SELECT 
    f611.BranchCode,
    F001.Name As BranchName,
    f611.INVNo,
	f611.PostingSend,
f611.PostingRec,
f611.PostingSendCust,
f611.PostingRecCust,
    f611.RefNo,
    f611.VoucherNo, 
    f611.TransactionDate, 
    f611.CurrencyCode,
    F006.Name As CurrencyName, 
f611.FakNo,
f611.FakDate,
f611.StatusRef,
f611.FakNoRef,
f611.FakRefDate,
f611.BankAccountCode,
F103.Name as BankAccountName,
    f611.PaymentTermCode,
    F018.Name As PaymentTermName,
    F018.Days As PaymentTermDays, 
    f611.ExchangeRate, 
    f611.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    f611.SalesmanCode,
    F108.Name As SalesmanName,
    f611.WarehouseCode,
    F110.Name As WarehouseName,
    f611.Description, 
    f611.TotalTransaction As TotalTransactionForeign,
    (f611.TotalTransaction * f611.ExchangeRate) As TotalTransactionLocal,
    f611.DiscountPercent,
    f611.DiscountAmount As DiscountAmountForeign,
    (f611.DiscountAmount * f611.ExchangeRate) As DiscountAmountLocal,
    f611.OtherFeeBeforePPN As OtherFeeBeforePPNForeign,
    (f611.OtherFeeBeforePPN * f611.ExchangeRate) As OtherFeeBeforePPNLocal,
    f611.PPNPercent,
    f611.PPNAmount As PPNAmountForeign,
    (f611.PPNAmount * f611.ExchangeRate) As PPNAmountLocal,
    f611.OtherFeeAfterPPN As OtherFeeAfterPPNForeign,
    (f611.OtherFeeAfterPPN * f611.ExchangeRate) As OtherFeeAfterPPNLocal,
f611.MateraiFeeAfterPPN 			      as MateraiFeeAfterPPNForeign, 
	(f611.MateraiFeeAfterPPN * f611.ExchangeRate)   as MateraiFeeAfterPPNLocal, 
   f611.PackingFeeAfterPPN 			      as PackingFeeAfterPPNForeign, 
	(f611.PackingFeeAfterPPN * f611.ExchangeRate)   as PackingFeeAfterPPNLocal, 
   f611.AsuransiFeeAfterPPN 			      as AsuransiFeeAfterPPNForeign, 
	(f611.AsuransiFeeAfterPPN * f611.ExchangeRate)   as AsuransiFeeAfterPPNLocal, 
   f611.PPh23FeeAfterPPN 			      as PPh23FeeAfterPPNForeign, 
	(f611.PPh23FeeAfterPPN * f611.ExchangeRate)   as PPh23FeeAfterPPNLocal, 
    f611.FinalDiscount As FinalDiscountForeign,
    (f611.FinalDiscount * f611.ExchangeRate) As FinalDiscountLocal,
    f611.GrandTotal As GrandTotalForeign,
    (f611.GrandTotal * f611.ExchangeRate) As GrandTotalLocal,
    f611.CreatedBy, 
    f611.CreatedDate, 
    f611.UpdatedBy, 
    f611.UpdatedDate
    
FROM f611
Inner Join F103 On  f611.BankAccountCode = F103.Code
  INNER JOIN F001 ON f611.BranchCode = F001.Code
  INNER JOIN F006 ON f611.CurrencyCode = F006.Code
  INNER JOIN F018 ON f611.PaymentTermCode = F018.Code
  INNER JOIN F106 ON f611.CustomerCode = F106.Code
  LEFT JOIN F108 ON f611.SalesmanCode = F108.Code
  LEFT JOIN F110 ON f611.WareHouseCode = F110.Code
WHERE 
    f611.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND LENGTH(f611.SODNo) = 0
AND PostingSend = prmPostingStatus
ORDER BY f611.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Get_InvNonDO_PostingStatusRec` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Get_InvNonDO_PostingStatusRec` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Get_InvNonDO_PostingStatusRec`(IN prmBranchCode varchar(50), 
  IN prmFirstDate datetime, IN prmLastDate datetime, IN prmPostingStatus boolean)
BEGIN 
  SELECT 
    f611.BranchCode,
    F001.Name As BranchName,
    f611.INVNo,
	f611.PostingSend,
f611.PostingRec,
f611.PostingSendCust,
f611.PostingRecCust,
    f611.RefNo,
    f611.VoucherNo, 
    f611.TransactionDate, 
    f611.CurrencyCode,
    F006.Name As CurrencyName, 
f611.FakNo,
f611.FakDate,
f611.StatusRef,
f611.FakNoRef,
f611.FakRefDate,
f611.BankAccountCode,
F103.Name as BankAccountName,
    f611.PaymentTermCode,
    F018.Name As PaymentTermName,
    F018.Days As PaymentTermDays, 
    f611.ExchangeRate, 
    f611.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    f611.SalesmanCode,
    F108.Name As SalesmanName,
    f611.WarehouseCode,
    F110.Name As WarehouseName,
    f611.Description, 
    f611.TotalTransaction As TotalTransactionForeign,
    (f611.TotalTransaction * f611.ExchangeRate) As TotalTransactionLocal,
    f611.DiscountPercent,
    f611.DiscountAmount As DiscountAmountForeign,
    (f611.DiscountAmount * f611.ExchangeRate) As DiscountAmountLocal,
    f611.OtherFeeBeforePPN As OtherFeeBeforePPNForeign,
    (f611.OtherFeeBeforePPN * f611.ExchangeRate) As OtherFeeBeforePPNLocal,
    f611.PPNPercent,
    f611.PPNAmount As PPNAmountForeign,
    (f611.PPNAmount * f611.ExchangeRate) As PPNAmountLocal,
    f611.OtherFeeAfterPPN As OtherFeeAfterPPNForeign,
    (f611.OtherFeeAfterPPN * f611.ExchangeRate) As OtherFeeAfterPPNLocal,
f611.MateraiFeeAfterPPN 			      as MateraiFeeAfterPPNForeign, 
	(f611.MateraiFeeAfterPPN * f611.ExchangeRate)   as MateraiFeeAfterPPNLocal, 
   f611.PackingFeeAfterPPN 			      as PackingFeeAfterPPNForeign, 
	(f611.PackingFeeAfterPPN * f611.ExchangeRate)   as PackingFeeAfterPPNLocal, 
   f611.AsuransiFeeAfterPPN 			      as AsuransiFeeAfterPPNForeign, 
	(f611.AsuransiFeeAfterPPN * f611.ExchangeRate)   as AsuransiFeeAfterPPNLocal, 
   f611.PPh23FeeAfterPPN 			      as PPh23FeeAfterPPNForeign, 
	(f611.PPh23FeeAfterPPN * f611.ExchangeRate)   as PPh23FeeAfterPPNLocal, 
    f611.FinalDiscount As FinalDiscountForeign,
    (f611.FinalDiscount * f611.ExchangeRate) As FinalDiscountLocal,
    f611.GrandTotal As GrandTotalForeign,
    (f611.GrandTotal * f611.ExchangeRate) As GrandTotalLocal,
    f611.CreatedBy, 
    f611.CreatedDate, 
    f611.UpdatedBy, 
    f611.UpdatedDate
    
FROM f611
Inner Join F103 On  f611.BankAccountCode = F103.Code
  INNER JOIN F001 ON f611.BranchCode = F001.Code
  INNER JOIN F006 ON f611.CurrencyCode = F006.Code
  INNER JOIN F018 ON f611.PaymentTermCode = F018.Code
  INNER JOIN F106 ON f611.CustomerCode = F106.Code
  LEFT JOIN F108 ON f611.SalesmanCode = F108.Code
  LEFT JOIN F110 ON f611.WareHouseCode = F110.Code
WHERE 
    f611.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND LENGTH(f611.SODNo) = 0
AND PostingSend = 1
and PostingRec = prmPostingStatus
ORDER BY f611.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_get_Pay` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_get_Pay` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_get_Pay`(
   IN prmBranchCode VARCHAR(50),
   IN prmINVNo varchar(50)
)
BEGIN
  SELECT
    f611.PayDescription
  FROM f611
  WHERE 
    f611.BranchCode = prmBranchCode AND f611.INVNo = prmINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_get_PaymentNotes` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_get_PaymentNotes` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_get_PaymentNotes`(
   IN prmBranchCode VARCHAR(50),
   IN prmINVNo varchar(50)
)
BEGIN
	SELECT
	f611.INVNo, 
	f611.TransactionDate,
	F106.Code 		as CustomerCode, 
	F106.Name 		as CustomerName, 
	F106.ContactPerson 	as CustomerContact,
        f611.ExchangeRate, 
	F106.Address	 	as CustomerAddress, 
	F106.ZipCode 		as CustomerZipCode, 
	F106.Phone1 		as CustomerPhone1, 
	F106.Phone2 		as CustomerPhone2, 
	F106.Fax 		as CustomerFax, 
	F106.EmailAddress 	as CustomerEmailAddress, 
	F010.Code 		as CustomerCountryCode,  
	F010.Name 		as CustomerCountryName, 
	F009.Code 		as CustomerCityCode,  
	F009.Name 		as CustomerCityName, 
        f611.Description	as INVDescriptionHeader, 
	f611.PayDescription,	
        f611.GrandTotal 	as INVGrandTotal, 
	(f611.GrandTotal * f611.ExchangeRate) as INVGrandTotalAmountLocal	
	from f611 
	    INNER JOIN F106 on  f611.CustomerCode = F106.Code 
	    INNER JOIN F009 on F106.CityCode     = F009.Code 
	    INNER JOIN F010 on F106.CountryCode  = F010.Code     
	WHERE 
		f611.BranchCode = prmBranchCode AND
		f611.INVNo = prmINVNo;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_insert`(
	prmINVNo varchar(50),
	prmTransactionDate date,
            prmfunit_code VARCHAR(50),
            prmFromDate DATE,
            prmToDate DATE,
            prmStartMeter decimal(10,2),
            prmFinishMeter DECIMAL(10,2),
            prmUsage DECIMAL(10,2),
            prmfkva_code VARCHAR(50),
            prmfkva_tariff DECIMAL(22,2),
            prmfkva_load DECIMAL(10,2),
            prmPhase DECIMAL(10,0),
            prmfunit_sqm DECIMAL(10,2),
            prmfunit_long DECIMAL(10,2),
            prmfunit_width DECIMAL(10,2),
            prmCustomerCode VARCHAR(50),
            prmTotalTransaction DECIMAL(18,2),
            prmPPNAmount DECIMAL(18,2),
            prmPPHAmount DECIMAL(18,2),
            prmAbonemenBeforePPN DECIMAL(18,2),
            prmAdminBeforePPN DECIMAL(18,2),
            prmMinimumFeeBeforePPN DECIMAL(18,2),
                  prmPJBBeforePPN DECIMAL(18,2),
                prmPPH23FeeAfterPPN DECIMAL(18,2),
            prmGrandTotal DECIMAL(18,2),
            prmWarehouseCode VARCHAR(50),
            prmTaxStatus DECIMAL(1,0),
            prmDaysDueDate DECIMAL(20,0),
            prmCreatedBy varchar(50)    
)
BEGIN
	INSERT INTO f611
	(
	 INVNo,
	TransactionDate,
            SODNo,
            FromDate,
            ToDate,
            StartMeter,
            FinishMeter,
            fUSAGE,
            fkva_code,
            fkva_tariff,
            fkva_load,
            fPhase,
            funit_sqm,
            funit_long,
            funit_width,
            CustomerCode,
            TotalTransaction,
            PPNAmount,
            PPHAmount,
            AbonemenBeforePPN,
            AdminBeforePPN,
            MinimumFeeBeforePPN,
            PJBBeforePPN,
            PPH23FeeAfterPPN,
            GrandTotal,
            WarehouseCode,
            TaxStatus,  
            DaysDueDate, 
	CreatedBy,      
	CreatedDate 
	)
	VALUE
	(
	   prmINVNo,
	prmTransactionDate,
            prmfunit_code,
            prmFromDate,
            prmToDate,
            prmStartMeter,
            prmFinishMeter,
            prmUsage,
            prmfkva_code,
            prmfkva_tariff,
            prmfkva_load,
            prmPhase,
            prmfunit_sqm,
            prmfunit_long,
            prmfunit_width,
            prmCustomerCode,
            prmTotalTransaction,
            prmPPNAmount,
            prmPPHAmount,
            prmAbonemenBeforePPN,
            prmAdminBeforePPN,
            prmMinimumFeeBeforePPN,
            prmPJBBeforePPN,
            prmPPH23FeeAfterPPN,
            prmGrandTotal,
            prmWarehouseCode,
            prmTaxStatus,  
            prmDaysDueDate,    
	prmCreatedBy,
	NOW()
	);          
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Insert_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Insert_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Insert_InvNonDO`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmINVNo VARCHAR(50), 
    IN prmVoucherNo VARCHAR(50), 
    IN prmTransactionDate datetime, 
IN prmFromDate datetime,
IN prmToDate datetime, 
    IN prmCurrencyCode VARCHAR(50), 
IN prmBankAccountCode varchar(50), 
    IN prmPaymentTermCode VARCHAR(50), 
    IN prmExchangeRate decimal(18,4), 
    IN prmCustomerCode VARCHAR(50), 
    IN prmSalesmanCode VARCHAR(50),
    IN prmWarehouseCode VARCHAR(50),  
    IN prmDescription Text, 
    IN prmTaxStatus TinyInt,
    IN prmTotalTransaction decimal(18,4),
    IN prmDiscountPercent decimal(4,2), 
    IN prmDiscountAmount decimal(18,4),
    IN prmOtherFeeBeforePPN decimal(18,4),
    IN prmPPNPercent decimal(4,2),
    IN prmPPNAmount decimal(18,4), 
    IN prmOtherFeeAfterPPN decimal(18,4),
IN prmMateraiFeeAfterPPN    decimal(18,4),  
IN prmPackingFeeAfterPPN    decimal(18,4),  
IN prmAsuransiFeeAfterPPN   decimal(18,4), 
IN prmPPh23FeeAfterPPN      decimal(18,4), 
    IN prmFinalDiscount decimal(18,4),
IN prmDeductionAfterPPn decimal(18,4),
    IN prmGrandTotal decimal(18,4), 
    IN prmCreatedBy VARCHAR(50) 
    
 )
BEGIN 
  INSERT INTO f611 ( 
    f611.BranchCode, 
    f611.INVNo, 
	f611.StatusRef,
    f611.VoucherNo, 
    f611.TransactionDate,
f611.FromDate,
f611.ToDate,    
    f611.CurrencyCode, 
f611.BankAccountCode,
    f611.PaymentTermCode, 
    f611.ExchangeRate, 
    f611.CustomerCode, 
    f611.SalesmanCode,
    f611.WarehouseCode,  
    f611.Description, 
    f611.TaxStatus,
    f611.TotalTransaction, 
    f611.DiscountPercent, 
    f611.DiscountAmount, 
    f611.OtherFeeBeforePPN, 
    f611.PPNPercent, 
    f611.PPNAmount, 
    f611.OtherFeeAfterPPN, 
f611.MateraiFeeAfterPPN,  
f611.PackingFeeAfterPPN,  
f611.AsuransiFeeAfterPPN, 
f611.PPh23FeeAfterPPN, 
    f611.FinalDiscount,
f611.DeductionAfterPPn,
    f611.GrandTotal, 
    f611.CreatedBy, 
    f611.CreatedDate
    
    
 ) VALUES ( 
    prmBranchCode, 
    prmINVNo, 
'N',
   prmVoucherNo, 
    prmTransactionDate,
prmFromDate,
prmToDate,    
    prmCurrencyCode, 
prmBankAccountCode,
    prmPaymentTermCode, 
    prmExchangeRate, 
    prmCustomerCode, 
    prmSalesmanCode,
    prmWarehouseCode,  
    prmDescription, 
    prmTaxStatus,
    prmTotalTransaction, 
    prmDiscountPercent, 
    prmDiscountAmount, 
    prmOtherFeeBeforePPN, 
    prmPPNPercent, 
    prmPPNAmount, 
    prmOtherFeeAfterPPN, 
prmMateraiFeeAfterPPN,  
prmPackingFeeAfterPPN,  
prmAsuransiFeeAfterPPN, 
prmPPh23FeeAfterPPN, 
    prmFinalDiscount,
prmDeductionAfterPPn,
    prmGrandTotal, 
    prmCreatedBy, 
    Now() 
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Search_ByItemAndCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Search_ByItemAndCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Search_ByItemAndCode`(
  prmBranchCode VarChar(50), 
  prmCustomerCode VarChar(50), 
  prmSalesmanCode VarChar(50), 
  prmItemCode VarChar(50),
  prmCurrencyCode VarChar(50),
  prmCode varChar(50))
BEGIN	
	SELECT
		f611.INVNo,
		f611.TransactionDate,
		f611.CurrencyCode,
		f612.Quantity,
		f612.Price,
		f612.DiscountPercent1,
		f612.DiscountPercent2,
		f612.DiscountPercent3,
		f611.DiscountPercent,
		f611.PPNPercent
		
	FROM f612
	INNER JOIN f611 ON f611.BranchCode = prmBranchCode AND f612.INVNo = f611.INVNo
	WHERE 
		f612.BranchCode = prmBranchCode AND
		f612.ItemCode = prmItemCode AND
		f611.CustomerCode = prmCustomerCode AND
		f611.SalesmanCode = prmSalesmanCode AND
		f611.CurrencyCode = prmCurrencyCode AND
		f611.INVNo = prmCode
	ORDER BY
		f612.INVNo DESC;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_update`(
        prmINVNo                 varchar(50),           
	prmSODNo                 varchar(50),    
	prmStatusRef varchar(1),
	-- prmVoucherNo             varchar(50),   
	prmTransactionDate       datetime,     
prmFromDate       datetime,
prmToDate       datetime,  
	prmCurrencyCode          varchar(50), 
IN prmBankAccountCode varchar(50),  
	prmPaymentTermCode       varchar(50),   
	prmExchangeRate          decimal(18,4), 
	prmCustomerCode          varchar(50),   
	prmDescription           text,          
	prmTotalTransaction      decimal(18,4), 
	prmDiscountPercent       decimal(18,4),  
	prmDiscountAmount        decimal(18,4), 
	prmPPNPercent            decimal(18,4),  
	prmPPNAmount             decimal(18,4), 
	prmGrandTotal            decimal(18,4), 
	prmPaidAmount            decimal(18,4), 
	prmAssignStatus          decimal(18,4),  
	prmDeleteStatus          tinyint,    
        prmTaxStatus             tinyint,    
	prmOtherFeeBeforePPN     decimal(18,4), 
	prmOtherFeeAfterPPN      decimal(18,4), 
prmMateraiFeeAfterPPN    decimal(18,4),  
prmPackingFeeAfterPPN    decimal(18,4),  
prmAsuransiFeeAfterPPN   decimal(18,4), 
prmPPh23FeeAfterPPN      decimal(18,4), 
	prmBranchCode            varchar(50),   
	prmWarehouseCode         varchar(50),  
	prmUpdatedBy             varchar(50),    
	-- prmCreatedDate           datetime  
        prmOldCode VARCHAR(50) 
)
BEGIN
		UPDATE f611 SET
			INVNo                			= prmINVNo,               
			SODNo                			= prmSODNo,
		StatusRef 		= prmStatusRef,
			-- VoucherNo            		 	= prmVoucherNo,
			TransactionDate   			= prmTransactionDate, 
FromDate=prmFromDate,
ToDate=prmToDate, 
			CurrencyCode     			= prmCurrencyCode, 
BankAccountCode=prmBankAccountCode,
			PaymentTermCode 			= prmPaymentTermCode,    
			ExchangeRate    			= prmExchangeRate,
			CustomerCode     			= prmCustomerCode,   
			-- SalesmanCode   				= prmSalesmanCode,    
			Description  				= prmDescription,       
			TotalTransaction 			= prmTotalTransaction,   
			DiscountPercent 		        = prmDiscountPercent,   
			DiscountAmount   		        = prmDiscountAmount,    
			PPNPercent   				= prmPPNPercent,      
			PPNAmount   				= prmPPNAmount,        
			GrandTotal  				= prmGrandTotal,         
			PaidAmount 				= prmPaidAmount,         
			AssignStatus  				= prmAssignStatus,       
			DeleteStatus 				= prmDeleteStatus,       
			TaxStatus 				= prmTaxStatus,       
			OtherFeeBeforePPN 			= prmOtherFeeBeforePPN,   
			OtherFeeAfterPPN 			= prmOtherFeeAfterPPN,  
MateraiFeeAfterPPN=prmMateraiFeeAfterPPN,  
PackingFeeAfterPPN=prmPackingFeeAfterPPN,  
AsuransiFeeAfterPPN=prmAsuransiFeeAfterPPN, 
PPh23FeeAfterPPN=prmPPh23FeeAfterPPN,       
			BranchCode  				= prmBranchCode,        
			WarehouseCode 				= prmWarehouseCode,     
			UpdatedBy 				= prmUpdatedBy
			-- UpdatedDate				= prmUpdatedDate
		WHERE
			INVNo = prmOldCode
			AND 
			INVNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Update_FakNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Update_FakNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Update_FakNo`( 
    prmOldBranchCode VARCHAR(50),
    prmOldINVNo VARCHAR(50),     
    prmFakNo VARCHAR(50),      
	prmFakDate       datetime, 
	prmStatusFak          varchar(1),
	prmUpdatedBy             varchar(50)  
 )
BEGIN 
  UPDATE f611 SET    
    FakNo = prmFakNo, 
    FakDate = NOW(),
StatusFak=prmStatusFak,
UpdatedBy=prmUpdatedBy    
  WHERE f611.BranchCode = prmOldBranchCode AND f611.INVNo = prmOldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Update_FakNoRef` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Update_FakNoRef` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Update_FakNoRef`( 
    IN prmOldBranchCode VARCHAR(50),
    IN prmOldINVNo VARCHAR(50),     
    IN prmFakNoRef VARCHAR(50)
 )
BEGIN 
  UPDATE f611 SET    
    FakNoRef = prmFakNoRef, 
    FakRefDate = NOW()    
  WHERE f611.BranchCode = prmOldBranchCode AND f611.INVNo = prmOldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Update_GiroReject_F504PaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Update_GiroReject_F504PaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_Update_GiroReject_F504PaidAmount`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE f611 SET
			PaidAmount = PaidAmount - prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Update_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Update_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Update_InvNonDO`( 
    IN prmOldBranchCode VARCHAR(50),
    IN prmOldINVNo VARCHAR(50),
     IN prmBranchCode VARCHAR(50),
    IN prmSODNo VARCHAR(50),
prmStatusRef varchar(1),
    IN prmVoucherNo VARCHAR(50), 
    IN prmTransactionDate datetime, 
  IN prmFromDate       datetime,
  IN prmToDate       datetime, 
    IN prmCurrencyCode VARCHAR(50), 
IN prmBankAccountCode varchar(50), 
    IN prmPaymentTermCode VARCHAR(50), 
    IN prmExchangeRate Decimal(18,4), 
    IN prmCustomerCode VARCHAR(50), 
    IN prmSalesmanCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmDescription Text, 
    IN prmRefNo varchar(50),
    IN prmTaxStatus TinyInt,
    IN prmTotalTransaction Decimal(18,4), 
    IN prmDiscountPercent Decimal(4,2), 
    IN prmDiscountAmount Decimal(18,4), 
    IN prmFinalDiscount Decimal(18,4), 
    IN prmOtherFeeBeforePPN Decimal(18,4), 
IN prmMateraiFeeAfterPPN    decimal(18,4),  
IN prmPackingFeeAfterPPN    decimal(18,4),  
IN prmAsuransiFeeAfterPPN   decimal(18,4), 
IN prmPPh23FeeAfterPPN      decimal(18,4), 
    IN prmPPNPercent Decimal(4,2), 
    IN prmPPNAmount Decimal(18,4), 
    IN prmOtherFeeAfterPPN Decimal(18,4), 
IN prmDeductionAfterPPn decimal(18,4),
    IN prmGrandTotal Decimal(18,4), 
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE f611 SET 
    BranchCode = prmBranchCode,
    SODNo = prmSODNo,
StatusRef 		= prmStatusRef,
    VoucherNo = prmVoucherNo, 
    TransactionDate = prmTransactionDate, 
FromDate=prmFromDate,
ToDate=prmToDate, 
    CurrencyCode = prmCurrencyCode, 
BankAccountCode=prmBankAccountCode,
    PaymentTermCode = prmPaymentTermCode, 
    ExchangeRate = prmExchangeRate, 
    CustomerCode = prmCustomerCode, 
    SalesmanCode = prmSalesmanCode, 
    WarehouseCode = prmWarehouseCode, 
    Description = prmDescription, 
    RefNo = prmRefNo,
    TaxStatus = prmTaxStatus,
    TotalTransaction = prmTotalTransaction, 
    DiscountPercent = prmDiscountPercent, 
    DiscountAmount = prmDiscountAmount, 
    FinalDiscount = prmFinalDiscount, 
    OtherFeeBeforePPN = prmOtherFeeBeforePPN, 
MateraiFeeAfterPPN=prmMateraiFeeAfterPPN,  
PackingFeeAfterPPN=prmPackingFeeAfterPPN,  
AsuransiFeeAfterPPN=prmAsuransiFeeAfterPPN, 
PPh23FeeAfterPPN=prmPPh23FeeAfterPPN,  
    PPNPercent = prmPPNPercent, 
    PPNAmount = prmPPNAmount, 
    OtherFeeAfterPPN = prmOtherFeeAfterPPN, 
DeductionAfterPPn=prmDeductionAfterPPn,
    GrandTotal = prmGrandTotal,
    UpdatedBy = prmUpdatedBy, 
    UpdatedDate = Now()
  WHERE f611.BranchCode = prmOldBranchCode AND f611.INVNo = prmOldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Update_PaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Update_PaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_Update_PaidAmount`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE f611 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F502 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					BKMNo=prmBuktiNo 
				     and DocumentNo=prmINVNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Update_PaidAmount_F504` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Update_PaidAmount_F504` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_Update_PaidAmount_F504`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE f611 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F504 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					BBMNo=prmBuktiNo 
				     and DocumentNo=prmINVNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Update_PaidAmount_F520` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Update_PaidAmount_F520` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_Update_PaidAmount_F520`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE f611 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F520 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					GJMNo=prmBuktiNo 
				     and DocumentNo=prmINVNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Update_PaidAmount_GiroReject` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Update_PaidAmount_GiroReject` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_Update_PaidAmount_GiroReject`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE f611 SET
			PaidAmount = PaidAmount -
				    IFNull((select 0-Amount from F504 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					BBMNo=prmBuktiNo 
				     and DocumentNo=prmINVNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Update_Pay` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Update_Pay` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Update_Pay`( 
    IN oldBranchCode VARCHAR(50),
    IN oldINVNo VARCHAR(50),
    IN prmPayDescription Text
 )
BEGIN 
  UPDATE f611 SET 
    PayDescription = prmPayDescription
  WHERE f611.INVNo = oldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_update_posting` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_update_posting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_update_posting`(
    IN prmBranchCode VARCHAR(50),
    IN prmINVNo VARCHAR(50),
    IN prmPosting boolean
)
BEGIN
	UPDATE 
	   f611 
	SET 
	   PostingSend = prmPosting
	WHERE
	   BranchCode = prmBranchCode AND INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_update_postingRec` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_update_postingRec` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f611_update_postingRec`(
    IN prmBranchCode VARCHAR(50),
    IN prmINVNo VARCHAR(50),
    IN prmPosting boolean,
    IN prmPostingSendCust BOOLEAN,
    IN prmPostingRecCust BOOLEAN
)
BEGIN
	UPDATE 
	   f611 
	SET 
	   PostingRec = prmPosting,
	   PostingSendCust= prmPostingSendCust,
	   PostingRecCust = prmPostingRecCust
	WHERE
	   BranchCode = prmBranchCode AND INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f611_Update_RefNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f611_Update_RefNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f611_Update_RefNo`( 
	prmBillNo VARCHAR(50),     
	prmINVNo VARCHAR(50), 
  	prmUpdatedBy varchar(50)  
 )
BEGIN 
  UPDATE f611 SET    
	RefNo = prmINVNo, 
	RefDate = NOW(),
	UpdatedBy=prmUpdatedBy    
  WHERE f611.INVNo = prmBillNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f612_delete`(
	prmBranchCode VARCHAR(50),
	prmINVNo VARCHAR(50)
)
BEGIN
		DELETE FROM f612 WHERE  f612.INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_F609_Get_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_F609_Get_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f612_F609_Get_InvNonDO`(prmBranchCode varchar(50), prmINVNo varchar(50))
BEGIN
      SELECT 
	f612.BranchCode, 
	f612.INVNo, 
        "ITEM" As Type,
	f612.ItemCode As Code,
	F013.Name,
cast('' as char(50)) as ProductCode,
cast('' as char(50)) as ProductName,
	f612.Description,
	F013.UnitCode,
	f612.Quantity, 
	f612.BonusQuantity, 
	f612.Price, 
	f612.DiscountPercent1, 
	f612.DiscountAmount1, 
	f612.FinalDiscount1, 
	f612.DiscountPercent2, 
	f612.DiscountAmount2, 
	f612.DiscountPercent3, 
	f612.DiscountAmount3, 
	f612.CreatedBy, 
	f612.CreatedDate, 
	f612.UpdatedBy, 
	f612.UpdatedDate
      FROM f612
	INNER JOIN F013 ON f612.ItemCode = F013.Code
	WHERE f612.BranchCode = prmBranchCode AND f612.INVNo = prmINVNo
    UNION ALL
      
    SELECT 
      F609.BranchCode, 
      F609.INVNo,
      "SERVICE" as Type, 
      F609.ServiceCode As Code,
      F025.Name,
F609.ProductCode,
F040.Name as ProductName,
      F609.Description,
      '' As UnitCode,
      F609.Quantity,
      0 As BonusQuantity, 
      F609.Price, 
      F609.DiscountPercent1, 
      F609.DiscountAmount1, 
      F609.FinalDiscount1, 
      F609.DiscountPercent2, 
      F609.DiscountAmount2, 
      F609.DiscountPercent3, 
      F609.DiscountAmount3, 
      F609.CreatedBy, 
      F609.CreatedDate, 
      F609.UpdatedBy, 
      F609.UpdatedDate
    FROM F609
      INNER JOIN F025 ON F609.ServiceCode = F025.Code
 INNER JOIN F040 ON F609.ProductCode = F040.Code
      WHERE F609.BranchCode = prmBranchCode AND F609.INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f612_get`(prmINVNo VARCHAR(50))
BEGIN
		SELECT 	
			f612.INVNo, 
			f612.ItemCode,
			f612.ItemAlias,
			f612.Description,
			f612.furut,
		f612.fupper,
		f612.flower,
			F048.funit_name AS ItemName,
			f048.funit_type AS UnitCode,
			f612.Quantity, 
			f612.BonusQuantity, 
			f612.Price, 
			f612.DiscountPercent1, 
			f612.DiscountAmount1, 
			f612.DiscountPercent2, 
			f612.DiscountAmount2, 
			f612.DiscountPercent3, 
			f612.DiscountAmount3,
			((f612.Quantity * f612.Price) - f612.DiscountAmount1 - f612.DiscountAmount2 - f612.DiscountAmount3) AS Total
		FROM
			f612
			INNER JOIN F048 ON f612.ItemCode = F048.funit_code
		WHERE
			-- f612.BranchCode = prmBranchCode AND
			f612.INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_Get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_Get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f612_Get_ByCode`(
IN prmINVNo varchar(50))
BEGIN 
  SELECT 
     
 f612.INVNo,
 f612.ItemCode,
 f612.ItemAlias,
 f612.ftradeName,
 f612.Description,
 f612.Quantity,
 f612.BonusQuantity,
 f612.Price,
 f612.Total,
 f612.DiscountPercent1,
 f612.DiscountAmount1,
 f612.FinalDiscount1,
 f612.DiscountPercent2,
 f612.DiscountAmount2,
 f612.DiscountPercent3,
 f612.DiscountAmount3,
 f612.flangganan,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate,
 f612.TenancyCode,
 f612.fstatuskios,
 f612.flower,
 f612.fupper,
 f612.furut
    
FROM f612
WHERE
   f612.INVNo = prmINVNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_Get_ByService` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_Get_ByService` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f612_Get_ByService`(
IN prmItemCode varchar(50),
in prmMONTH int(2),
IN prmYear int(4)
 )
BEGIN 
  SELECT 
     
 f612.INVNo,
 f611.TransactionDate,
 f612.ItemCode,
 f612.ItemAlias,
 f612.ftradeName,
 f612.Description,
 f612.Quantity,
 f612.BonusQuantity,
 f612.Price,
 f612.Total,
 f612.DiscountPercent1,
 f612.DiscountAmount1,
 f612.FinalDiscount1,
 f612.DiscountPercent2,
 f612.DiscountAmount2,
 f612.DiscountPercent3,
 f612.DiscountAmount3,
 f612.flangganan,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate,
 f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
WHERE
   f612.ItemCode = prmItemCode AND MONTH(f611.TransactionDate)=prmMONTH AND YEAR(f611.TransactionDate)=prmYear  AND SUBSTR(f612.INVNo,8,1)='S'
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_get_f611_History` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_get_f611_History` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f612_get_f611_History`(
	IN prmBranchCode VARCHAR(50),
	IN prmFirstDate Datetime,
	IN prmLastDate Datetime,
	IN prmINVNo varchar(50),  
	IN prmCustomerCode Varchar(50), 
	IN prmCustomerName Varchar(100),
	IN prmCurrencyCode varchar(50),
	IN prmCurrencyName varchar(100),
	IN prmPaymentTermCode Varchar(50),
	IN prmPaymentTermName varchar(100),
	IN prmSalesmanCode Varchar(50),
	IN prmSalesmanName varchar(100),
	IN prmItemCode Varchar(50),
	IN prmItemName varchar(100)
)
BEGIN
	SELECT 	
		        f611.INVNo			as INVNo,
			f611.TransactionDate 		as TransactionDate,
			f611.SODNo 			as SODNo,
			f611.PaymentTermCode 		as PaymentTermCode, 	
			F106.Code 			as CustomerCode, 	
			F106.Name 			as CustomerName, 	
			f611.SalesmanCode 		As SalesmanCode,		
			F006.Code 			as CurrencyCode, 
			F006.Name 			as CurrencyName, 
			f611.ExchangeRate		as ExchangeRate,
			f611.Description 		as Description,	
			F013.Code 			as ItemCode,
			F013.Name		        as ItemName,
			f612.Quantity, 
			f612.BonusQuantity, 
			f612.Price, 
			f612.DiscountPercent1, 
			f612.DiscountAmount1, 
			f612.DiscountPercent2, 
			f612.DiscountAmount2, 
			f612.DiscountPercent3, 
			f612.DiscountAmount3, 
			f611.TotalTransaction   			as INVTotalTransaction, 
		       (f611.TotalTransaction * f611.ExchangeRate) 	as INVTotalTransactionAmountLocal, 
			f611.DiscountPercent 				as INVDiscountPercentHeader, 
			f611.DiscountAmount 				as INVDiscountAmountHeader, 
			(f611.DiscountAmount * f611.ExchangeRate) 	as INVDiscountAmountHeaderLocal, 
			f611.OtherFeeBeforePPN 			        as INVOtherFeeBeforePPNAmount, 
			(f611.OtherFeeBeforePPN * f611.ExchangeRate)    as INVOtherFeeBeforePPNAmountLocal, 
			f611.PPNPercent 				as INVPPNPercent, 
			f611.PPNAmount 					as INVPPNAmount, 
			(f611.PPNAmount * f611.ExchangeRate)		as INVPPNAmountLocal, 
                        f611.OtherFeeAfterPPN 			      as INVOtherFeeAfterPPNAmount, 
			(f611.OtherFeeAfterPPN * f611.ExchangeRate)   as INVOtherFeeAfterPPNAmountLocal, 
			f611.GrandTotal 			  	as INVGrandTotal, 
			(f611.GrandTotal * f611.ExchangeRate) 		as INVGrandTotalAmountLocal, 
			f611.PaidAmount 			   	as INVPaidAmount, 
			(f611.PaidAmount * f611.ExchangeRate) 	   	as INVPaidAmountLocal
		FROM
			f612
			INNER JOIN f611 ON f612.INVNo = f611.INVNo and f612.BranchCode = f611.BranchCode
			INNER JOIN F013 ON f612.ItemCode = F013.Code
			INNER JOIN F106 ON f611.CustomerCode = F106.Code and f611.BranchCode = F106.BranchCode
			INNER JOIN F006 ON f611.CurrencyCode = F006.Code
			INNER JOIN F108 ON f611.SalesmanCode = F108.Code and f611.BranchCode = F108.BranchCode
		 WHERE
		 f611.BranchCode = prmBranchCode AND
		 f611.TransactionDate BETWEEN prmFirstDate AND prmLastDate 
		 And f611.INVNo Like prmINVNo 
		 And F013.Code Like prmItemCode 
		 And F013.Name Like prmItemName 
		 and F106.Code like prmCustomerCode 
		 and F106.Name like prmCustomerName 
		 and F006.Code like prmCurrencyCode 
		 and F006.Name like prmCurrencyName
		 and F108.Code like prmSalesmanCode 
		 and F108.Name like prmSalesmanName
;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_Get_ForINV` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_Get_ForINV` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f612_Get_ForINV`(
IN prmItemCode varchar(50),
in prmMONTH int(2),
IN prmYear int(4)
 )
BEGIN 
  SELECT 
     
 f612.INVNo,
 f611.TransactionDate,
 f612.ItemCode,
 f612.ItemAlias,
 f612.ftradeName,
 f612.Description,
 f612.Quantity,
 f612.BonusQuantity,
 f612.Price,
 f612.Total,
 f612.PPnAmount,
 -- f612.fadm,
 f612.BiayaBeban,
 f612.fbill_pph,
  f612.fbill_adm,
  f612.fbill_ppj, 
 f612.DiscountPercent1,
 f612.DiscountAmount1,
 f612.FinalDiscount1,
 f612.DiscountPercent2,
 f612.DiscountAmount2,
 f612.DiscountPercent3,
 f612.DiscountAmount3,
 f612.flangganan,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate,
 f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
WHERE
   f612.ItemCode like prmItemCode AND MONTH(f611.TransactionDate)=prmMONTH AND YEAR(f611.TransactionDate)=prmYear  
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_Get_INVNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_Get_INVNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f612_Get_INVNo`(
IN prmINVNo varchar(50)
 )
BEGIN 
  SELECT 
     
 f612.INVNo,
 -- f611.TransactionDate,
 f612.ItemCode,
 f612.ItemAlias,
 f612.ftradeName,
 f612.Description,
 f612.Quantity,
 f612.BonusQuantity,
 f612.Price,
 f612.Total,
 f612.DiscountPercent1,
 f612.DiscountAmount1,
 f612.FinalDiscount1,
 f612.DiscountPercent2,
 f612.DiscountAmount2,
 f612.DiscountPercent3,
 f612.DiscountAmount3,
 f612.flangganan,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate,
 f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut
    
FROM f612
WHERE
   f612.INVNo = prmINVNo  
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_Get_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_Get_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f612_Get_InvNonDO`(prmBranchCode varchar(50), prmINVNo varchar(50))
BEGIN 
  SELECT 
    f612.BranchCode, 
    f612.INVNo, 
    f612.ItemCode,
    F013.Name As ItemName,
    F013.UnitCode,
    f612.Quantity, 
    f612.BonusQuantity, 
    f612.Price, 
    f612.DiscountPercent1, 
    f612.DiscountAmount1, 
    f612.FinalDiscount1, 
    f612.DiscountPercent2, 
    f612.DiscountAmount2, 
    f612.DiscountPercent3, 
    f612.DiscountAmount3, 
    f612.CreatedBy, 
    f612.CreatedDate, 
    f612.UpdatedBy, 
    f612.UpdatedDate
FROM f612
  INNER JOIN F013 ON f612.ItemCode = F013.Code
  WHERE f612.BranchCode = prmBranchCode AND f612.INVNo = prmINVNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_Get_PrintBillUnit` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_Get_PrintBillUnit` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f612_Get_PrintBillUnit`(
IN prmItemCode varchar(50),
in prmMONTH int(2),
IN prmYear int(4)
 )
BEGIN 
SELECT 
 f611.INVNo,
 f611.CustomerCode,
 f611.WarehouseCode,
 f611.TransactionDate,
 f611.TaxStatus,
	f611.FakNo,
	f611.FakDate,
	f611.VoucherNo,
	f611.PrintDate,
	f611.TotalTransaction,
	f611.Description,
	f611.PPNAmount,
	f611.PPh23FeeAfterPPN,
	f611.AdminBeforePPN,
	f611.MinimumFeeBeforePPN,
	f611.PJBBeforePPN,
	f611.DaysDueDate,
	f611.fkva_code,
	f611.fkva_tariff,
	f611.StartMeter,
	f611.FinishMeter,
	f611.fUsage,
 f612.ItemCode,
 f612.ItemAlias,
 f612.ftradeName,
 f612.Description,
 f612.Quantity,
 f612.BonusQuantity,
 f612.Price,
 f612.Total,
 f612.PPnAmount,
 -- f612.fadm,
 f612.BiayaBeban,
 f612.fbill_pph,
  f612.fbill_adm,
  f612.fbill_ppj, 
 f612.DiscountPercent1,
 f612.DiscountAmount1,
 f612.FinalDiscount1,
 f612.DiscountPercent2,
 f612.DiscountAmount2,
 f612.DiscountPercent3,
 f612.DiscountAmount3,
 f612.flangganan,
 f612.CreatedBy,
 f612.CreatedDate,
 f612.UpdatedBy,
 f612.UpdatedDate,
 f612.TenancyCode,
 f612.flower,
 f612.fupper,
 f612.furut
    
FROM f612
INNER JOIN f611 ON f611.INVNo = f612.INVNo
WHERE
   f612.ItemCode = prmItemCode AND MONTH(f611.TransactionDate)=prmMONTH AND YEAR(f611.TransactionDate)=prmYear  
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_Get_SumQtyByItemAndInvNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_Get_SumQtyByItemAndInvNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f612_Get_SumQtyByItemAndInvNo`(prmBranchCode VarChar(50), prmItemCode VarChar(50), prmINVNo VarChar(50))
BEGIN
		SELECT 
			Sum(f612.Quantity) as INVQuantity 
		FROM f612 
		WHERE 
			f612.BranchCode = prmBranchCode AND 
            f612.ItemCode = prmItemCode AND 
			f612.INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_f612_insert`(
	-- prmfurut VARCHAR(50),
              prmINVNo varchar(50),
               prmItemCode varchar(50),
              -- prmItemName VARCHAR(50),
               -- prmftradeName VARCHAR(200),
                prmItemAlias VARCHAR(50),
                prmDescription VARCHAR(200),
                prmQuantity DECIMAL(18,4), 
               prmTenancyCode VARCHAR(50),
               prmfstatuskios varchar(1),
                prmflower DECIMAL(18,4), 
                prmfupper DECIMAL(18,4), 
                prmPrice DECIMAL(18,4), 
                prmTotal DECIMAL(18,4),
                prmfurut varchar(10),
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO f612 (
		-- furut,
		INVNo,
               ItemCode,
              -- ItemName,
               -- ftradeName,
                ItemAlias,
                Description,
                Quantity, 
                TenancyCode,
                fstatuskios,
                flower, 
                fupper, 
                Price, 
                Total,
                furut,
			CreatedBy, 
			CreatedDate
		)
		VALUES (
		-- prmfurut,
			prmINVNo,
               prmItemCode,
             -- prmItemName,
               --  prmftradeName.
                prmItemAlias,
                prmDescription,
                prmQuantity, 
                prmTenancyCode,
		prmfstatuskios,
                prmflower, 
                prmfupper, 
                prmPrice, 
                prmTotal,
                prmfurut,
			prmCreatedBy, 
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_f612_Insert_InvNonDO` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_f612_Insert_InvNonDO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_f612_Insert_InvNonDO`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmINVNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmQuantity Decimal(18,4), 
    IN prmBonusQuantity Decimal(18,4), 
    IN prmPrice Decimal(18,4), 
    IN prmDiscountPercent1 Decimal(4,2), 
    IN prmDiscountAmount1 Decimal(18,4), 
    IN prmFinalDiscount1 Decimal(18,4), 
    IN prmDiscountPercent2 Decimal(4,2), 
    IN prmDiscountAmount2 Decimal(18,4), 
    IN prmDiscountPercent3 Decimal(4,2), 
    IN prmDiscountAmount3 Decimal(18,4), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO f612 ( 
    f612.BranchCode, 
    f612.INVNo, 
    f612.ItemCode, 
    f612.Quantity, 
    f612.BonusQuantity, 
    f612.Price, 
    f612.DiscountPercent1, 
    f612.DiscountAmount1, 
    f612.FinalDiscount1, 
    f612.DiscountPercent2, 
    f612.DiscountAmount2, 
    f612.DiscountPercent3, 
    f612.DiscountAmount3, 
    f612.CreatedBy, 
    f612.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmINVNo, 
    prmItemCode, 
    prmQuantity, 
    prmBonusQuantity, 
    prmPrice, 
    prmDiscountPercent1, 
    prmDiscountAmount1, 
    prmFinalDiscount1, 
    prmDiscountPercent2, 
    prmDiscountAmount2, 
    prmDiscountPercent3, 
    prmDiscountAmount3, 
    prmCreatedBy,
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F613_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F613_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F613_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmSRTNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F613 
  WHERE F613.BranchCode = prmBranchCode AND F613.SRTNo = prmSRTNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F613_Get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F613_Get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F613_Get_ByCode`(prmBranchCode varchar(50), prmSRTNo varChar(50))
BEGIN 
  SELECT 
    F613.BranchCode,
    F613.SRTNo, 
    F613.TransactionDate, 	
    F613.CurrencyCode,
    F613.ExchangeRate,
    F613.WarehouseCode,
    F613.DiscountPercent, 
    F613.DiscountAmount,
    F613.PPNPercent, 
    F613.PPNAmount,
    F613.OtherFee,
    F613.GrandTotalAmount,
    F613.CreatedBy, 
    F613.UpdatedBy
    
FROM F613
	
WHERE 
  F613.BranchCode = prmBranchCode AND
  F613.SRTNo = prmSRTNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F613_Get_ByINV` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F613_Get_ByINV` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F613_Get_ByINV`(prmBranchCode varchar(50), prmFirstDate datetime, prmLastDate datetime)
BEGIN 
  SELECT 
    F613.BranchCode,
    F001.Name As BranchName,
    F613.SRTNo, 
    F613.TransactionDate, 	
    F613.CurrencyCode,
    F006.Name As CurrencyName,
    F613.ExchangeRate,
    F613.CustomerCode,
    F106.Name As CustomerName, 
	F106.ContactPerson As CustomerContactPerson,
    F613.SalesmanCode,
	F108.Name As SalesmanName,
	F613.WarehouseCode,
	F110.Name As WarehouseName,
    F613.RefNo,
    F613.Description, 
    F613.TotalTransactionAmount,
	(F613.TotalTransactionAmount * F613.ExchangeRate) As TotalTransactionAmountLocal,
    F613.DiscountPercent, 
    F613.DiscountAmount,
	(F613.DiscountAmount * F613.ExchangeRate) As DiscountAmountLocal, 
    F613.PPNPercent, 
    F613.PPNAmount,
	(F613.PPNAmount * F613.ExchangeRate) As PPNAmountLocal, 
    F613.OtherFee,
	(F613.OtherFee * F613.ExchangeRate) As OtherFeeLocal, 
	F613.GrandTotalAmount,
	(F613.GrandTotalAmount * F613.ExchangeRate) As GrandTotalAmountLocal,
    F613.CreatedBy, 
    F613.CreatedDate, 
    F613.UpdatedBy, 
    F613.UpdatedDate
FROM F614
	INNER JOIN F613 ON F614.SRTNo = F613.SRTNo
	INNER JOIN F006 ON F613.CurrencyCode = F006.Code
	INNER JOIN F106 ON F613.CustomerCode = F106.Code
	INNER JOIN F110 ON F613.WareHouseCode = F110.Code
        INNER JOIN F108 ON F613.SalesmanCode = F108.Code
	INNER JOIN F001 ON F613.BranchCode = F001.Code	
WHERE 
	LENGTH(F614.INVNo) > 0 AND
	F613.TransactionDate between prmFirstDate AND prmLastDate
GROUP BY F613.SRTNo
ORDER BY F613.SRTNo DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F613_Get_NonINV` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F613_Get_NonINV` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F613_Get_NonINV`(prmBranchCode varchar(50), prmFirstDate datetime, prmLastDate datetime)
BEGIN 
  SELECT 
    F613.BranchCode,
    F001.Name As BranchName, 
	F613.SRTNo, 
	F613.TransactionDate, 	
	F613.CurrencyCode,
	F006.Name As CurrencyName,
	F613.ExchangeRate,
    F613.CustomerCode,
    F106.Name As CustomerName, 
	F106.ContactPerson As CustomerContactPerson,
    F613.SalesmanCode,
	F108.Name As SalesmanName,
	F613.WarehouseCode,
	F110.Name As WarehouseName,
    F613.RefNo,
    F613.Description, 
    F613.TotalTransactionAmount,
	(F613.TotalTransactionAmount * F613.ExchangeRate) As TotalTransactionAmountLocal,
    F613.DiscountPercent, 
    F613.DiscountAmount,
	(F613.DiscountAmount * F613.ExchangeRate) As DiscountAmountLocal, 
    F613.PPNPercent, 
    F613.PPNAmount,
	(F613.PPNAmount * F613.ExchangeRate) As PPNAmountLocal, 
    F613.OtherFee,
	(F613.OtherFee * F613.ExchangeRate) As OtherFeeLocal, 
	F613.GrandTotalAmount,
	(F613.GrandTotalAmount * F613.ExchangeRate) As GrandTotalAmountLocal,
    F613.CreatedBy, 
    F613.CreatedDate, 
    F613.UpdatedBy, 
    F613.UpdatedDate
FROM F614
	INNER JOIN F613 ON F614.SRTNo = F613.SRTNo
	INNER JOIN F006 ON F613.CurrencyCode = F006.Code
	INNER JOIN F106 ON F613.CustomerCode = F106.Code
	INNER JOIN F110 ON F613.WareHouseCode = F110.Code
	INNER JOIN F108 ON F613.SalesmanCode = F108.Code
        INNER JOIN F001 ON F613.BranchCode = F001.Code
WHERE 
	LENGTH(F614.INVNo) = 0 AND
	F613.TransactionDate between prmFirstDate AND prmLastDate
GROUP BY F613.SRTNo
ORDER BY F613.SRTNo DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F613_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F613_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F613_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmSRTNo VARCHAR(50), 
    IN prmTransactionDate Datetime, 
    IN prmCurrencyCode VARCHAR(50), 
    IN prmExchangeRate Decimal(18,4), 
    IN prmCustomerCode VARCHAR(50), 
    IN prmSalesmanCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmRefNo VARCHAR(100),  
    IN prmDescription Text, 
    IN prmTotalTransactionAmount Decimal(18,4), 
    IN prmDiscountPercent Decimal(18,4), 
    IN prmDiscountAmount Decimal(18,4), 
    IN prmPPNPercent Decimal(18,4), 
    IN prmPPNAmount Decimal(18,4), 
    IN prmOtherFee Decimal(18,4), 
    IN prmGrandTotalAmount Decimal(18,4), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F613 ( 
    F613.BranchCode, 
    F613.SRTNo, 
    F613.TransactionDate, 
    F613.CurrencyCode, 
    F613.ExchangeRate, 
    F613.CustomerCode, 
    F613.SalesmanCode, 
    F613.WarehouseCode, 
    F613.RefNo,  
    F613.Description, 
    F613.TotalTransactionAmount, 
    F613.DiscountPercent, 
    F613.DiscountAmount, 
    F613.PPNPercent, 
    F613.PPNAmount, 
    F613.OtherFee, 
    F613.GrandTotalAmount, 
    F613.CreatedBy, 
    F613.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmSRTNo, 
    prmTransactionDate, 
    prmCurrencyCode, 
    prmExchangeRate, 
    prmCustomerCode, 
    prmSalesmanCode, 
    prmWarehouseCode, 
    prmRefNo, 
    prmDescription, 
    prmTotalTransactionAmount, 
    prmDiscountPercent, 
    prmDiscountAmount, 
    prmPPNPercent, 
    prmPPNAmount, 
    prmOtherFee, 
    prmGrandTotalAmount, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F613_Update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F613_Update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F613_Update`( 
    IN oldBranchCode VARCHAR(50),
    IN oldSRTNo VARCHAR(50),
 
    IN prmBranchCode VARCHAR(50),
    IN prmTransactionDate Datetime, 
    IN prmCurrencyCode VARCHAR(50), 
    IN prmExchangeRate Decimal(18,4), 
    IN prmCustomerCode VARCHAR(50), 
    IN prmSalesmanCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmRefNo VARCHAR(100), 
    IN prmDescription Text, 
    IN prmTotalTransactionAmount Decimal(18,4), 
    IN prmDiscountPercent Decimal(18,4), 
    IN prmDiscountAmount Decimal(18,4), 
    IN prmPPNPercent Decimal(18,4), 
    IN prmPPNAmount Decimal(18,4), 
    IN prmOtherFee Decimal(18,4), 
    IN prmGrandTotalAmount Decimal(18,4),  
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE F613 SET 
    BranchCode = prmBranchCode,
    TransactionDate = prmTransactionDate, 
    CurrencyCode = prmCurrencyCode, 
    ExchangeRate = prmExchangeRate, 
    CustomerCode = prmCustomerCode, 
    SalesmanCode = prmSalesmanCode, 
    WarehouseCode = prmWarehouseCode, 
    RefNo = prmRefNo, 
    Description = prmDescription, 
    TotalTransactionAmount = prmTotalTransactionAmount, 
    DiscountPercent = prmDiscountPercent, 
    DiscountAmount = prmDiscountAmount, 
    PPNPercent = prmPPNPercent, 
    PPNAmount = prmPPNAmount, 
    OtherFee = prmOtherFee, 
    GrandTotalAmount = prmGrandTotalAmount, 
    UpdatedBy = prmUpdatedBy, 
    UpdatedDate = Now()
  WHERE F613.BranchCode = oldBranchCode AND F613.SRTNo = oldSRTNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F613_Update_GiroReject_F504PaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F613_Update_GiroReject_F504PaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F613_Update_GiroReject_F504PaidAmount`(
        prmSRTNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F613 SET
			UsedAmount = UsedAmount - prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			SRTNo = prmSRTNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F613_Update_PaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F613_Update_PaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F613_Update_PaidAmount`(
        prmSRTNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F613 SET
			UsedAmount = UsedAmount +
				    IFNull((select 0-Amount from F502 prmPaidAmount 
					where BranchCode=prmBranchCode and BKMNo=prmBuktiNo 
				     and DocumentNo=prmSRTNo),0) + 
				     prmPaidAmount 
		WHERE 
			BranchCode = prmBranchCode AND SRTNo = prmSRTNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F613_Update_PaidAmount_F504` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F613_Update_PaidAmount_F504` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F613_Update_PaidAmount_F504`(
        prmSRTNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F613 SET
			UsedAmount = UsedAmount +
				    IFNull((select 0-Amount from F504 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					BBMNo=prmBuktiNo 
				     and DocumentNo=prmSRTNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			SRTNo = prmSRTNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F613_Update_PaidAmount_F520` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F613_Update_PaidAmount_F520` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F613_Update_PaidAmount_F520`(
        prmSRTNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount  decimal(18,4)
)
BEGIN
		UPDATE F613 SET
			UsedAmount = UsedAmount +
				    IFNull((select 0-Amount from F520 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					GJMNo=prmBuktiNo 
				     and DocumentNo=prmSRTNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			SRTNo = prmSRTNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F614_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F614_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F614_Delete`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmSRTNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F614 
  WHERE F614.BranchCode = prmBranchCode AND F614.SRTNo = prmSRTNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F614_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F614_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F614_Get`(prmBranchCode VARCHAR(50), prmSRTNo VARCHAR(50))
BEGIN 
  SELECT 
    F614.BranchCode, 
    F614.SRTNo, 
    F614.ItemCode,
	F013.Name As ItemName,
    F614.Quantity, 
	F008.Code As UnitCode,
    F614.Price, 
    F614.DiscountPercent1, 
    F614.DiscountAmount1, 
    F614.DiscountPercent2, 
    F614.DiscountAmount2, 
    F614.DiscountPercent3, 
    F614.DiscountAmount3, 
    F614.INVNo, 
    F614.CreatedBy, 
    F614.CreatedDate, 
    F614.UpdatedBy, 
    F614.UpdatedDate, 
    F614.Description
FROM F614
	INNER JOIN F013 ON F614.ItemCode = F013.Code
	INNER JOIN F008 ON F013.UnitCode = F008.Code																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																						
WHERE F614.BranchCode = prmBranchCode AND F614.SRTNo = prmSrtNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F614_Get_QtyByItemAndINV` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F614_Get_QtyByItemAndINV` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F614_Get_QtyByItemAndINV`(prmBranchCode VarChar(50), prmItemCode VarChar(50), prmINVNo VarChar(50))
BEGIN
		SELECT 
			Sum(F614.Quantity) as ReturnedQuantity 
		FROM F614 
		WHERE 
			F614.BranchCode = prmBranchCode AND 
            F614.ItemCode = prmItemCode AND 
			F614.INVNo = prmINVNo;
		END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F614_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F614_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F614_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmSRTNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmQuantity Decimal(18,4), 
    IN prmPrice Decimal(18,4),  
    IN prmDiscountPercent1 Decimal(18,4), 
    IN prmDiscountAmount1 Decimal(18,4), 
    IN prmDiscountPercent2 Decimal(18,4), 
    IN prmDiscountAmount2 Decimal(18,4), 
    IN prmDiscountPercent3 Decimal(18,4), 
    IN prmDiscountAmount3 Decimal(18,4), 
    IN prmINVNo VARCHAR(50), 
	IN prmDescription Varchar(200),    
	IN prmCreatedBy VARCHAR(50)
    
 )
BEGIN 
  INSERT INTO F614 ( 
    F614.BranchCode, 
    F614.SRTNo, 
    F614.ItemCode, 
    F614.Quantity, 
    F614.Price, 
    F614.DiscountPercent1, 
    F614.DiscountAmount1, 
    F614.DiscountPercent2, 
    F614.DiscountAmount2, 
    F614.DiscountPercent3, 
    F614.DiscountAmount3, 
    F614.INVNo, 
	F614.Description,    
	F614.CreatedBy, 
    F614.CreatedDate
    
 ) VALUES ( 
    prmBranchCode, 
    prmSRTNo, 
    prmItemCode, 
    prmQuantity, 
    prmPrice, 
    prmDiscountPercent1, 
    prmDiscountAmount1, 
    prmDiscountPercent2, 
    prmDiscountAmount2, 
    prmDiscountPercent3, 
    prmDiscountAmount3, 
    prmINVNo, 
    prmDescription,
	prmCreatedBy, 
    Now() 
    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F615_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F615_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F615_Delete`( 
    IN OldCode VARCHAR(50)
 )
BEGIN 
  DELETE FROM F615 
  WHERE F615.PRJNo = OldCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F615_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F615_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F615_Get`(
   IN prmFirstDate DATETIME,
   IN prmLastDate DATETIME,
   IN prmClosingStatus1 tinyint(1),
   IN prmClosingStatus2 tinyint(1)
)
BEGIN 
  SELECT 
    F615.BranchCode, 
    F001.Name As BranchName,
    F615.PRJNo, 
    F615.TransactionDate,
    F615.RefNo,
    F615.CustomerCode,
    F106.Name As CustomerName, 
    F615.DateStart, 
    F615.DateFinish, 
    F615.Description,
    F615.ClosingStatus, 
    F615.CreatedBy, 
    F615.CreatedDate, 
    F615.UpdatedBy, 
    F615.UpdatedDate
FROM F615
	INNER JOIN F001 ON F615.BranchCode 	= F001.Code  
	INNER JOIN F106 ON F615.CustomerCode 	= F106.Code
WHERE
	F615.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
	(F615.ClosingStatus = prmClosingStatus1 OR F615.ClosingStatus = prmClosingStatus2)	
ORDER BY F615.PRJNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F615_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F615_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F615_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmPRJNo VARCHAR(50), 
    IN prmTransactionDate DATETIME,
    IN prmRefNo VARCHAR(100),
    IN prmCustomerCode VARCHAR(50), 
    IN prmDateStart DATETIME, 
    IN prmDateFinish DATETIME, 
    IN prmDescription TEXT, 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F615 ( 
    F615.BranchCode, 
    F615.PRJNo, 
    F615.TransactionDate,
    F615.RefNo,
    F615.CustomerCode, 
    F615.DateStart, 
    F615.DateFinish, 
    F615.Description, 
    F615.CreatedBy, 
    F615.CreatedDate
    
 ) VALUES ( 
    prmBranchCode, 
    prmPRJNo, 
    prmTransactionDate,
    prmRefNo,
    prmCustomerCode, 
    prmDateStart, 
    prmDateFinish, 
    prmDescription, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F615_Update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F615_Update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F615_Update`( 
    IN oldCode VARCHAR(50),
 
    IN prmBranchCode VARCHAR(50), 
    IN prmPRJNo VARCHAR(50), 
    IN prmTransactionDate DATETIME,
    IN prmRefNo VARCHAR(100),
    IN prmCustomerCode VARCHAR(50), 
    IN prmDateStart DATETIME, 
    IN prmDateFinish DATETIME, 
    IN prmDescription TEXT, 
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE F615 SET 
    F615.BranchCode = prmBranchCode, 
    F615.PRJNo = prmPRJNo, 
    F615.TransactionDate = prmTransactionDate, 
    F615.RefNo = prmRefNo,
    F615.CustomerCode = prmCustomerCode, 
    F615.DateStart = prmDateStart, 
    F615.DateFinish = prmDateFinish, 
    F615.Description = prmDescription, 
    F615.UpdatedBy = prmUpdatedBy, 
    F615.UpdatedDate = Now()
  WHERE F615.PRJNo = oldCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F616_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F616_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F616_Delete`( 
    IN OldCode VARCHAR(50)
 )
BEGIN 
  DELETE FROM F616 
  WHERE F616.PRJNo = OldCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F616_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F616_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F616_Get`(IN prmPRJNo VARCHAR(50))
BEGIN 
  SELECT 
    F616.BranchCode, 
    F616.PRJNo, 
    F616.CurrencyCode, 
    F006.Name As CurrencyName,
    F616.ItemCode, 
    F013.Name As ItemName,
    F013.UnitCode,
    F616.Description, 
    F616.Quantity,
    F616.Price,
    (F616.Quantity * F616.Price) As Total
FROM F616
INNER JOIN F006 ON F616.CurrencyCode = F006.Code 
INNER JOIN F013 ON F616.ItemCode = F013.Code
WHERE F616.PRJNo = prmPRJNo
ORDER BY F616.CurrencyCode
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F616_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F616_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F616_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmPRJNo VARCHAR(50), 
    IN prmCurrencyCode VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmDescription VARCHAR(200), 
    IN prmQuantity DECIMAL(18,4), 
    IN prmPrice DECIMAL(18,4), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F616 ( 
    F616.BranchCode, 
    F616.PRJNo, 
    F616.CurrencyCode, 
    F616.ItemCode, 
    F616.Description, 
    F616.Quantity, 
    F616.Price, 
    F616.CreatedBy, 
    F616.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmPRJNo, 
    prmCurrencyCode, 
    prmItemCode, 
    prmDescription, 
    prmQuantity, 
    prmPrice, 
    prmCreatedBy, 
    Now()    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F617_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F617_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F617_Delete`( 
    IN OldCode VARCHAR(50)
 )
BEGIN 
  DELETE FROM F617 
  WHERE F617.PRJNo = OldCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F617_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F617_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F617_Get`(IN prmPRJNo VARCHAR(50))
BEGIN 
  SELECT 
    F617.BranchCode, 
    F617.PRJNo, 
    F617.CurrencyCode,
    F006.Name As CurrencyName, 
    F617.ServiceCode, 
    F025.Name As ServiceName,
    F617.Description, 
    F617.Quantity, 
    F617.Price, 
    (F617.Quantity * F617.Price) As Total
FROM F617
INNER JOIN F006 ON F617.CurrencyCode = F006.Code
INNER JOIN F025 ON F617.ServiceCode = F025.Code
WHERE F617.PRJNo = prmPRJNo
ORDER BY F617.CurrencyCode
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F617_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F617_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F617_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmPRJNo VARCHAR(50), 
    IN prmCurrencyCode VARCHAR(50), 
    IN prmServiceCode VARCHAR(50), 
    IN prmDescription VARCHAR(200), 
    IN prmQuantity DECIMAL(18,4), 
    IN prmPrice DECIMAL(18,4), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F617 ( 
    F617.BranchCode, 
    F617.PRJNo, 
    F617.CurrencyCode, 
    F617.ServiceCode, 
    F617.Description, 
    F617.Quantity, 
    F617.Price, 
    F617.CreatedBy, 
    F617.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmPRJNo, 
    prmCurrencyCode, 
    prmServiceCode, 
    prmDescription, 
    prmQuantity, 
    prmPrice, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F618_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F618_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F618_get`(
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime
)
BEGIN
	SELECT
	F618.BranchCode, 
	F618.INVNo, 
	F618.TransactionDate,   
	F618.PeriodMonth,
	F618.PeriodYear,
	F618.FromDate,
	F618.ToDate,
	F618.PrintDate,
	F018.Code 		as PaymentTermCode, 
	F018.Name 		as PaymentTermName, 
	F018.Days 		as PaymentTermDays, 
	F106.Code 		as CustomerCode, 
	F106.Name 		as CustomerName, 
	F618.DateJoin,
	F618.CompanyTypeCode,
	F618.Product,
	F108.Code 		As SalesmanCode,
	F108.Name 		As SalesmanName, 	
	F006.Code 		as CurrencyCode, 
	F006.Name 		as CurrencyName, 	
	F106.ContactPerson 	as CustomerContactPerson, 
	F618.AssignStatus,   
        F618.VoucherNo,	         	
        F618.ExchangeRate, 
	F106.Address	 	as CustomerAddress, 
	F106.ZipCode 		as CustomerZipCode, 
	F106.Phone1 		as CustomerPhone1, 
	F106.Phone2 		as CustomerPhone2, 
	F106.Fax 		as CustomerFax, 
	F106.EmailAddress 	as CustomerEmailAddress, 
	F010.Code 		as CustomerCountryCode,  
	F010.Name 		as CustomerCountryName, 
	F009.Code 		as CustomerCityCode,  
	F009.Name 		as CustomerCityName, 
	F618.Collector,
        F618.Description	as INVDescriptionHeader, 
        F618.TotalTransaction   as INVTotalTransaction, 
       (F618.TotalTransaction * F618.ExchangeRate) as INVTotalTransactionAmountLocal, 
        F618.DiscountPercent 	as INVDiscountPercentHeader, 
	F618.DiscountAmount 	as INVDiscountAmountHeader, 
	(F618.DiscountAmount * F618.ExchangeRate) as INVDiscountAmountHeaderLocal, 
	F618.OtherFeeBeforePPN 			      as INVOtherFeeBeforePPNAmount, 
	(F618.OtherFeeBeforePPN * F618.ExchangeRate)   as INVOtherFeeBeforePPNAmountLocal, 
        F618.PPNPercent 	as INVPPNPercent, 
	F618.PPNAmount 		as INVPPNAmount, 
	(F618.PPNAmount * F618.ExchangeRate)		as INVPPNAmountLocal, 
        F618.OtherFeeAfterPPN 			      as INVOtherFeeAfterPPNAmount, 
	(F618.OtherFeeAfterPPN * F618.ExchangeRate)   as INVOtherFeeAfterPPNAmountLocal, 
 F618.OtherFeeAfterPPNMaterai 			      as INVOtherFeeAfterPPNMateraiAmount, 
	(F618.OtherFeeAfterPPNMaterai * F618.ExchangeRate)   as INVOtherFeeAfterPPNMateraiAmountLocal, 
 F618.OtherFeeAfterPPNPacking 			      as INVOtherFeeAfterPPNPackingAmount, 
	(F618.OtherFeeAfterPPNPacking * F618.ExchangeRate)   as INVOtherFeeAfterPPNPackingAmountLocal, 
 F618.OtherFeeAfterPPNAsuransi 			      as INVOtherFeeAfterPPNAsuransiAmount, 
	(F618.OtherFeeAfterPPNAsuransi * F618.ExchangeRate)   as INVOtherFeeAfterPPNAsuransiAmountLocal, 
 F618.OtherFeeAfterPPNPPH23Jasa 			      as INVOtherFeeAfterPPNPPH23JasaAmount, 
	(F618.OtherFeeAfterPPNPPH23Jasa * F618.ExchangeRate)   as INVOtherFeeAfterPPNPPH23JasaAmountLocal, 
        F618.GrandTotal 			    as INVGrandTotal, 
	(F618.GrandTotal * F618.ExchangeRate) as INVGrandTotalAmountLocal, 
	F618.PaidAmount 			    as INVPaidAmount, 
	(F618.PaidAmount * F618.ExchangeRate) 	    as INVPaidAmountLocal
        	
	from F618 
	    INNER JOIN F006 on F618.CurrencyCode = F006.Code 
            INNER JOIN F018 on F618.PaymentTermCode  = F018.Code
	    INNER JOIN F106 on  F618.CustomerCode = F106.Code 
	    INNER JOIN F009 on F106.CityCode     = F009.Code 
	    INNER JOIN F010 on F106.CountryCode  = F010.Code     
            INNER JOIN F108 on  F618.SalesmanCode = F108.Code 
            -- INNER JOIN F110 on F618.BranchCode = F110.BranchCode and F618.WarehouseCode = F110.Code 
	    -- INNER JOIN F603 on  F618.SODNo = F603.SODNo
	    
	   WHERE 
		-- F618.BranchCode = prmBranchCode AND
		F618.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F618_getExp` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F618_getExp` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F618_getExp`(
  )
BEGIN
	SELECT	
	F618.INVNo
        	
	from F618 
	    
		;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F618_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F618_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F618_insert`(
	prmINVNo                 varchar(50),   
	prmTransactionDate       datetime,  
        prmPeriodMonth           varchar(50),
	prmPeriodYear            decimal(4,0),
        prmFromDate              date,
	prmToDate                date,
	prmPrintDate             date,
	prmCurrencyCode          varchar(50),   
	prmPaymentTermCode       varchar(50),   
	prmExchangeRate          decimal(18,4), 
	prmCustomerCode          varchar(50),   
prmCustomerName varchar(200),   
prmDateJoin date,   
prmCompanyTypeCode varchar(200),   
prmProduct varchar(200),   
	prmCollector		 varchar(100),
	prmSalesmanCode          varchar(50),   
	prmDescription           text,          
	prmTotalTransaction      decimal(18,4), 
	prmDiscountPercent       decimal(18,4),  
	prmDiscountAmount        decimal(18,4), 
	prmPPNPercent            decimal(18,4),  
	prmPPNAmount             decimal(18,4), 
	prmGrandTotal            decimal(18,4), 	
        prmTaxStatus             tinyint(1),  
	prmOtherFeeBeforePPN     decimal(18,4),   
	prmOtherFeeAfterPPN      decimal(18,4), 
prmOtherFeeAfterPPNMaterai      decimal(18,4), 
prmOtherFeeAfterPPNPacking      decimal(18,4), 
prmOtherFeeAfterPPNAsuransi      decimal(18,4), 
prmOtherFeeAfterPPNPPH23Jasa      decimal(18,4), 
	prmBranchCode            varchar(50),  
	prmCreatedBy             varchar(50)    
)
BEGIN
	insert into F618
	(
	INVNo,   
	TransactionDate,  
        PeriodMonth,
	PeriodYear,
	FromDate,
	ToDate,
	PrintDate,
	CurrencyCode,         
	PaymentTermCode,      
	ExchangeRate,     
	CustomerCode,  
CustomerName,   
DateJoin,   
CompanyTypeCode,   
Product,   
        Collector,
	SalesmanCode,         
	Description,          
	TotalTransaction,     
	DiscountPercent,      
	DiscountAmount,       
	PPNPercent,           
	PPNAmount,            
	GrandTotal,    
        TaxStatus,
	OtherFeeBeforePPN, 
	OtherFeeAfterPPN,  
OtherFeeAfterPPNMaterai, 
OtherFeeAfterPPNPacking, 
OtherFeeAfterPPNAsuransi, 
OtherFeeAfterPPNPPH23Jasa,           
	BranchCode,      
	CreatedBy,      
	CreatedDate 
	)
	value
	(
	prmINVNo,
	prmTransactionDate, 
	prmPeriodMonth,
	prmPeriodYear,
	prmFromDate,	
	prmToDate,
	prmPrintDate,
	prmCurrencyCode,         
	prmPaymentTermCode,      
	prmExchangeRate,         
	prmCustomerCode,  
	prmCollector,
	prmSalesmanCode,         
	prmDescription,          
	prmTotalTransaction,     
	prmDiscountPercent,      
	prmDiscountAmount,       
	prmPPNPercent,           
	prmPPNAmount,            
	prmGrandTotal,     
	prmTaxStatus,         
	prmOtherFeeBeforePPN,
	prmOtherFeeAfterPPN,
	prmBranchCode,      
	prmCreatedBy,
	NOW()
	);         
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F618_Update_PaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F618_Update_PaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F618_Update_PaidAmount`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE F618 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F502 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					BKMNo=prmBuktiNo 
				     and DocumentNo=prmINVNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F618_Update_PaidAmount_F504` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F618_Update_PaidAmount_F504` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F618_Update_PaidAmount_F504`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE F618 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F504 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					BBMNo=prmBuktiNo 
				     and DocumentNo=prmINVNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F618_Update_PaidAmount_F520` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F618_Update_PaidAmount_F520` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F618_Update_PaidAmount_F520`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE F618 SET
			PaidAmount = PaidAmount +
				    IFNull((select 0-Amount from F520 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					GJMNo=prmBuktiNo 
				     and DocumentNo=prmINVNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F618_Update_PaidAmount_GiroReject` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F618_Update_PaidAmount_GiroReject` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F618_Update_PaidAmount_GiroReject`(
        prmINVNo  varchar(50),
	prmBuktiNo  varchar(50),
	prmBranchCode varchar(50), 
	prmPaidAmount            decimal(18,4)
)
BEGIN
		UPDATE F618 SET
			PaidAmount = PaidAmount -
				    IFNull((select 0-Amount from F504 prmPaidAmount 
					where 
					-- BranchCode=prmBranchCode and 
					BBMNo=prmBuktiNo 
				     and DocumentNo=prmINVNo),0) + 
				     prmPaidAmount 
		WHERE 
			-- BranchCode = prmBranchCode AND 
			INVNo = prmINVNo;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F618_Update_Pay` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F618_Update_Pay` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F618_Update_Pay`( 
    IN oldBranchCode VARCHAR(50),
    IN oldINVNo VARCHAR(50),
    IN prmPayDescription Text
 )
BEGIN 
  UPDATE F618 SET 
    PayDescription = prmPayDescription
  WHERE F618.INVNo = oldINVNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F641_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F641_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F641_Delete`( 
    IN prmBranchCode VARCHAR(50),
    IN prmTINNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F642 
  WHERE F642.BranchCode = prmBranchCode AND F642.TINNo = prmTINNo;
  DELETE FROM F641 
  WHERE F641.BranchCode = prmBranchCode AND F641.TINNo = prmTINNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F641_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F641_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F641_Get`(IN prmFirstDate DATETIME, IN prmLastDate DATETIME)
BEGIN 
  SELECT 
    F641.BranchCode,
    F001.Name As BranchName, 
    F641.TINNo, 
    F641.TransactionDate, 
    F641.CurrencyCode,
    F006.Name As CurrencyName, 
    F641.ExchangeRate, 
    F641.CustomerCode, 
    F106.Name As CustomerName,
    F641.CreatedBy, 
    F641.CreatedDate, 
    F641.UpdatedBy, 
    F641.UpdatedDate
FROM F641
INNER JOIN F001 ON F641.BranchCode = F001.Code
INNER JOIN F006 ON F641.CurrencyCode = F006.Code
INNER JOIN F106 ON F641.CustomerCode = F106.Code
WHERE 
  F641.TransactionDate BETWEEN prmFirstDate AND prmLastDate
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F641_Get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F641_Get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F641_Get_ByCode`(IN prmTINNo VARCHAR(50))
BEGIN 
  SELECT 
    F641.TINNo
FROM F641 WHERE F641.TINNo = prmTINNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F641_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F641_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F641_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmTINNo VARCHAR(50), 
    IN prmTransactionDate DateTime, 
    IN prmCurrencyCode VARCHAR(50), 
    IN prmExchangeRate Decimal(18,4), 
    IN prmCustomerCode VARCHAR(50), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F641 ( 
    F641.BranchCode, 
    F641.TINNo, 
    F641.TransactionDate, 
    F641.CurrencyCode, 
    F641.ExchangeRate, 
    F641.CustomerCode, 
    F641.CreatedBy, 
    F641.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmTINNo, 
    prmTransactionDate, 
    prmCurrencyCode, 
    prmExchangeRate, 
    prmCustomerCode, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F641_Update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F641_Update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F641_Update`( 
    IN oldBranchCode VARCHAR(50),
    IN oldTINNo VARCHAR(50),
 
    IN prmBranchCode VARCHAR(50), 
    IN prmTINNo VARCHAR(50), 
    IN prmTransactionDate DateTime, 
    IN prmCurrencyCode VARCHAR(50), 
    IN prmExchangeRate Decimal(18,4), 
    IN prmCustomerCode VARCHAR(50), 
    IN prmUpdatedBy VARCHAR(50)
 )
BEGIN 
  UPDATE F641 SET 
    F641.BranchCode = prmBranchCode, 
    F641.TINNo = prmTINNo, 
    F641.TransactionDate = prmTransactionDate, 
    F641.CurrencyCode = prmCurrencyCode, 
    F641.ExchangeRate = prmExchangeRate, 
    F641.CustomerCode = prmCustomerCode, 
    F641.UpdatedBy = prmUpdatedBy, 
    F641.UpdatedDate = Now()
  WHERE F641.BranchCode = oldBranchCode AND F641.TINNo = oldTINNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F642_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F642_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F642_Delete`( 
    IN prmBranchCode VARCHAR(50), IN prmTINNo VARCHAR(50)
 )
BEGIN 
  DELETE FROM F642 
  WHERE F642.BranchCode = prmBranchCode AND F642.TINNo = prmTINNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F642_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F642_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F642_Get`(IN prmBranchCode VARCHAR(50), IN prmTINNo VARCHAR(50))
BEGIN 
  SELECT 
    F642.BranchCode, 
    F642.TINNo, 
    F642.INVNo,
    F607.TransactionDate As InvoiceDate, 
    F607.GrandTotal As TotalInvoiceForeign,
    (F607.GrandTotal * F607.ExchangeRate) As TotalInvoiceLocal,
    F642.CreatedBy, 
    F642.CreatedDate, 
    F642.UpdatedBy, 
    F642.UpdatedDate
FROM F642
INNER JOIN F607 ON F607.INVNo = F642.INVNo
WHERE F642.BranchCode = prmBranchCode AND F642.TINNo = prmTINNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F642_Get_ByINVNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F642_Get_ByINVNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F642_Get_ByINVNo`(IN prmBranchCode VARCHAR(50), IN prmINVNo VARCHAR(50))
BEGIN 
  SELECT 
    F642.BranchCode, 
    F642.TINNo, 
    F642.INVNo
FROM F642
WHERE F642.BranchCode = prmBranchCode AND F642.INVNo = prmINVNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F642_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F642_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F642_Insert`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmTINNo VARCHAR(50), 
    IN prmINVNo VARCHAR(50), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F642 ( 
    F642.BranchCode, 
    F642.TINNo, 
    F642.INVNo, 
    F642.CreatedBy, 
    F642.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmTINNo, 
    prmINVNo, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F701_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F701_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F701_delete`(
	prmBranchCode VARCHAR(50),
	prmIINNo VARCHAR(50)
)
Begin
	Delete From F702
	WHERE F702.IINNo = prmIINNo;
	Delete From F701 
	WHERE F701.IINNo = prmIINNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F701_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F701_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F701_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmIINNo varchar(50)
)
BEGIN
	Select 
		F701.BranchCode,
		F001.Name AS BranchName,
		F701.IINNo,
		F701.TransactionDate,
		F701.RefNo,
		F701.PBNo,
		
		F701.WarehouseCode,
		F110.Name AS WarehouseName,
		F701.Description,
		F701.TotalTransactionAmount
	From 
	F701
		INNER JOIN F001 ON F701.BranchCode 		= F001.Code
		
		INNER JOIN F110 On F701.WarehouseCode 	= F110.Code
	Where  
		F701.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	And F701.IINNo like prmIINNo
	Order BY F701.IINNo DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F701_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F701_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F701_Insert`(
	prmBranchCode VARCHAR(50),
	prmIINNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmRefNo VARCHAR(50), 
	prmPBNo VARCHAR(50), 
	
	prmWarehousecode VARCHAR(50), 
	prmDescription TEXT, 		
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F701 
		(
			BranchCode,
			IINNo, 
			TransactionDate, 
			RefNo, 
			PBNo,
			
			WarehouseCode,
			Description,
			CreatedBy, 
			CreatedDate
		)
		VALUES
		(
			prmBranchCode,
	prmIINNo,
	prmTransactionDate,
	prmRefNo,
	prmPBNo,
	prmWarehousecode,
	prmDescription,
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F701_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F701_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F701_update`(
	prmBranchCode VARCHAR(50),
	prmIINNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmRefNo VARCHAR(50), 
	prmPBNo VARCHAR(50), 
	
	prmWarehousecode VARCHAR(50), 
	prmDescription TEXT, 
	
	prmUpdatedBy VARCHAR(50), 
	prmOldCode VARCHAR(50)
)
BEGIN
		UPDATE F701 SET
			BranchCode 			= 	prmBranchCode,
			IINNo 				=	prmIINNo, 
			TransactionDate 			=	prmTransactionDate, 
			RefNo 				= 	prmRefno, 
			PBNo				=       prmPBNo,
			
			WarehouseCode 		= 	prmWarehouseCode,
			Description 			=	prmDescription, 
			
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	now()
		WHERE
			IINNo 				= 	prmOldCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F702Get_QtyByPB` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F702Get_QtyByPB` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F702Get_QtyByPB`(in prmBranchCode VarChar(50), in prmPBNo VarChar(50))
BEGIN
Select 
F701.BranchCode, 
F701.IINNo, 
F701.PBNo, 
F702.ItemCode, 
Sum(Quantity) As ReceivedQuantity 
from F702
  INNER JOIN F701 ON F702.IINNo = F701.IINNo
WHERE F701.BranchCode = prmBranchCode AND F701.PBNo = prmPBNo
Group By F702.ItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F702_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F702_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F702_delete`(
	-- prmBranchCode VARCHAR(50),
	prmIINNo VARCHAR(50)
)
BEGIN
		DELETE FROM F702 WHERE  IINNo = prmIINNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F702_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F702_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F702_get`(
   
   IN prmIINNo varchar(50)
)
BEGIN
	Select 
		F702.BranchCode,
		F702.IINNo,
		F702.ItemCode,
		F013.Name as ItemName,
		F013.UnitCode,
		F008.Name As UnitName,
		F702.Quantity,
		F702.Price,
		F702.ReasonCode,
		-- F016.Name As ReasonName,
		F702.Description
	From 
		F702
		Inner Join F013 On F702.ItemCode = F013.Code
		Inner Join F008 On F013.UnitCode = F008.Code
		-- Inner Join F016 On F702.ReasonCode = F016.Code	
	Where  F702.IINNo = prmIINNo
	Order by F702.IINNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F702_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F702_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F702_insert`(
	prmBranchCode VARCHAR(50), 
	prmIINNo VARCHAR(50), 
	prmItemCode VARCHAR(50), 
	prmQuantity Decimal, 
	
	prmDescription TEXT, 
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F702 (
			BranchCode, 
			IINNo, 
			ItemCode, 
			Quantity, 
			
			Description,  
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode , 
			prmIINNo, 
			prmItemCode, 
			prmQuantity, 
			
			prmDescription, 
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F703_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F703_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F703_delete`(
	prmBranchCode VARCHAR(50),
	prmIOTNo VARCHAR(50)
)
Begin
	Delete From F802
	WHERE F802.IOTNo = prmIOTNo;
	Delete From F704
	WHERE F704.IOTNo = prmIOTNo;
	Delete From F703 
	WHERE F703.IOTNo = prmIOTNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F703_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F703_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F703_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmIOTNo varchar(50)
)
BEGIN
	Select 	
		F703.BranchCode,
		F001.Name AS BranchName, 
		F703.IOTNo, 
		F703.TransactionDate, 
		F703.RefNo, 
		 F703.CurrencyCode,
		 -- F006.Name As CurrencyName, 
		 -- F703.ExchangeRate, 
		F703.WarehouseCode,
		F110.Name As WarehouseName, 
		F703.Description, 
		F703.TotalTransactionAmount
	From 
	F703
		INNER JOIN F001 ON F703.BranchCode = F001.Code
	       --  LEFT JOIN F006 On F703.CurrencyCode = F006.Code
		INNER JOIN F110 On F703.WarehouseCode = F110.Code
	Where  F703.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	And 	 F703.IOTNo Like prmIOTNo
	Order By F703.IOTNo Desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F703_get_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F703_get_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F703_get_ByCode`(
   IN prmBranchCode VARCHAR(50),
   IN prmIOTNo varchar(50)
)
BEGIN
	Select 	
		F703.BranchCode,
		F001.Name AS BranchName, 
		F703.IOTNo, 
		F703.TransactionDate, 
		F703.RefNo, 
		F703.CurrencyCode,
		F006.Name As CurrencyName, 
		F703.ExchangeRate, 
		F703.WarehouseCode,
		F110.Name As WarehouseName, 
		F703.Description, 
		F703.TotalTransactionAmount
	From 
	F703
		INNER JOIN F001 ON F703.BranchCode = F001.Code
	        LEFT JOIN F006 On F703.CurrencyCode = F006.Code
		INNER JOIN F110 On F703.WarehouseCode = F110.Code
	Where   F703.IOTNo = prmIOTNO;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F703_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F703_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F703_insert`(
	prmBranchCode VARCHAR(50),
	prmIOTNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmRefNo Varchar(100),
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal, 
	prmWarehouseCode varchar(50),
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal,
	prmCreatedBy VARCHAR(50)
)
BEGIN
	Insert Into F703 
	(
		BranchCode, 
		IOTNo, 
		TransactionDate, 
		RefNo, 
		CurrencyCode, 
		ExchangeRate, 
		WarehouseCode, 
		Description, 
		TotalTransactionAmount,
		CreatedBy, 
		CreatedDate)
			values
			(
		prmBranchCode, 
		prmIOTNo, 
		prmTransactionDate, 
		prmRefNo, 
		prmCurrencyCode, 
		prmExchangeRate, 
		prmWarehouseCode, 
		prmDescription, 
		prmTotalTransactionAmount,
		prmCreatedBy,
		now());
	END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F703_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F703_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F703_update`(
	prmBranchCode VARCHAR(50),
	prmIOTNo VARCHAR(50), 
	prmTransactionDate DateTime, 
	prmRefNo Varchar(100),
	prmCurrencyCode VARCHAR(50), 
	prmExchangeRate Decimal, 
	prmWarehouseCode varchar(50),
	prmDescription TEXT, 
	prmTotalTransactionAmount Decimal,
	prmUpdatedBy VARCHAR(50),
	prmOldCode VARCHAR(50)
)
BEGIN
	UPDATE F703 SET
			BranchCode 			= 	prmbranchCode, 
			IOTNo 				=	prmIOTNo, 
			TransactionDate 			=	prmTransactionDate, 
			RefNo 				= 	prmRefno, 
			CurrencyCode 			= 	prmCurrencyCode,
			ExchangeRate 			= 	prmExchangeRate,
			WarehouseCode 		= 	prmWarehouseCode,
			Description 			=	prmDescription, 
			TotalTransactionAmount 	=	prmTotalTransactionAmount, 
			UpdatedBy 			=	prmUpdatedBy, 
			UpdatedDate			=	NOW()
		WHERE
			IOTNo 				= 	prmOldCode;
	END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F704_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F704_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F704_delete`(
	prmBranchCode VARCHAR(50),
	prmIOTNo VARCHAR(50)
)
BEGIN
		DELETE FROM F704 WHERE F704.IOTNo = prmIOTNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F704_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F704_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F704_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmIOTNo varchar(50)
)
BEGIN
	Select 
		F704.BranchCode,
		F704.IOTNo,
		F704.ItemCode,
		F013.Name as ItemName,
		F013.UnitCode,
		F008.Name As UnitName,
		F704.Quantity,
		F704.Price,
		F704.ReasonCode,
		F016.Name As ReasonName,
		F704.Description
	From 
		F704
		Inner Join F013 On F704.ItemCode = F013.Code
		Inner Join F008 On F013.UnitCode = F008.Code
		Inner Join F016 On F704.ReasonCode = F016.Code	
	Where  F704.IOTNo = prmIOTNo
	Order by F704.IOTNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F704_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F704_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F704_insert`(
	prmBranchCode VARCHAR(50), 
	prmIOTNo VARCHAR(50), 
	prmItemCode VARCHAR(50), 
	prmQuantity Decimal, 
	prmPrice Decimal, 
	prmReasonCode Varchar(50),
	prmDescription TEXT, 
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F704 (
			BranchCode, 
			IOTNo, 
			ItemCode, 
			Quantity, 
			Price,
			ReasonCode,
			Description,  
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode , 
			prmIOTNo, 
			prmItemCode, 
			prmQuantity, 
			prmPrice, 
			prmReasonCode,
			prmDescription, 
			prmCreatedBy,
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F802_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F802_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F802_delete`(
	IN DelBranchCode VARCHAR(50),
	IN DelTransactionCode VARCHAR(50)
)
BEGIN
		DELETE
		FROM
			F802
		WHERE
			F802.BranchCode = DelBranchCode AND F802.IOTNo = DelTransactionCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F802_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F802_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F802_get`(
	IN prmBranchCode VARCHAR(50),
	IN prmNo VARCHAR(50),
	IN prmItemCode VARCHAR(50)
)
BEGIN
		SELECT 
			BranchCode,
			IOTNo,
			ItemCode,
			WareHouseCode,
			Quantity,
			COGSIDR,
			ItemDate,
			CreatedBy,
			UpdatedBy
		FROM
			F802
		WHERE
			F802.BranchCode = prmBranchCode AND F802.IOTNo = prmNo AND F802.ItemCode LIKE prmItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F851_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F851_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F851_delete`(
In prmTransactionNo Text
)
BEGIN
Call usp_string_to_mysqlrow(prmTransactionNo, ",");
	Delete From F851
	Where 
		F851.TransactionNo In (Select * From Temp_SplitString);
	Drop Temporary Table Temp_SplitString;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F851_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F851_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F851_get`(
In prmTransactionNo Varchar(50),
In prmType Varchar(50),
In prmModuleName Varchar(250),
In prmTransactionBy Varchar(50),
In prmGroupCode Varchar(50),
In prmGroupName Varchar(50),
In prmFirstDate DateTime,
In prmLastDate DateTime
)
BEGIN
	Select
		F851.TransactionNo, 
		F851.Type, 
		F851.ModuleCode,
		F002.Name As ModuleName,
		F851.TransactionBy,
		F102.GroupCode,
		F003.Name As GroupName,	
		F851.TransactionDate
	From F851
		Inner Join F002 On F851.ModuleCode = F002.Code
		Inner Join
			(
				F102 Inner Join F003 On F102.GroupCode = F003.Code
			)  
		On F851.TransactionBy = F102.Code
	Where
		F851.TransactionNo 	Like prmTransactionNo And
		F851.Type 		Like prmType And
		F002.Name 		Like prmModuleName And
		F851.TransactionBy 	Like prmTransactionBy And
		F102.GroupCode 	Like prmGroupCode And
		F003.Name 		Like prmGroupName And
		F851.TransactionDate 	Between prmFirstDate And prmLastDate
	Order By F851.TransactionNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F851_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F851_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F851_insert`(
	IN prmBranchCode VARCHAR(50),
	IN prmTransactionNo VARCHAR(50), 
	IN prmType Enum('NEW','DELETE','UPDATE','PRINT'),
	IN prmModuleCode VARCHAR(50),
	IN prmTransactionBy VARCHAR(50))
BEGIN
	INSERT INTO F851 
	   (BranchCode, TransactionNo, Type, ModuleCode, TransactionBy, TransactionDate)
	values
	   (prmBranchCode, prmTransactionNo, prmType, prmModuleCode, prmTransactionBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F899_checkActualStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F899_checkActualStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F899_checkActualStock`(
	in prmBranchCode varchar(50),
	in prmWarehouseCode varchar(50),
	in prmItemCode varchar(50)
)
BEGIN
		SELECT
			F899.Code,
			ItemCode,
			ItemDate,
			COGSIDR,
			ActualStock,
			UsedStock
		FROM 
			F899
		WHERE
			WarehouseCode = prmWarehouseCode
			AND ItemCode = prmItemCode
			AND ActualStock > UsedStock
		ORDER BY F899.ItemDate, F899.Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F899_checkActualStockTotal` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F899_checkActualStockTotal` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F899_checkActualStockTotal`(
	in prmBranchCode varchar(50),
	in prmWarehouseCode varchar(50),
	in prmItemCode varchar(50)
)
BEGIN
		SELECT 
			SUM(ActualStock-UsedStock)
		FROM 
			F899
		WHERE
			WarehouseCode = prmWarehouseCode
			AND ItemCode = prmItemCode
			-- AND ActualStock <> UsedStock
		ORDER BY F899.Code;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F899_DetailStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F899_DetailStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F899_DetailStock`(
	IN prmBranchCode VARCHAR(50),
	IN prmItemCode VARCHAR(50),
	IN prmItemName VARCHAR(200),
	IN prmUnitCode VARCHAR(50),
	IN prmUnitName VARCHAR(200),
	IN prmWarehouseCode VARCHAR(50),
	IN prmWarehouseName VARCHAR(200)
)
BEGIN
		SELECT
			F899.BranchCode,
			F899.ItemCode,
			F013.Name AS ItemName,
			F013.ItemTypeCode, 
			F015.Name AS ItemTypeName,
			F008.Code AS UnitCode,
			F008.Name AS UnitName,
			F899.WarehouseCode,
			F110.Name AS WarehouseName,
			Sum(F899.ActualStock - F899.UsedStock) AS ActualStock, 
			F899.COGSIDR,
			F899.ItemDate,
			Sum(F899.ActualStock - F899.UsedStock) * F899.COGSIDR AS Total
		FROM F899
			LeFT Join F013 On F899.ItemCode = F013.Code
			LeFT Join F008 On F013.UnitCode = F008.Code
			LeFT join F015 on F015.Code = F013.ItemTypeCode 
			LeFT Join F110 On F899.WarehouseCode = F110.Code
		WHERE	F899.BranchCode Like prmBranchCode AND
			F899.ItemCode Like prmItemCode AND
			F013.Name Like prmItemName AND
			F008.Code Like prmUnitCode AND
			F008.Name Like prmUnitName AND
			F899.WarehouseCode Like prmWarehouseCode AND
			F110.Name Like prmWarehouseName AND
			F899.ActualStock > F899.UsedStock
		GROUP BY F899.WarehouseCode, F899.ItemCode, F899.COGSIDR;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F899_GetMax` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F899_GetMax` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F899_GetMax`(prmBranchCode VARCHAR(50))
BEGIN
		SELECT MAX(F899.AutoNumber) FROM F899 WHERE F899.BranchCode = prmBranchCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F899_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F899_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F899_Insert`(
		in prmBranchCode varchar(50),
		in prmWarehouseCode varchar(50),
		in prmCode decimal(30,0),
		in prmItemCode varchar(50),
		in prmItemDate datetime,
		in prmCOGSIDR decimal(18,4),
		in prmActualStock decimal(18,4),
		in prmCreatedBy varchar(50) )
BEGIN
		INSERT INTO F899 (
			BranchCode,
			WarehouseCode,
			F899.Code,
			ItemCode,
			ItemDate,
			COGSIDR,
			ActualStock,
			UsedStock,
			CreatedBy,
			CreatedDate )
		VALUES (
			prmBranchCode,
			prmWarehouseCode,
			prmCode,
			prmItemCode,
			prmItemDate,
			prmCOGSIDR,
			prmActualStock,
			0,
			prmCreatedBy,
			NOW() 
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F899_StockQuantity` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F899_StockQuantity` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F899_StockQuantity`(
	IN prmBranchCode VARCHAR(50),
	IN prmItemCode VARCHAR(50),
	IN prmItemName VARCHAR(200),
	IN prmUnitCode VARCHAR(50),
	IN prmUnitName VARCHAR(200),
	IN prmWarehouseCode VARCHAR(50),
	IN prmWarehouseName VARCHAR(200)
)
BEGIN
		SELECT
			F899.BranchCode,
			F899.ItemCode,
			F013.Name AS ItemName,
			F013.ItemTypeCode, 
			F015.Name AS ItemTypeName,
			F008.Code AS UnitCode,
			F008.Name AS UnitName,
			F899.WarehouseCode,
			F110.Name AS WarehouseName,
			Sum(F899.ActualStock - F899.UsedStock) AS ActualStock 
		FROM F899
			Inner Join F013 On F899.ItemCode = F013.Code
			Inner Join F008 On F013.UnitCode = F008.Code
			Inner join F015 on F015.Code = F013.ItemTypeCode 
			Inner Join F110 On F899.WarehouseCode = F110.Code
		WHERE   
			F899.BranchCode Like prmBranchCode AND
			F899.ItemCode Like prmItemCode AND
			F013.Name Like prmItemName AND
			F008.Code Like prmUnitCode AND
			F008.Name Like prmUnitName AND
			F899.WarehouseCode Like prmWarehouseCode AND
			F110.Name Like prmWarehouseName AND
			F899.ActualStock > F899.UsedStock
		GROUP BY F899.WarehouseCode, F899.ItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F899_usedStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F899_usedStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F899_usedStock`(
	in prmBranchCode varchar(50),
	in prmWarehouseCode varchar(50),
	in prmCode varchar(50),
	in prmUsedStock Decimal
)
BEGIN
		UPDATE
			F899
		SET
			UsedStock = UsedStock + prmUsedStock
		WHERE 
			BranchCode = prmBranchCode
			AND WarehouseCode = prmWarehouseCode
			AND F899.Code = prmCode
			AND ActualStock >= UsedStock + prmUsedStock;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F901_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F901_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F901_delete`(
	IN DelBranchCode VARCHAR(50),
	IN DelTransactionCode VARCHAR(50)
)
BEGIN
		DELETE
		FROM
		  F901
		WHERE
		  F901.BranchCode = DelBranchCode AND F901.PRTNo = DelTransactionCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F901_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F901_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F901_get`(
	IN prmBranchCode VARCHAR(50),
	IN prmNo VARCHAR(50)
)
BEGIN
		SELECT 
			BranchCode,
			PRTNo,
			ItemCode,
			WareHouseCode,
			Quantity,
			COGSIDR,
			ItemDate,
			CreatedBy,
			UpdatedBy
		FROM
			F901
		WHERE
			F901.BranchCode = prmBranchCode AND F901.PRTNo = prmNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F901_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F901_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F901_Insert`( 
    IN prmNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmBranchCode VARCHAR(50),
    IN prmQuantity DECIMAL, 
    IN prmCOGSIDR DECIMAL, 
    IN prmItemDate DateTime, 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F901 ( 
    F901.PRTNo, 
    F901.ItemCode, 
    F901.WarehouseCode, 
    F901.BranchCode,
    F901.Quantity, 
    F901.COGSIDR, 
    F901.ItemDate, 
    F901.CreatedBy, 
    F901.CreatedDate
    
 ) VALUES ( 
    prmNo, 
    prmItemCode, 
    prmWarehouseCode, 
    prmBranchCode,
    prmQuantity, 
    prmCOGSIDR, 
    prmItemDate, 
    prmCreatedBy, 
    Now()
    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F902_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F902_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F902_delete`(
	IN DelBranchCode VARCHAR(50),
	IN DelTransactionCode VARCHAR(50)
)
BEGIN
		DELETE
		FROM
			F902
		WHERE
			F902.BranchCode = DelBranchCode AND F902.IOTNo = DelTransactionCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F902_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F902_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F902_get`(
	IN prmBranchCode VARCHAR(50),
	IN prmNo VARCHAR(50),
	IN prmItemCode VARCHAR(50)
)
BEGIN
		SELECT 
			BranchCode,
			IOTNo,
			ItemCode,
			WareHouseCode,
			Quantity,
			COGSIDR,
			ItemDate,
			CreatedBy,
			UpdatedBy
		FROM
			F902
		WHERE
			F902.BranchCode = prmBranchCode AND F902.IOTNo = prmNo AND F902.ItemCode LIKE prmItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F902_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F902_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F902_insert`(
	IN prmBranchCode VARCHAR(50),
	IN prmNo VARCHAR(50),
	IN prmItemCode VARCHAR(50),
	IN prmWarehouseCode VARCHAR(50),
	IN prmQuantity DECIMAL, 
	IN prmCOGSIDR DECIMAL, 
	IN prmItemDate DATETIME, 
	IN prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F902 (
			BranchCode,
			IOTNo, 
			ItemCode, 
			WarehouseCode, 
			Quantity, 
			COGSIDR, 
			ItemDate, 
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode,
			prmNo, 
			prmItemCode, 
			prmWarehouseCode, 
			prmQuantity, 
			prmCOGSIDR, 
			prmItemDate, 
			prmCreatedBy, 
			NOW()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F903_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F903_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F903_delete`(
	IN DelBranchCode VARCHAR(50),
	IN DelTransactionCode VARCHAR(50)
)
BEGIN
		DELETE
		FROM
			F903
		WHERE
			F903.BranchCode =DelBranchCode AND F903.ASMNo = DelTransactionCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F903_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F903_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F903_get`(
	IN prmBranchCode VARCHAR(50),
	IN prmNo VARCHAR(50),
	IN prmItemCode VARCHAR(50)
)
BEGIN
		SELECT 
			BranchCode,
			ASMNo,
			ItemCode,
			WareHouseCode,
			Quantity,
			COGSIDR,
			ItemDate,
			CreatedBy,
			UpdatedBy
		FROM
			F903
		WHERE
			F903.BranchCode = prmBranchCode AND F903.ASMNo = prmNo AND F903.ItemCode LIKE prmItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F903_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F903_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F903_Insert`( 
    IN prmNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50),
    IN prmBranchCode VARCHAR(50),
    IN prmQuantity DECIMAL, 
    IN prmCOGSIDR DECIMAL, 
    IN prmItemDate DATETIME, 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F903 ( 
    F903.ASMNo, 
    F903.ItemCode, 
    F903.WarehouseCode,
    F903.BranchCode, 
    F903.Quantity, 
    F903.COGSIDR, 
    F903.ItemDate, 
    F903.CreatedBy, 
    F903.CreatedDate
 ) VALUES ( 
    prmNo, 
    prmItemCode, 
    prmWarehouseCode,
    prmBranchCode, 
    prmQuantity, 
    prmCOGSIDR, 
    prmItemDate, 
    prmCreatedBy, 
    Now()
    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F904_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F904_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F904_delete`(
	IN DelBranchCode VARCHAR(50),
	IN DelTransactionCode VARCHAR(50)
)
BEGIN
  DELETE
    FROM F904
WHERE
  F904.BranchCode = DelBranchCode AND F904.WHMNo = DelTransactionCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F904_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F904_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F904_get`(
	IN prmBranchCode VARCHAR(50),
	IN prmNo VARCHAR(50),
	IN prmItemCode VARCHAR(50)
)
BEGIN
		SELECT 
			BranchCode,
			DSMNo,
			ItemCode,
			WareHouseCode,
			Quantity,
			COGSIDR,
			ItemDate,
			CreatedBy,
			UpdatedBy
		FROM
			F904
		WHERE
			F904.BranchCode = prmBranchCode AND F904.WHMNo = prmNo AND F904.ItemCode LIKE prmItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F904_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F904_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F904_Insert`( 
    IN prmNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmBranchCode VARCHAR(50),
    IN prmQuantity DECIMAL, 
    IN prmCOGSIDR DECIMAL, 
    IN prmItemDate DATETIME, 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F904 ( 
    F904.WHMNo, 
    F904.ItemCode, 
    F904.WarehouseCode, 
    F904.BranchCode,
    F904.Quantity, 
    F904.COGSIDR, 
    F904.ItemDate, 
    F904.CreatedBy, 
    F904.CreatedDate 
    
 ) VALUES ( 
    prmNo, 
    prmItemCode, 
    prmWarehouseCode, 
    prmBranchCode,
    prmQuantity, 
    prmCOGSIDR, 
    prmItemDate, 
    prmCreatedBy, 
    Now() 
    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F905_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F905_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F905_Delete`( 
  IN DelBranchCode VARCHAR(50),  
  IN DelTransactionCode VARCHAR(50)
    
 )
BEGIN 
  DELETE FROM F905 
  WHERE F905.BranchCode = DelBranchCode AND F905.DODNo = DelTransactionCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F905_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F905_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F905_get`(
	IN prmBranchCode VARCHAR(50),
	IN prmNo VARCHAR(50)
)
BEGIN
		SELECT 
			BranchCode,
			DODNo,
			ItemCode,
			WareHouseCode,
			Quantity,
			COGSIDR,
			ItemDate,
			CreatedBy,
			UpdatedBy
		FROM
			F905
		WHERE
			F905.BranchCode = prmBranchCode AND F905.DODNo = prmNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F905_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F905_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F905_Insert`( 
    IN prmNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmBranchCode VARCHAR(50),
    IN prmQuantity DECIMAL, 
    IN prmCOGSIDR DECIMAL, 
    IN prmItemDate DATETIME, 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F905 ( 
    F905.DODNo, 
    F905.ItemCode, 
    F905.WarehouseCode, 
    F905.BranchCode,
    F905.Quantity, 
    F905.COGSIDR, 
    F905.ItemDate, 
    F905.CreatedBy, 
    F905.CreatedDate 
    
 ) VALUES ( 
    prmNo, 
    prmItemCode, 
    prmWarehouseCode, 
    prmBranchCode,
    prmQuantity, 
    prmCOGSIDR, 
    prmItemDate, 
    prmCreatedBy, 
    Now() 
    
    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F906_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F906_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F906_Delete`( 
    IN DelTransactionCode VARCHAR(50), 
    IN DelBranchCode VARCHAR(50)
 )
BEGIN 
  DELETE FROM F906
  WHERE F906.BranchCode = DelBranchCode AND F906.INVNo = DelTransactionCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F906_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F906_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F906_get`(
	IN prmBranchCode VARCHAR(50),
	IN prmNo VARCHAR(50)
)
BEGIN
		SELECT 
			BranchCode,
			INVNo,
			ItemCode,
			WareHouseCode,
			Quantity,
			COGSIDR,
			ItemDate,
			CreatedBy,
			UpdatedBy
		FROM
			F906
		WHERE
			F906.BranchCode = prmBranchCode AND F906.INVNo = prmNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F906_Get_DESC` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F906_Get_DESC` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F906_Get_DESC`(
  IN prmBranchCode varchar(50), IN prmInvNo varchar(50), In prmItemCode varchar(50))
BEGIN
      SELECT 
  F906.COGSIDR
FROM 
  F906
WHERE
  F906.BranchCode = prmBranchCode AND
  F906.INVNo = prmINVNo AND
  F906.ItemCode = prmItemCode
ORDER BY ItemDate DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F906_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F906_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F906_Insert`( 
    IN prmNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmBranchCode VARCHAR(50),
    IN prmQuantity DECIMAL, 
    IN prmCOGSIDR DECIMAL, 
    IN prmItemDate DateTime, 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F906 ( 
    F906.INVNo, 
    F906.ItemCode, 
    F906.WarehouseCode, 
    F906.BranchCode,
    F906.Quantity, 
    F906.COGSIDR, 
    F906.ItemDate, 
    F906.CreatedBy, 
    F906.CreatedDate 
    
 ) VALUES ( 
    prmNo, 
    prmItemCode, 
    prmWarehouseCode, 
    prmBranchCode,
    prmQuantity, 
    prmCOGSIDR, 
    prmItemDate, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F907_Delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F907_Delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F907_Delete`( 
  IN DelBranchCode VARCHAR(50),  
  IN DelTransactionCode VARCHAR(50)
 )
BEGIN 
  DELETE FROM F907
  WHERE F907.BranchCode = DelBranchCode AND F907.SRTNo = DelTransactionCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F907_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F907_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F907_get`(
	IN prmBranchCode VARCHAR(50),
	IN prmNo VARCHAR(50)
)
BEGIN
		SELECT 
			BranchCode,
			SRTNo,
			ItemCode,
			WareHouseCode,
			Quantity,
			COGSIDR,
			ItemDate,
			CreatedBy,
			UpdatedBy
		FROM
			F907
		WHERE
			F907.BranchCode = prmBranchCode AND F907.SRTNo = prmNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F907_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F907_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F907_Insert`( 
    IN prmNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmBranchCode VARCHAR(50),
    IN prmQuantity DECIMAL, 
    IN prmCOGSIDR DECIMAL, 
    IN prmItemDate DATETIME, 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F907 ( 
    F907.SRTNo, 
    F907.ItemCode, 
    F907.WarehouseCode, 
    F907.BranchCode,
    F907.Quantity, 
    F907.COGSIDR, 
    F907.ItemDate, 
    F907.CreatedBy, 
    F907.CreatedDate
    
 ) VALUES ( 
    prmNo, 
    prmItemCode, 
    prmWarehouseCode, 
    prmBranchCode,
    prmQuantity, 
    prmCOGSIDR, 
    prmItemDate, 
    prmCreatedBy, 
    Now() 
    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F908_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F908_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F908_delete`(
	IN DelBranchCode VARCHAR(50),
	IN DelTransactionCode VARCHAR(50)
)
BEGIN
		DELETE
		FROM
			F908
		WHERE
			F908.BranchCode =DelBranchCode AND F908.DSMNo = DelTransactionCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F908_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F908_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F908_get`(
	IN prmBranchCode VARCHAR(50),
	IN prmNo VARCHAR(50),
	IN prmItemCode VARCHAR(50)
)
BEGIN
		SELECT 
			BranchCode,
			DSMNo,
			ItemCode,
			WareHouseCode,
			Quantity,
			COGSIDR,
			ItemDate,
			CreatedBy,
			UpdatedBy
		FROM
			F908
		WHERE
			F908.BranchCode = prmBranchCode AND F908.DSMNo = prmNo AND F908.ItemCode LIKE prmItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F908_Insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F908_Insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_F908_Insert`( 
    IN prmNo VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50),
    IN prmBranchCode VARCHAR(50),
    IN prmQuantity DECIMAL, 
    IN prmCOGSIDR DECIMAL, 
    IN prmItemDate DATETIME, 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F908 ( 
    F908.DSMNo, 
    F908.ItemCode, 
    F908.WarehouseCode,
    F908.BranchCode, 
    F908.Quantity, 
    F908.COGSIDR, 
    F908.ItemDate, 
    F908.CreatedBy, 
    F908.CreatedDate
 ) VALUES ( 
    prmNo, 
    prmItemCode, 
    prmWarehouseCode,
    prmBranchCode, 
    prmQuantity, 
    prmCOGSIDR, 
    prmItemDate, 
    prmCreatedBy, 
    Now()
    
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F928_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F928_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F928_delete`(
	prmBranchCode VARCHAR(50),
	prmINVNo VARCHAR(50)
)
BEGIN
		DELETE FROM F928 WHERE BranchCode = prmBranchCode AND INVNo = prmINVNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F928_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F928_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F928_Get`(
    IN prmBranchCode VARCHAR(50),
    IN prmINVNo varchar(50)
)
BEGIN
	SELECT
	F928.DODNo,
        F605.TransactionDate As DODDate 
	from F928 
INNER JOIN F605 ON F928.DODNo = F605.DODNo
	   WHERE 
		F928.BranchCode = prmBranchCode AND F928.INVNo = prmINVNo;		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F928_Get_ByDODNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F928_Get_ByDODNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F928_Get_ByDODNo`(
    IN prmBranchCode VARCHAR(50),
    IN prmDODNo varchar(50)
)
BEGIN
	SELECT F928.DODNo
	from F928 
	   WHERE 
		F928.BranchCode = prmBranchCode AND F928.DODNo = prmDODNo;		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F928_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F928_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F928_insert`(
	prmBranchCode VARCHAR(50), 
	prmINVNo VARCHAR(50), 
	prmDODNo VARCHAR(50), 	
	prmCreatedBy VARCHAR(50)
)
BEGIN
		INSERT INTO F928 (
			BranchCode, 
			INVNo, 
			DODNo, 			
			CreatedBy, 
			CreatedDate
		)
		VALUES (
			prmBranchCode, 
			prmINVNo, 
			prmDODNo, 			
			prmCreatedBy, 
			now()
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F951_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F951_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F951_delete`(
In prmTransactionNo Text
)
BEGIN
Call usp_string_to_mysqlrow(prmTransactionNo, ",");
	Delete From F951
	Where 
		F951.TransactionNo In (Select * From Temp_SplitString);
	Drop Temporary Table Temp_SplitString;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F951_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F951_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F951_get`(
In prmTransactionNo Varchar(50),
In prmType Varchar(50),
In prmModuleName Varchar(250),
In prmTransactionBy Varchar(50),
In prmGroupCode Varchar(50),
In prmGroupName Varchar(50),
In prmFirstDate DateTime,
In prmLastDate DateTime
)
BEGIN
	Select
		F951.TransactionNo, 
		F951.Type, 
		F951.ModuleCode,
		F002.Name As ModuleName,
		F951.TransactionBy,
		F102.GroupCode,
		F003.Name As GroupName,	
		F951.TransactionDate
	From F951
		Inner Join F002 On F951.ModuleCode = F002.Code
		Inner Join
			(
				F102 Inner Join F003 On F102.GroupCode = F003.Code
			)  
		On F951.TransactionBy = F102.Code
	Where
		F951.TransactionNo 	Like prmTransactionNo And
		F951.Type 		Like prmType And
		F002.Name 		Like prmModuleName And
		F951.TransactionBy 	Like prmTransactionBy And
		F102.GroupCode 	Like prmGroupCode And
		F003.Name 		Like prmGroupName And
		F951.TransactionDate 	Between prmFirstDate And prmLastDate
	Order By F951.TransactionNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_F951_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_F951_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_F951_insert`(
	IN prmBranchCode VARCHAR(50),
	IN prmTransactionNo VARCHAR(50), 
	IN prmType Enum('NEW','DELETE','UPDATE','PRINT'),
	IN prmModuleCode VARCHAR(50),
	IN prmTransactionBy VARCHAR(50))
BEGIN
	INSERT INTO F951 
	   (BranchCode, TransactionNo, Type, ModuleCode, TransactionBy, TransactionDate)
	values
	   (prmBranchCode, prmTransactionNo, prmType, prmModuleCode, prmTransactionBy, NOW() );
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_APPerSupplier` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_APPerSupplier` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_APPerSupplier`(
    IN prmSupplierCode Text,
	IN prmCurrentDate Date,
	IN prmArAging1 TinyInt,
	IN prmArAging2 TinyInt,
	IN prmArAging3 TinyInt
)
BEGIN
CALL usp_string_to_mysqlrow(prmSupplierCode, ",");
	Select 
        F301.GRNNo,
	    F301.TransactionDate As GRNDate,
        date_add(F301.TransactionDate, interval F018.Days Day) as DueDate,
        F301.SupplierRefNo As RefNo,
		F301.PaymentTermCode,
		F301.CurrencyCode,
		F301.SupplierCode,
		F109.Name As SupplierName,
		F301.GrandTotal,
		IF(Date(F301.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging1 DAY) AND Date(prmCurrentDate), F301.GrandTotal-F301.PaidAmount, 0) AS "7Days",
		IF(Date(F301.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging2 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging1 + 1) DAY), F301.GrandTotal-F301.PaidAmount, 0) AS "15Days",
		IF(Date(F301.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging3 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging2 + 1) DAY), F301.GrandTotal-F301.PaidAmount, 0) AS "30Days",
		IF(Date(F301.TransactionDate) < DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging3 DAY), F301.GrandTotal-F301.PaidAmount, 0) AS "31Days"
	From
		F301
		Left Join F109 On F301.SupplierCode = F109.Code
		LEFT Join F018 On F301.PaymentTermCode = F018.Code
	Where 
		F301.TransactionDate < Date(prmCurrentDate) AND F301.GrandTotal-F301.PaidAmount > 0	
	UNION ALL
		select
			F203.PRTNo,
			F203.TransactionDate,
		   F203.TransactionDate as DueDate,
			F203.CurrencyCode,
            "0" AS PaymentTermCode,
			F203.RefNo,
            F203.SupplierCode,
			F109.Name as SupplierName,
			-F203.GrandTotalAmount,
			IF(Date(F203.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging1 DAY) AND Date(prmCurrentDate), -(F203.GrandTotalAmount-F203.UsedAmount), 0) AS "7Days",
			IF(Date(F203.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging2 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging1 + 1) DAY), -(F203.GrandTotalAmount-F203.UsedAmount), 0) AS "15Days",
			IF(Date(F203.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging3 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging2 + 1) DAY), -(F203.GrandTotalAmount-F203.UsedAmount), 0) AS "30Days",
			IF(Date(F203.TransactionDate) < DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging3 DAY), -(F203.GrandTotalAmount-F203.UsedAmount), 0) AS "31Days"
		From
			F203
            Left Join F109 On F203.SupplierCode = F109.Code
            
		Where 
			F203.TransactionDate < Date(prmCurrentDate) AND F203.GrandTotalAmount-F203.UsedAmount
			And prmSupplierCode IN (SELECT * FROM Temp_SplitString);
            DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_ARPerCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_ARPerCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_ARPerCustomer`(
    IN prmCustomerCode Text,
	IN prmCurrentDate Date,
	IN prmArAging1 TinyInt,
	IN prmArAging2 TinyInt,
	IN prmArAging3 TinyInt,
	IN prmArAging4 TinyInt
)
BEGIN
CALL usp_string_to_mysqlrow(prmCustomerCode, ",");
		select
			F607.INVNo,
			F607.TransactionDate,
			date_add(F607.TransactionDate, interval F018.Days Day) as DueDate,
			F607.CurrencyCode,
            F607.SalesmanCode,
            F607.CustomerCode,
            F607.PaymentTermCode,
            F108.Name As SalesmanName,
            F106.Name AS CustomerName,
            F607.GrandTotal,
			IF(Date(F607.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging1 DAY) AND Date(prmCurrentDate), F607.GrandTotal-F607.PaidAmount, 0) AS "15Days",
			IF(Date(F607.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging2 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging1 + 1) DAY), F607.GrandTotal-F607.PaidAmount, 0) AS "30Days",
			IF(Date(F607.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging3 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging2 + 1) DAY), F607.GrandTotal-F607.PaidAmount, 0) AS "60Days",
			IF(Date(F607.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging4 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging3 + 1) DAY), F607.GrandTotal-F607.PaidAmount, 0) AS "90Days",
			IF(Date(F607.TransactionDate) < DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging4 DAY), F607.GrandTotal-F607.PaidAmount, 0) AS "91Days"
		From
			F607
            LEFT Join F018 On F607.PaymentTermCode = F018.Code 
            LEFT Join F108 On F607.SalesmanCode = F108.Code
            LEFT Join F106 On F607.CustomerCode = F106.Code
		Where 
			F607.TransactionDate < Date(prmCurrentDate) AND F607.GrandTotal-F607.PaidAmount > 0
		UNION ALL
		select
			F613.SRTNo,
			F613.TransactionDate,
		    F613.TransactionDate as DueDate,
			F613.CurrencyCode,
            F613.SalesmanCode,
            F613.CustomerCode,
            "0" AS PaymentTermCode,
            F108.Name As SalesmanName,
            F106.Name AS CustomerName,
			-F613.GrandTotalAmount,
			IF(Date(F613.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging1 DAY) AND Date(prmCurrentDate), -(F613.GrandTotalAmount-F613.UsedAmount), 0) AS "15Days",
			IF(Date(F613.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging2 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging1 + 1) DAY), -(F613.GrandTotalAmount-F613.UsedAmount), 0) AS "30Days",
			IF(Date(F613.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging3 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging2 + 1) DAY), -(F613.GrandTotalAmount-F613.UsedAmount), 0) AS "60Days",
			IF(Date(F613.TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging4 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging3 + 1) DAY), -(F613.GrandTotalAmount-F613.UsedAmount), 0) AS "90Days",
			IF(Date(F613.TransactionDate) < DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging4 DAY), -(F613.GrandTotalAmount-F613.UsedAmount), 0) AS "91Days"
		From
			F613
            LEFT Join F108 On F613.SalesmanCode = F108.Code
            LEFT Join F106 On F613.CustomerCode = F106.Code
		Where 
			F613.TransactionDate < Date(prmCurrentDate) AND F613.GrandTotalAmount-F613.UsedAmount
            And prmCustomerCode IN (SELECT * FROM Temp_SplitString);
            DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_ARPerSalesman` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_ARPerSalesman` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_ARPerSalesman`(
    IN prmSalesmanCode text,
	IN prmCurrentDate Date,
	IN prmArAging1 TinyInt,
	IN prmArAging2 TinyInt,
	IN prmArAging3 TinyInt,
	IN prmArAging4 TinyInt
)
BEGIN
CALL usp_string_to_mysqlrow(prmSalesmanCode, ",");
		select
			INVNo,
			TransactionDate,
			date_add(TransactionDate, interval F018.Days Day) as DueDate,
			CurrencyCode,
            SalesmanCode,
            CustomerCode,
            PaymentTermCode,
            F108.Name As SalesmanName,
            F106.Name AS CustomerName,
            GrandTotal,
			IF(Date(TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging1 DAY) AND Date(prmCurrentDate), GrandTotal-PaidAmount, 0) AS "15Days",
			IF(Date(TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging2 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging1 + 1) DAY), GrandTotal-PaidAmount, 0) AS "30Days",
			IF(Date(TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging3 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging2 + 1) DAY), GrandTotal-PaidAmount, 0) AS "60Days",
			IF(Date(TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging4 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging3 + 1) DAY), GrandTotal-PaidAmount, 0) AS "90Days",
			IF(Date(TransactionDate) < DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging4 DAY), GrandTotal-PaidAmount, 0) AS "91Days"
		From
			F607 
			Inner Join F018 On F607.PaymentTermCode = F018.Code
            Inner Join F108 On F607.SalesmanCode = F108.Code
            Inner Join F106 On F607.CustomerCode = F106.Code
		Where 
			TransactionDate < Date(prmCurrentDate) AND GrandTotal-PaidAmount > 0
		UNION ALL
		select
			SRTNo,
			TransactionDate,
			TransactionDate as DueDate,
			CurrencyCode,
            SalesmanCode,
            CustomerCode,
            "0" AS PaymentTermCode,
            F108.Name As SalesmanName,
            F106.Name AS CustomerName,
			-GrandTotalAmount,
			IF(Date(TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging1 DAY) AND Date(prmCurrentDate), -(GrandTotalAmount-UsedAmount), 0) AS "15Days",
			IF(Date(TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging2 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging1 + 1) DAY), -(GrandTotalAmount-UsedAmount), 0) AS "30Days",
			IF(Date(TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging3 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging2 + 1) DAY), -(GrandTotalAmount-UsedAmount), 0) AS "60Days",
			IF(Date(TransactionDate) Between DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging4 DAY) AND DATE_SUB(Date(prmCurrentDate), INTERVAL (prmArAging3 + 1) DAY), -(GrandTotalAmount-UsedAmount), 0) AS "90Days",
			IF(Date(TransactionDate) < DATE_SUB(Date(prmCurrentDate), INTERVAL prmArAging4 DAY), -(GrandTotalAmount-UsedAmount), 0) AS "91Days"
		From
			F613
            Inner Join F108 On F613.SalesmanCode = F108.Code
            Inner Join F106 On F613.CustomerCode = F106.Code
		Where 
			TransactionDate < Date(prmCurrentDate) AND GrandTotalAmount-UsedAmount
            And prmSalesmanCode IN (SELECT * FROM Temp_SplitString);
            DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_BankPayment_PerBankAccount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_BankPayment_PerBankAccount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_BankPayment_PerBankAccount`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F507.BranchCode,
       F001.Name As BranchName,
       F507.BBKNo,
       F507.TransactionDate,
       F507.BankAccountCode,
       F103.Name As BankAccountName,
       F507.RefNo,
       F507.SupplierCode,
       F109.Name As SupplierName,
       F507.CurrencyCode,
       F006.Name As CurrencyName,
       F507.ExchangeRate,
       F507.TotalTransactionAmount,
       F507.BBKTo,
       F507.PaymentType,
       F507.GiroNo,
       F507.GiroDueDate,
       F507.GiroClearanceDate,
       F507.GiroStatus,
       F507.TransferNo,
       F507.TransferDate,
       F508.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F508.DocumentNo
From F507
     Inner Join F001 On F507.BranchCode = F001.Code
     Inner Join F103 On F507.BankAccountCode = F103.Code
     Inner Join F109 On F507.SupplierCode = F109.Code
     Inner Join F006 On F507.CurrencyCode = F006.Code
     Inner Join F508 On F507.BBKNo = F508.BBKNo
     Inner Join F011 On F508.BudgetTypeCode = F011.Code
         
Where F507.TransactionDate between prmFirstdate and prmLastdate
AND F507.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
      
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_BankPayment_PerBudgetType` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_BankPayment_PerBudgetType` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_BankPayment_PerBudgetType`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F507.BranchCode,
       F001.Name As BranchName,
       F507.BBKNo,
       F507.TransactionDate,
       F507.BankAccountCode,
       F103.Name As BankAccountName,
       F507.RefNo,
       F507.SupplierCode,
       F109.Name As SupplierName,
       F507.CurrencyCode,
       F006.Name As CurrencyName,
       F507.ExchangeRate,
       F507.TotalTransactionAmount,
       F507.BBKTo,
       F507.PaymentType,
       F507.GiroNo,
       F507.GiroDueDate,
       F507.GiroClearanceDate,
       F507.GiroStatus,
       F507.TransferNo,
       F507.TransferDate,
       F508.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F508.DocumentNo
From F507
     Inner Join F001 On F507.BranchCode = F001.Code
     Inner Join F103 On F507.BankAccountCode = F103.Code
     Inner Join F109 On F507.SupplierCode = F109.Code
     Inner Join F006 On F507.CurrencyCode = F006.Code
     Inner Join F508 On F507.BBKNo = F508.BBKNo
     Inner Join F011 On F508.BudgetTypeCode = F011.Code
         
Where F507.TransactionDate between prmFirstdate and prmLastdate
AND F507.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
      
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_BankReceiving_PerBankAccount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_BankReceiving_PerBankAccount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_BankReceiving_PerBankAccount`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F503.BranchCode,
       F001.Name As BranchName,
       F503.BBMNo,
       F503.TransactionDate,
       F503.CustomerCode,
       F106.Name As CustomerName,
       F503.BankAccountCode,
       F103.Name As BankAccountName,
       F503.BBMFrom,
       F503.RefNo,
       F503.CurrencyCode,
       F006.Name As CurrencyName,
       F503.ExchangeRate,
       F503.TotalTransactionAmount,
       F503.PaymentType,
       F503.GiroNo,
       F503.GiroDueDate,
       F503.BankName,
       F503.GiroStatus,
       F503.GiroClearanceDate,
       F503.TransferNo,
       F503.TransferDate,
       F504.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F504.DocumentNo
From F503
     Inner Join F001 On F503.BranchCode = F001.Code
     Inner Join F106 On F503.CustomerCode = F106.Code
     Inner Join F103 On F503.BankAccountCode = F103.Code
     Inner Join F006 On F503.CurrencyCode = F006.Code
     Inner Join F504 On F503.BBMNo = F504.BBMNo
     Inner Join F011 On F504.BudgetTypeCode = F011.Code
Where F503.TransactionDate between prmFirstdate and prmLastdate
AND F503.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_BankReceiving_PerBudgetType` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_BankReceiving_PerBudgetType` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_BankReceiving_PerBudgetType`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F503.BranchCode,
       F001.Name As BranchName,
       F503.BBMNo,
       F503.TransactionDate,
       F503.CustomerCode,
       F106.Name As CustomerName,
       F503.BankAccountCode,
       F103.Name As BankAccountName,
       F503.BBMFrom,
       F503.RefNo,
       F503.CurrencyCode,
       F006.Name As CurrencyName,
       F503.ExchangeRate,
       F503.TotalTransactionAmount,
       F503.PaymentType,
       F503.GiroNo,
       F503.GiroDueDate,
       F503.BankName,
       F503.GiroStatus,
       F503.GiroClearanceDate,
       F503.TransferNo,
       F503.TransferDate,
       F504.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F504.DocumentNo
From F503
     Inner Join F001 On F503.BranchCode = F001.Code
     Inner Join F106 On F503.CustomerCode = F106.Code
     Inner Join F103 On F503.BankAccountCode = F103.Code
     Inner Join F006 On F503.CurrencyCode = F006.Code
     Inner Join F504 On F503.BBMNo = F504.BBMNo
     Inner Join F011 On F504.BudgetTypeCode = F011.Code
Where F503.TransactionDate between prmFirstdate and prmLastdate
AND F503.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_BBKGiro` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_BBKGiro` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_BBKGiro`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F507.BranchCode,
       F001.Name As BranchName,
       F507.BBKNo,
       F507.TransactionDate,
       F507.BankAccountCode,
       F103.Name As BankAccountName,
       F507.RefNo,
       F507.SupplierCode,
       F109.Name As SupplierName,
       F507.CurrencyCode,
       F006.Name As CurrencyName,
       F507.ExchangeRate,
       F507.TotalTransactionAmount,
       F507.BBKTo,
       F507.PaymentType,
       F507.GiroNo,
       F507.GiroDueDate,
       F507.GiroClearanceDate,
       F507.GiroStatus,
       F507.TransferNo,
       F507.TransferDate,
       F508.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F508.DocumentNo
From F507
     Inner Join F001 On F507.BranchCode = F001.Code
     Inner Join F103 On F507.BankAccountCode = F103.Code
     Inner Join F109 On F507.SupplierCode = F109.Code
     Inner Join F006 On F507.CurrencyCode = F006.Code
     Inner Join F508 On F507.BBKNo = F508.BBKNo
     Inner Join F011 On F508.BudgetTypeCode = F011.Code
         
Where F507.TransactionDate between prmFirstdate and prmLastdate
AND F507.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
      
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_BBMGiro` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_BBMGiro` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_BBMGiro`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F503.BranchCode,
       F001.Name As BranchName,
       F503.BBMNo,
       F503.TransactionDate,
       F503.CustomerCode,
       F106.Name As CustomerName,
       F503.BankAccountCode,
       F103.Name As BankAccountName,
       F503.BBMFrom,
       F503.RefNo,
       F503.CurrencyCode,
       F006.Name As CurrencyName,
       F503.ExchangeRate,
       F503.TotalTransactionAmount,
       F503.PaymentType,
       F503.GiroNo,
       F503.GiroDueDate,
       F503.BankName,
       F503.GiroStatus,
       F503.GiroClearanceDate,
       F503.TransferNo,
       F503.TransferDate,
       F504.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F504.DocumentNo
From F503
     Inner Join F001 On F503.BranchCode = F001.Code
     Inner Join F106 On F503.CustomerCode = F106.Code
     Inner Join F103 On F503.BankAccountCode = F103.Code
     Inner Join F006 On F503.CurrencyCode = F006.Code
     Inner Join F504 On F503.BBMNo = F504.BBMNo
     Inner Join F011 On F504.BudgetTypeCode = F011.Code
Where F503.TransactionDate between prmFirstdate and prmLastdate
AND F503.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_CashPayment_PerBudgetType` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_CashPayment_PerBudgetType` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_CashPayment_PerBudgetType`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F505.BranchCode,
       F001.Name As BranchName,
       F505.BKKNo,
       F505.TransactionDate,
       F505.SupplierCode,
       F109.Name As SupplierName,
       F505.CashTypeCode,
       F104.Name As CashTypeName,
       F505.BKKTo,
       F505.RefNo,
       F505.CurrencyCode,
       F006.Name As CurrencyName,
       F505.ExchangeRate,
       F505.TotalTransactionAmount,
       F506.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F506.DocumentNo
From F505
     Inner Join F001 On F505.BranchCode = F001.Code
     Inner Join F109 On F505.SupplierCode = F109.Code
     Inner Join F006 On F505.CurrencyCode = F006.Code
     Inner Join F104 On F505.CashTypeCode = F104.Code
     Inner Join F506 On F505.BKKNo = F506.BKKNo
     Inner Join F011 On F506.BudgetTypeCode = F011.Code
Where F505.TransactionDate between prmFirstdate and prmLastdate
AND F505.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_CashPayment_PerCashType` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_CashPayment_PerCashType` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_CashPayment_PerCashType`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F505.BranchCode,
       F001.Name As BranchName,
       F505.BKKNo,
       F505.TransactionDate,
       F505.SupplierCode,
       F109.Name As SupplierName,
       F505.CashTypeCode,
       F104.Name As CashTypeName,
       F505.BKKTo,
       F505.RefNo,
       F505.CurrencyCode,
       F006.Name As CurrencyName,
       F505.ExchangeRate,
       F505.TotalTransactionAmount,
       F506.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F506.DocumentNo
From F505
     Inner Join F001 On F505.BranchCode = F001.Code
     Inner Join F109 On F505.SupplierCode = F109.Code
     Inner Join F006 On F505.CurrencyCode = F006.Code
     Inner Join F104 On F505.CashTypeCode = F104.Code
     Inner Join F506 On F505.BKKNo = F506.BKKNo
     Inner Join F011 On F506.BudgetTypeCode = F011.Code
Where F505.TransactionDate between prmFirstdate and prmLastdate
AND F505.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_GlobalBankPayment` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_GlobalBankPayment` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_GlobalBankPayment`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F507.BranchCode,
       F001.Name As BranchName,
       F507.BBKNo,
       F507.TransactionDate,
       F507.BankAccountCode,
       F101.Name As BankAccountName,
       F507.RefNo,
       F507.SupplierCode,
       F109.Name As SupplierName,
       F507.CurrencyCode,
       F006.Name As CurrencyName,
       F507.ExchangeRate,
       F507.TotalTransactionAmount,
       F507.BBKTo,
       F507.PaymentType,
       F507.GiroNo,
       F507.GiroDueDate,
       F507.GiroClearanceDate,
       F507.GiroStatus,
       F507.TransferNo,
       F507.TransferDate,
       F508.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F508.DocumentNo,
	f508.Amount
From F507
     Left Join F001 On F507.BranchCode = F001.Code
     LEFT Join F101 On F507.BankAccountCode = F101.Code
     LEFT Join F109 On F507.SupplierCode = F109.Code
     LEFT Join F006 On F507.CurrencyCode = F006.Code
     LEFT Join F508 On F507.BBKNo = F508.BBKNo
     LEFT Join F011 On F508.BudgetTypeCode = F011.Code
         
Where F507.TransactionDate between prmFirstdate and prmLastdate
AND F507.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
      
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_GlobalBankReceiving` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_GlobalBankReceiving` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_GlobalBankReceiving`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F503.BranchCode,
       F001.Name As BranchName,
       F503.BBMNo,
       F503.TransactionDate,
       F503.CustomerCode,
       F106.Name As CustomerName,
       F503.BankAccountCode,
       F101.Name As BankAccountName,
       F503.BBMFrom,
       F503.RefNo,
       F503.CurrencyCode,
       F006.Name As CurrencyName,
       F503.ExchangeRate,
       F503.TotalTransactionAmount,
       F503.PaymentType,
       F503.GiroNo,
       F503.GiroDueDate,
       F503.BankName,
       F503.GiroStatus,
       F503.GiroClearanceDate,
       F503.TransferNo,
       F503.TransferDate,
       F504.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F504.DocumentNo,
	f504.Amount
From F503
     LEFT Join F001 On F503.BranchCode = F001.Code
     LEFT Join F106 On F503.CustomerCode = F106.Code
     LEFT Join F101 On F503.BankAccountCode = F101.Code
     LEFT Join F006 On F503.CurrencyCode = F006.Code
     LEFT Join F504 On F503.BBMNo = F504.BBMNo
     LEFT Join F011 On F504.BudgetTypeCode = F011.Code
Where F503.TransactionDate between prmFirstdate and prmLastdate
AND F503.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_GlobalCashBookPayment` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_GlobalCashBookPayment` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_GlobalCashBookPayment`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
	 SELECT 
 F519.BranchCode,
       F001.Name AS BranchName,
       F519.GJMNo,       
       F519.TransactionDate,
       F519.coa,
       F101.Name AS CashTypeName,
       -- F519.CustomerCode,
       -- F106.Name AS CustomerName,
       F519.RefNo,
       F519.CurrencyCode,
       -- F006.Name AS CurrencyName,
       F519.ExchangeRate,
       F519.Description,
       F519.TotalTransactionAmount as Amount,
       F520.BudgetTypeCode,
       F103.Name AS BudgetTypeName,
       F520.DocumentNo,
	f520.GJMDescription
FROM F519
     INNER JOIN F001 ON F519.BranchCode = F001.Code
     INNER JOIN F101 ON F519.coa = F101.Code
     -- INNER JOIN F106 ON F519.CustomerCode = F106.Code
     -- INNER JOIN F006 ON F519.CurrencyCode = F006.Code
      INNER JOIN F520 ON F519.GJMNo = F520.GJMNo
      INNER JOIN F103 ON F520.BudgetTypeCode = F103.Code
       
WHERE F519.TransactionDate BETWEEN prmFirstdate AND prmLastdate AND LEFT(F519.GJMNo,3)='CBP'
AND F519.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_GlobalCashBookReceiving` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_GlobalCashBookReceiving` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_GlobalCashBookReceiving`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
    SELECT 
 F519.BranchCode,
       F001.Name AS BranchName,
       F519.GJMNo,       
       F519.TransactionDate,
       F519.coa,
       F101.Name AS CashTypeName,
       -- F519.CustomerCode,
       -- F106.Name AS CustomerName,
       F519.RefNo,
       F519.CurrencyCode,
       -- F006.Name AS CurrencyName,
       F519.ExchangeRate,
       F519.Description,
       F519.TotalTransactionAmount as Amount,
       F520.BudgetTypeCode,
       F103.Name AS BudgetTypeName,
       F520.DocumentNo,
	f520.GJMDescription
FROM F519
     INNER JOIN F001 ON F519.BranchCode = F001.Code
     INNER JOIN F101 ON F519.coa = F101.Code
     -- INNER JOIN F106 ON F519.CustomerCode = F106.Code
     -- INNER JOIN F006 ON F519.CurrencyCode = F006.Code
      INNER JOIN F520 ON F519.GJMNo = F520.GJMNo
      INNER JOIN F103 ON F520.BudgetTypeCode = F103.Code
       
WHERE F519.TransactionDate BETWEEN prmFirstdate AND prmLastdate AND LEFT(F519.GJMNo,3)='CBR'
AND F519.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_GlobalCashPayment` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_GlobalCashPayment` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_GlobalCashPayment`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F505.BranchCode,
       F001.Name As BranchName,
       F505.BKKNo,
       F505.TransactionDate,
       F505.SupplierCode,
       F109.Name As SupplierName,
       F505.CashTypeCode,
       F101.Name As CashTypeName,
       F505.BKKTo,
       F505.RefNo,
       F505.CurrencyCode,
       F006.Name As CurrencyName,
       F505.ExchangeRate,
       F505.TotalTransactionAmount,
       F506.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F506.DocumentNo,
	f506.Amount
From F505
     LEFT Join F001 On F505.BranchCode = F001.Code
     LEFT Join F109 On F505.SupplierCode = F109.Code
     LEFT Join F006 On F505.CurrencyCode = F006.Code
     LEFT Join F101 On F505.CashTypeCode = F101.Code
     LEFT Join F506 On F505.BKKNo = F506.BKKNo
     LEFT Join F011 On F506.BudgetTypeCode = F011.Code
Where F505.TransactionDate between prmFirstdate and prmLastdate
AND F505.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_GlobalCashReceiving` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_GlobalCashReceiving` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_fin_GlobalCashReceiving`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
    Select F501.BranchCode,
       F001.Name AS BranchName,
       F501.BKMNo,
       F501.TransactionDate,
       F501.CashTypeCode,
       F101.Name As CashTypeName,
       F501.CustomerCode,
       F106.Name As CustomerName,
       F501.RefNo,
       F501.CurrencyCode,
       F006.Name As CurrencyName,
       F501.ExchangeRate,
       F501.BKMFrom,
       F501.TotalTransactionAmount,
       F502.BudgetTypeCode,
       F011.Name As BudgetTypeName,
       F502.DocumentNo,
       f502.Amount
From F501
     Left Join F001 On F501.BranchCode = F001.Code
     LEFT Join F101 On F501.CashTypeCode = F101.Code
     LEFT Join F106 On F501.CustomerCode = F106.Code
     LEFT Join F006 On F501.CurrencyCode = F006.Code
     LEFT Join F502 On F501.BKMNo = F502.BKMNo
     LEFT Join F011 On F502.BudgetTypeCode = F011.Code
       
Where F501.TransactionDate between prmFirstdate and prmLastdate
AND F501.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_GJMNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_GJMNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_GJMNo_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmGJMNo varchar(50)
)
BEGIN
	SELECT 
		'GJM' AS TransactionType,
		F520.BranchCode,
		F520.GJMNo,
		f519.TransactionDate,
		f519.CBType,
		f519.COA,
		b.Name AS AccountName,
		b.AccountCode AS AccountCode,
		f519.TotalTransactionAmount,
		F519.Description AS DetailDescription,
		F520.BudgetTypeCode,
		f101.Name AS BudgetTypeName,
		F520.DocumentNo,
		F520.GJMDescription,
		F520.Amount,
                (F520.Amount * F519.ExchangeRate)	AS AmountLocal	
	FROM 
		F520
		
		INNER JOIN f101 ON F520.BudgetTypeCode = f101.Code
		-- INNER JOIN F607 ON F520.DocumentNo = F607.INVNo	
		INNER JOIN F519 ON F520.GJMNo = F519.GJMNo
		INNER JOIN 
		(SELECT Qry1.Code,Qry1.Name,Qry1.AccountCode FROM (
		SELECT CODE,NAME,AccountCode FROM f104
		UNION ALL
		SELECT CODE,NAME,AccountCode FROM F103
		) AS Qry1) b
		 ON f519.COA = b.Code
	WHERE 	
		-- F520.BranchCode = prmBranchCode And 
		F520.GJMNo = prmGJMNo
	
	Order by GJMNo desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_GlobalPurchaseReturn` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_GlobalPurchaseReturn` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_GlobalPurchaseReturn`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
    CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F203.BranchCode,
       F001.Name As BranchName,
       F203.PRTNo,
       F203.TransactionDate,
       F203.CurrencyCode,
       F006.Name AS CurrencyName,
       F203.SupplierCode,
       F109.Name AS SupplierName,
       F203.WarehouseCode,
       F110.Name As WarehouseName,
       F203.TotalTransactionAmount,
       F203.DiscountPercent,
       F203.DiscountAmount,
       F203.PPNPercent,
       F203.PPNAmount,
       F203.OtherFee,
       F203.GrandTotalAmount,
       F204.ItemCode,
       F013.Name As ItemName,
       F015.Name As ItemAlias,
       F204.Quantity,
       F204.Price,
       F204.GRNNo
From F203
     Inner Join F204 On F203.PRTNo = F204.PRTNo
     Inner Join F001 On F203.BranchCode = F001.Code
     Inner Join F006 On F203.CurrencyCode = F006.Code
     Inner Join F109 On F203.SupplierCode = F109.Code
     Inner Join F110 On F203.WarehouseCode = F110.Code
     Inner Join F013 On F204.ItemCode = F013.Code
     Inner Join F015 On F204.ItemCode = F015.Code
WHERE F203.TransactionDate BETWEEN prmFirstdate AND prmLastdate
AND F203.BranchCode IN (SELECT * FROM Temp_SplitString);
DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_GlobalSales` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_GlobalSales` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_GlobalSales`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");    
	SELECT 
    F607.BranchCode,
    -- F001.Name AS BranchName,
    F607.INVNo,
	F607.PostingSend,
	F607.PostingRec,
    F607.RefNo,
    F607.VoucherNo, 
    F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
    F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
IF(ISNULL(f607.BPno), "", f607.BPno) AS BPno,
IF(ISNULL(f607b.FakDate), NOW(), f607b.FakDate) AS FakDate,
	F607.FakDate,
	F607.StatusRef,
	F607.FakNoRef,
	F607.FakRefDate,
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
    F607.PaymentTermCode,
    -- F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
    F607.ExchangeRate, 
    F607.CustomerCode,
    IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
    F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F607.WarehouseCode,
    -- F110.Name AS WarehouseName,
    F106.Name AS Description, 
    F607.TotalTransaction AS TotalTransactionForeign,
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
    F607.DiscountPercent,
    F607.DiscountAmount AS DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
    F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
    F607.PPNPercent,
    F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
    F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	F607.MateraiFeeAfterPPN   AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
   F607.PackingFeeAfterPPN 			      AS PackingFeeAfterPPNForeign, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
    F607.FinalDiscount AS FinalDiscountForeign,
    (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	F607.DeductionAfterPPn 			      AS DeductionAfterPPnForeign, 
	(F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal,
      F607.TotalTransaction+F607.PackingFeeAfterPPN + F607.OtherFeeBeforePPN AS GrandTotalForeign,
    -- (F607.GrandTotal * F607.ExchangeRate)  AS GrandTotalLocal,
    F607.TotalTransaction+F607.PackingFeeAfterPPN + F607.OtherFeeBeforePPN AS GrandTotalLocal,
    F607.CreatedBy, 
	f607.fbill_ppj,
    F607.CreatedBy, 
    F607.CreatedDate, 
    F607.UpdatedBy, 
    F607.UpdatedDate
FROM   F607
       -- INNER JOIN F001 ON F607.BranchCode = F001.Code
      -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
        LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
       -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
       INNER JOIN F106 ON F607.CustomerCode = F106.Code
       -- INNER JOIN F108 ON F607.SalesmanCode = F108.Code
       -- INNER JOIN F110 ON F607.WarehouseCode = F110.Code
Where F607.TransactionDate between prmFirstdate and prmLastdate
AND F607.BranchCode IN (SELECT * FROM Temp_SplitString);
DROP TEMPORARY TABLE Temp_SplitString;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_GlobalSalesReturn` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_GlobalSalesReturn` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_GlobalSalesReturn`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
    CALL usp_string_to_mysqlrow(prmBranchCode, ",");
    SELECT F613.BranchCode,
           F001.Name AS BranchName,
           F613.SRTNo,
           F613.TransactionDate,
           F613.ExchangeRate,
           F613.RefNo,
           F613.Description,
           F006.Code AS CurrencyCode,
		   F006.Name AS CurrencyName,
           F106.Code AS CustomerCode,
           F106.Name AS CustomerName,
           F108.Code AS SalesmanCode,
           F108.Name AS SalesmanName,
           F110.Code AS WarehouseCode,
           F110.Name AS WarehouseName,
           F613.TotalTransactionAmount AS GrossReturn,
           F613.DiscountPercent AS DiscountPercentHeader,
           F613.DiscountAmount AS DiscountAmountHeader,
           F613.PPNPercent AS PPNPercentHeader,
           F613.PPNAmount AS PPNAmountHeader,
           F613.OtherFee AS OtherFeeHeader,
           F613.GrandTotalAmount AS GrandTotalAmountHeader,
           F613.UsedAmount,
           F614.ItemCode,
           F013.Name AS ItemName,
           F614.Quantity,
           F614.Price,
           F614.InvNo,
           F614.DiscountPercent1,
           F614.DiscountAmount1,
           F614.DiscountPercent2,
           F614.DiscountAmount2,
           F614.DiscountPercent3,
           F614.DiscountAmount3
FROM F613
         INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
         INNER JOIN F001 ON F613.BranchCode = F001.Code
         INNER JOIN F006 ON F613.CurrencyCode = F006.Code
         INNER JOIN F106 ON F613.CustomerCode = F106.Code
         INNER JOIN F108 ON F613.SalesmanCode = F108.Code
         INNER JOIN F110 ON F613.WarehouseCode = F110.Code
         INNER JOIN F013 ON F614.ItemCode = F013.Code
WHERE F613.TransactionDate BETWEEN prmFirstdate AND prmLastdate
AND F613.BranchCode IN (SELECT * FROM Temp_SplitString);
DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_GlobalSales_PerItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_GlobalSales_PerItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_GlobalSales_PerItem`(prmBranchCode TEXT, prmFirstDate Datetime, prmLastDate datetime, prmItem1 Text, prmItem2 Text)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");    
select F607.BranchCode,
       F001.Name AS BranchName,
       F607.INVNo,
       F607.SODNo,
       F607.VoucherNo,
       F607.TransactionDate,
       F607.ExchangeRate,
       F607.TaxStatus,
       F013.Code As ItemCode,
       F013.Name AS ItemName,
       F006.Code AS CurrencyCode,
       F006.Name AS CurrencyName,
       F018.Code AS PaymentTermCode,
       F018.Name AS PaymentTermName,
       F106.Code As CustomerCode,
       F106.Name AS CustomerName,
       F108.Code AS SalesmanCode,
       F108.Name AS SalesmanName,
       F110.Code AS WarehouseCode,
       F110.Name AS WarehouseName,
       F608.Quantity,
       F608.BonusQuantity,
       F608.Price,
       F607.TotalTransaction AS GrossSales,
       F607.DiscountAmount AS DiscAmountHeader,
       F607.FinalDiscount AS FinalDiscountHeader,
       F607.OtherFeeBeforePPN AS OtherFeeDiscountBeforePPNHeader,
       F607.PPNAmount AS PPNAmountHeader,
       F607.OtherFeeAfterPPN AS OtherFeeAfterPPNHeader,
       F607.GrandTotal AS GrandTotal,
       F607.PaidAmount As PaidAmountHeader
From   F607
       INNER JOIN F608 ON F607.INVNo = F608.INVNo 
       INNER JOIN F013 ON F608.ItemCode = F013.Code
       INNER JOIN F001 ON F607.BranchCode = F001.Code
       INNER JOIN F006 ON F607.CurrencyCode = F006.Code
       INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
       INNER JOIN F106 ON F607.CustomerCode = F106.Code
       INNER JOIN F108 ON F607.SalesmanCode = F108.Code
       INNER JOIN F110 ON F607.WarehouseCode = F110.Code
Where F607.TransactionDate between prmFirstdate and prmLastdate
AND F608.ItemCode BETWEEN prmItem1 AND prmItem2
AND F607.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_GRNNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_GRNNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_GRNNo_get`(IN prmGRNNo VARCHAR(50))
BEGIN
	SELECT	
		F301.BranchCode,
		F001.Name AS BranchName,
		F301.GRNNo, 
		F301.TransactionDate, 
		F301.PODNo, 
		F301.SupplierRefNo,
		F301.SupplierCode,
		F109.Name AS SupplierName,
		F109.Address AS SupplierAddress,
		F109.Phone1 AS SupplierPhone,
		F109.Fax AS SupplierFax, 
		F301.WarehouseCode,
		F110.Name AS WarehouseName, 
		F301.CurrencyCode,
		F006.Name AS  CurrencyName,
		F301.ExchangeRate,
		F301.PaymentTermCode,
		F018.Name as PaymentTermName,
		F301.PoliceNo,
		F301.ContainerNo,
		F301.ReceivedBy, 
		F301.Description As DescriptionHeader,
		F301.TotalTransactionAmount,
		F301.DiscountPercent,
		F301.DiscountAmount,
		F301.PPNPercent,
		F301.PPNAmount,
		F301.FreightFeeAmount,
		F301.InsuranceFeeAmount,
		F301.AdministrationFeeAmount,
		F301.OtherFeeAmount,
		F301.RoundedAmount,
		F301.GrandTotal,
		
		F302.ItemCode,
		F013.Name AS ItemName,
		F302.Quantity,
		F302.BonusQuantity,
		F013.UnitCode AS ItemUnitCode, 
		F302.Price,
		F302.DiscountPercent1,
		F302.DiscountAmount1,
		F302.DiscountPercent2,
		F302.DiscountAmount2,
		F302.DiscountPercent3,
		F302.DiscountAmount3,
		F302.Description As DescriptionDetail
	FROM F301
		INNER JOIN F001 ON F301.BranchCode = F001.Code
		INNER JOIN F109 ON F301.SupplierCode = F109.Code
		INNER JOIN F110 ON F301.WarehouseCode = F110.Code
		INNER JOIN F006 ON F301.CurrencyCode = F006.Code  
		INNER JOIN F018 ON F301.PaymentTermCode = F018.Code
		INNER JOIN F302 ON F302.GRNNo = F301.GRNNo
		INNER JOIN F013 ON F302.ItemCode = F013.Code
	WHERE
		F301.GRNNo = prmGRNNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_HistoryStock_Awal_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_HistoryStock_Awal_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_HistoryStock_Awal_get`(
	IN prmBranchCode VARCHAR(50) 
	, IN prmWarehouseFrom VARCHAR(50) 
	, IN prmWarehouseTo VARCHAR(50) 
	, IN prmDateFrom DATETIME 
)
BEGIN
	
SELECT Qry3.WarehouseCode 
		, Qry3.GenderCode 
		, Qry3.ItemCode, Qry3.ItemName 
		, Qry3.AWAL + Qry3.IIN + Qry3.GRN + Qry3.DOK + Qry3.NRK + Qry3.IOT + Qry3.INV AS BEGINNING 
FROM 
(
	SELECT Qry2.WarehouseCode 
			, Qry2.GenderCode 
			, Qry2.ItemCode, Qry2.ItemName 
			, SUM(Qry2.AWAL) AS 'AWAL' 
			, SUM(Qry2.IIN) AS 'IIN' 
			, SUM(Qry2.GRN) AS 'GRN' 
			, SUM(Qry2.DOK) AS 'DOK' 
			, SUM(Qry2.NRK) AS 'NRK' 
			, SUM(Qry2.IOT) AS 'IOT' 
			, SUM(Qry2.INV) AS 'INV' 
	FROM 
	(
		SELECT Qry1.WarehouseCode 
			, Qry1.GenderCode 
			, Qry1.ItemCode, Qry1.ItemName 
			, CASE Qry1.s_TransType WHEN 'AWAL' THEN Qry1.Quantity ELSE 0 END AS 'AWAL' 
			, CASE Qry1.s_TransType WHEN 'IIN' THEN Qry1.Quantity ELSE 0 END AS 'IIN' 
			, CASE Qry1.s_TransType WHEN 'GRN' THEN Qry1.Quantity ELSE 0 END AS 'GRN' 
			, CASE Qry1.s_TransType WHEN 'DOK' THEN Qry1.Quantity ELSE 0 END AS 'DOK' 
			, CASE Qry1.s_TransType WHEN 'NRK' THEN Qry1.Quantity ELSE 0 END AS 'NRK' 
			, CASE Qry1.s_TransType WHEN 'IOT' THEN Qry1.Quantity ELSE 0 END AS 'IOT' 
			, CASE Qry1.s_TransType WHEN 'INV' THEN Qry1.Quantity ELSE 0 END AS 'INV' 
		FROM 
		(
			SELECT 'AWAL' AS s_TransType, F400.ItemCode, SUM(F400.ActualStock) AS Quantity 
				, F400.WarehouseCode AS WarehouseCode 
				, IFNULL(F013.SizeCode, '') AS SizeCode 
				, IFNULL(F013.GenderCode, '') AS GenderCode 
				, IFNULL(F013.Name, '') AS ItemName, IFNULL(F020.Name, '') AS SizeName 
				, IFNULL(F023.Name, '') AS GenderName 
			FROM F400 
				INNER JOIN F013 ON F400.ItemCode=F013.Code 
				LEFT JOIN F020 ON F013.SizeCode=F020.Code 
				LEFT JOIN F023 ON F013.GenderCode=F023.Code 
			WHERE F400.BranchCode=prmBranchCode 
				AND F400.WarehouseCode BETWEEN prmWarehouseFrom AND prmWarehouseTo 
				AND F400.PeriodYear=CAST(YEAR(prmDateFrom) AS DECIMAL(4,0)) 
			GROUP BY WarehouseCode, ItemCode 
			UNION ALL 
			SELECT 'IIN' AS s_TransType, F304.ItemCode, SUM(F304.Quantity) AS Quantity 
				, F303.WarehouseCode AS WarehouseCode 
				, IFNULL(F013.SizeCode, '') AS SizeCode 
				, IFNULL(F013.GenderCode, '') AS GenderCode 
				, IFNULL(F013.Name, '') AS ItemName, IFNULL(F020.Name, '') AS SizeName 
				, IFNULL(F023.Name, '') AS GenderName 
			FROM F304 
				INNER JOIN F303 ON F304.BranchCode=F303.BranchCode AND F304.IINNo=F303.IINNo 
				INNER JOIN F013 ON F304.ItemCode=F013.Code 
				LEFT JOIN F020 ON F013.SizeCode=F020.Code 
				LEFT JOIN F023 ON F013.GenderCode=F023.Code 
			WHERE F303.BranchCode=prmBranchCode 
				AND F303.WarehouseCode BETWEEN prmWarehouseFrom AND prmWarehouseTo 
				AND F303.TransactionDate<prmDateFrom AND YEAR(F303.TransactionDate)=YEAR(prmDateFrom) 
			GROUP BY WarehouseCode, ItemCode 
			UNION ALL 
			SELECT 'GRN' AS s_TransType, F302.ItemCode, SUM(F302.Quantity) AS Quantity 
				, F301.WarehouseCode AS WarehouseCode 
				, IFNULL(F013.SizeCode, '') AS SizeCode 
				, IFNULL(F013.GenderCode, '') AS GenderCode 
				, IFNULL(F013.Name, '') AS ItemName, IFNULL(F020.Name, '') AS SizeName 
				, IFNULL(F023.Name, '') AS GenderName 
			FROM F302 
				INNER JOIN F301 ON F302.BranchCode=F301.BranchCode AND F302.GRNNo=F301.GRNNo 
				INNER JOIN F013 ON F302.ItemCode=F013.Code 
				LEFT JOIN F020 ON F013.SizeCode=F020.Code 
				LEFT JOIN F023 ON F013.GenderCode=F023.Code 
			WHERE F301.BranchCode=prmBranchCode 
				AND F301.WarehouseCode BETWEEN prmWarehouseFrom AND prmWarehouseTo 
				AND F301.TransactionDate<prmDateFrom AND YEAR(F301.TransactionDate)=YEAR(prmDateFrom) 
			GROUP BY WarehouseCode, ItemCode 
			UNION ALL 
			SELECT 'DOK' AS s_TransType, F616.ItemCode, SUM(F616.Quantity) AS Quantity 
				, F615.WarehouseDestinationCode AS WarehouseCode 
				, IFNULL(F013.SizeCode, '') AS SizeCode 
				, IFNULL(F013.GenderCode, '') AS GenderCode 
				, IFNULL(F013.Name, '') AS ItemName, IFNULL(F020.Name, '') AS SizeName 
				, IFNULL(F023.Name, '') AS GenderName 
			FROM F616 
				INNER JOIN F615 ON F616.BranchCode=F615.BranchCode AND F616.DOKNo=F615.DOKNo 
				INNER JOIN F013 ON F616.ItemCode=F013.Code 
				LEFT JOIN F020 ON F013.SizeCode=F020.Code 
				LEFT JOIN F023 ON F013.GenderCode=F023.Code 
			WHERE F615.BranchCode=prmBranchCode 
				AND F615.WarehouseDestinationCode BETWEEN prmWarehouseFrom AND prmWarehouseTo 
				AND F615.TransactionDate<prmDateFrom AND YEAR(F615.TransactionDate)=YEAR(prmDateFrom) 
			GROUP BY WarehouseCode, ItemCode 
			UNION ALL 
			SELECT 'NRK' AS s_TransType, F620.ItemCode, SUM(F620.Quantity) AS Quantity 
				, F619.WarehouseDestinationCode AS WarehouseCode 
				, IFNULL(F013.SizeCode, '') AS SizeCode 
				, IFNULL(F013.GenderCode, '') AS GenderCode 
				, IFNULL(F013.Name, '') AS ItemName, IFNULL(F020.Name, '') AS SizeName 
				, IFNULL(F023.Name, '') AS GenderName 
			FROM F620 
				INNER JOIN F619 ON F620.BranchCode=F619.BranchCode AND F620.NRKNo=F619.NRKNo 
				INNER JOIN F013 ON F620.ItemCode=F013.Code 
				LEFT JOIN F020 ON F013.SizeCode=F020.Code 
				LEFT JOIN F023 ON F013.GenderCode=F023.Code 
			WHERE F619.BranchCode=prmBranchCode 
				AND F619.WarehouseDestinationCode BETWEEN prmWarehouseFrom AND prmWarehouseTo 
				AND F619.TransactionDate<prmDateFrom AND YEAR(F619.TransactionDate)=YEAR(prmDateFrom) 
			GROUP BY WarehouseCode, ItemCode 
			UNION ALL 
			SELECT 'IOT' AS s_TransType, F306.ItemCode, SUM(-F306.Quantity) AS Quantity 
				, F305.WarehouseCode AS WarehouseCode 
				, IFNULL(F013.SizeCode, '') AS SizeCode 
				, IFNULL(F013.GenderCode, '') AS GenderCode 
				, IFNULL(F013.Name, '') AS ItemName, IFNULL(F020.Name, '') AS SizeName 
				, IFNULL(F023.Name, '') AS GenderName 
			FROM F306 
				INNER JOIN F305 ON F306.BranchCode=F305.BranchCode AND F306.IOTNo=F305.IOTNo 
				INNER JOIN F013 ON F306.ItemCode=F013.Code 
				LEFT JOIN F020 ON F013.SizeCode=F020.Code 
				LEFT JOIN F023 ON F013.GenderCode=F023.Code 
			WHERE F305.BranchCode=prmBranchCode 
				AND F305.WarehouseCode BETWEEN prmWarehouseFrom AND prmWarehouseTo 
				AND F305.TransactionDate<prmDateFrom AND YEAR(F305.TransactionDate)=YEAR(prmDateFrom) 
			GROUP BY WarehouseCode, ItemCode 
			UNION ALL 
			SELECT 'INV' AS s_TransType, F608.ItemCode, SUM(-F608.Quantity) AS Quantity 
				, F607.WarehouseCode AS WarehouseCode 
				, IFNULL(F013.SizeCode, '') AS SizeCode 
				, IFNULL(F013.GenderCode, '') AS GenderCode 
				, IFNULL(F013.Name, '') AS ItemName, IFNULL(F020.Name, '') AS SizeName 
				, IFNULL(F023.Name, '') AS GenderName 
			FROM F608 
				INNER JOIN F607 ON F608.BranchCode=F607.BranchCode AND F608.INVNo=F607.INVNo 
				INNER JOIN F013 ON F608.ItemCode=F013.Code 
				LEFT JOIN F020 ON F013.SizeCode=F020.Code 
				LEFT JOIN F023 ON F013.GenderCode=F023.Code 
			WHERE F607.BranchCode=prmBranchCode 
				AND F607.WarehouseCode BETWEEN prmWarehouseFrom AND prmWarehouseTo 
				AND F607.TransactionDate<prmDateFrom AND YEAR(F607.TransactionDate)=YEAR(prmDateFrom) 
			GROUP BY WarehouseCode, ItemCode 
			UNION ALL 
			SELECT 'DOK' AS s_TransType, F616.ItemCode, SUM(-F616.Quantity) AS Quantity 
				, F615.WarehouseSourceCode AS WarehouseCode 
				, IFNULL(F013.SizeCode, '') AS SizeCode 
				, IFNULL(F013.GenderCode, '') AS GenderCode 
				, IFNULL(F013.Name, '') AS ItemName, IFNULL(F020.Name, '') AS SizeName 
				, IFNULL(F023.Name, '') AS GenderName 
			FROM F616 
				INNER JOIN F615 ON F616.BranchCode=F615.BranchCode AND F616.DOKNo=F615.DOKNo 
				INNER JOIN F013 ON F616.ItemCode=F013.Code 
				LEFT JOIN F020 ON F013.SizeCode=F020.Code 
				LEFT JOIN F023 ON F013.GenderCode=F023.Code 
			WHERE F615.BranchCode=prmBranchCode 
				AND F615.WarehouseSourceCode BETWEEN prmWarehouseFrom AND prmWarehouseTo 
				AND F615.TransactionDate<prmDateFrom AND YEAR(F615.TransactionDate)=YEAR(prmDateFrom) 
			GROUP BY WarehouseCode, ItemCode 
			UNION ALL 
			SELECT 'NRK' AS s_TransType, F620.ItemCOde, SUM(-F620.Quantity) AS Quantity 
				, F619.WarehouseSourceCode AS WarehouseCode 
				, IFNULL(F013.SizeCode, '') AS SizeCode 
				, IFNULL(F013.GenderCode, '') AS GenderCode 
				, IFNULL(F013.Name, '') AS ItemName, IFNULL(F020.Name, '') AS SizeName 
				, IFNULL(F023.Name, '') AS GenderName 
			FROM F620 
				INNER JOIN F619 ON F620.BranchCode=F619.BranchCode AND F620.NRKNo=F619.NRKNo 
				INNER JOIN F013 ON F620.ItemCode=F013.Code 
				LEFT JOIN F020 ON F013.SizeCode=F020.Code 
				LEFT JOIN F023 ON F013.GenderCode=F023.Code 
			WHERE F619.BranchCode=prmBranchCode 
				AND F619.WarehouseSourceCode BETWEEN prmWarehouseFrom AND prmWarehouseTo 
				AND F619.TransactionDate<prmDateFrom AND YEAR(F619.TransactionDate)=YEAR(prmDateFrom) 
			GROUP BY WarehouseCode, ItemCode 
			ORDER BY WarehouseCode, s_TransType 
		) AS Qry1 
	) AS Qry2 
	GROUP BY Qry2.WarehouseCode, Qry2.ItemCode 
) AS Qry3; 
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_IINNoSubInve_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_IINNoSubInve_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_IINNoSubInve_Get`(
IN prmIINNo VARCHAR(50)
)
BEGIN
	SELECT
		F701.BranchCode,
		F001.Name 	AS BranchName,
		F701.IINNo,
		F701.TransactionDate,
		F701.RefNo,
		F701.CurrencyCode,
		-- F006.Name 	AS CurrencyName,
		-- F701.Exchangerate,
		F701.WarehouseCode,
		F110.Name 	AS WarehouseName,
		F701.Description AS HeaderDescription,
		F701.TotalTransactionAmount,
		F702.ItemCode,
		F013.Name 	AS ItemName,
		F013.UnitCode 	AS ItemUnitCode,
		F702.Quantity,
		F702.Price,
		F702.ReasonCode,
		-- F016.Name 	AS ReasonName,
		F702.Description AS DetailDescription
	FROM F701
		INNER JOIN F001 ON F701.BranchCode 		= F001.Code
		-- INNER JOIN F006 ON F701.CurrencyCode 	= F006.Code
		INNER JOIN F110 ON F701.WarehouseCode 	= F110.Code
		INNER JOIN F702 ON F701.IINNo 			= F702.IINNo
		INNER JOIN F013 ON F702.ItemCode 		= F013.Code
		-- INNER JOIN F016 ON F702.ReasonCode 	= F016.Code
WHERE
		F701.IINNo = prmIINNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_IINNo_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_IINNo_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_IINNo_Get`(
IN prmBranchCode VARCHAR(50),
IN prmIINNo VARCHAR(50)
)
BEGIN
	SELECT
		F303.BranchCode,
		F001.Name 	AS BranchName,
		F303.IINNo,
		F303.TransactionDate,
		F303.RefNo,
		F303.CurrencyCode,
		F006.Name 	AS CurrencyName,
		F303.Exchangerate,
		F303.WarehouseCode,
		F110.Name 	AS WarehouseName,
		F303.Description AS HeaderDescription,
		F303.TotalTransactionAmount,
		F304.ItemCode,
		F013.Name 	AS ItemName,
		F013.UnitCode 	AS ItemUnitCode,
		F304.Quantity,
		F304.Price,
		F304.ReasonCode,
		F016.Name 	AS ReasonName,
		F304.Description AS DetailDescription
	FROM F303
		INNER JOIN F001 ON F303.BranchCode 		= F001.Code
		INNER JOIN F006 ON F303.CurrencyCode 	= F006.Code
		INNER JOIN F110 ON F303.WarehouseCode 	= F110.Code
		INNER JOIN F304 ON F303.IINNo 			= F304.IINNo
		INNER JOIN F013 ON F304.ItemCode 		= F013.Code
		INNER JOIN F016 ON F304.ReasonCode 	= F016.Code
WHERE
		F303.IINNo = prmIINNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_INVOICE_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_INVOICE_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_INVOICE_Get`(IN prmINVNo varchar(50))
BEGIN 
SELECT 
   -- F607.BranchCode,
    -- F001.Name AS BranchName,
    -- F001.NPWPNo AS NPWPNo,
    -- F001.Address AS BranchAddress,
    -- F001.CityCode AS BranchCityCode,
   --  BranchCity.Name AS BranchCityName,
	F607.INVNo, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
	F607.FakDate,
	F607.FakNoRef,
	f607.FakRefDate,
	f607.BPno,
	f607.StatusRef,
	f607.DueDate,
	F607.SODNo,
	f607.trade_name,
	F607.VoucherNo, 
	F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
	F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
	-- F103.AccountName AS BankAccountAsName,
	-- F103.AccountNo AS BankAccountNo,
	F607.PaymentTermCode,
   --  F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
	F607.ExchangeRate, 
	F607.CustomerCode,
   -- F106.Name AS CustomerName,
	IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
	IF(ISNULL(F106.CityCode), "", f106.CityCode) AS CustomerCityCode,
	IF(ISNULL(F106.Address), "", f106.Address) AS CustomerAddress,
	IF(ISNULL(F106.NPWPAddress), "", f106.NPWPAddress) AS NPWPAddress,
	IF(ISNULL(F106.NPWP), "", f106.NPWP) AS CustomerNPWP,
	IF(ISNULL(F106.ZipCode), "", f106.ZipCode) AS ZipCode,
	IF(ISNULL(F106.Phone1), "", f106.Phone1) AS Phone1,
	IF(ISNULL(F106.Fax), "", f106.Fax) AS Phone1,
       -- F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F608.itemcode AS WarehouseCode,
     f048.funit_name AS WarehouseName,
    F607.Description, 
    F607.TotalTransaction AS TotalTransactionForeign,
    
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
   -- f607.fbill_ppj,
   --  F607.DiscountPercent,
   --  F607.DiscountAmount AS DiscountAmountForeign,
   --  (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
   -- F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
   --  F607.PPNPercent,
   --  F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
   --  F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	-- F607.MateraiFeeAfterPPN 			      AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
 --   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	-- (F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
 --   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
  --   F607.FinalDiscount AS FinalDiscountForeign,
  --   (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	-- (F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal, 
   -- F607.GrandTotal AS GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) AS GrandTotalLocal,
	-- F608.BranchCode, 
	-- F608.INVNo, 
	F607.DueDate,
        "ITEM" AS TYPE,
	F608.ItemCode AS CODE,
	-- f608.ItemAlias,
	f048.ftrade_name AS ItemAlias,
	 -- F013.Name,
CAST('' AS CHAR(50)) AS ProductCode,
 -- cast('' as char(50)) as ProductName,
	F608.Description,
	f608.fbill_typeCode,
	f608.BIllNo,
	f608.BillDate,
		 -- F013.UnitCode,
	F608.Quantity, 
	f608.BiayaBeban,
	F608.BonusQuantity, 
	F608.Price, 
	F608.PPn,
  F608.fbill_pph,
  F608.fbill_adm,
  F608.fbill_ppj,
f608.Total
  --  f608.MonthPeriod,
FROM f608
  INNER JOIN F607 ON f608.INVNo = F607.INVNo
  LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
  -- INNER JOIN F001 ON F607.BranchCode = F001.Code
  -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  LEFT JOIN F106 ON F607.CustomerCode = F106.Code
  -- INNER JOIN F108 ON F607.SalesmanCode = F108.Code
  -- left JOIN f048 ON F607.WareHouseCode = f048.funit_code
  LEFT JOIN f048 ON F608.itemcode = f048.funit_code
	-- Inner Join F103 On  F607.BankAccountCode = F103.Code
  -- INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
  -- INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
  -- INNER JOIN F025 ON f608.ServiceCode = F025.Code
	-- INNER JOIN F041 ON f608.ServiceAliasCode = F041.Code
WHERE 
    f608.INVNo = prmINVNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_INVOICE_GetPPN` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_INVOICE_GetPPN` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_INVOICE_GetPPN`(IN prmINVNo varchar(50))
BEGIN 
	SELECT 
   -- F607.BranchCode,
    -- F001.Name AS BranchName,
    -- F001.NPWPNo AS NPWPNo,
    -- F001.Address AS BranchAddress,
    -- F001.CityCode AS BranchCityCode,
   --  BranchCity.Name AS BranchCityName,
	F607.INVNo, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
	IF(ISNULL(f607.BPno), "", f607.BPno) AS BPno,
	f607b.FakDate,
	F607.FakNoRef,
	f607.FakRefDate,
	f607.BPno,
	f607.StatusRef,
	f607.DueDate,
	F607.SODNo,
	f607.trade_name,
	F607.VoucherNo, 
	F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
	F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
	-- F103.AccountName AS BankAccountAsName,
	-- F103.AccountNo AS BankAccountNo,
	F607.PaymentTermCode,
   --  F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
	F607.ExchangeRate, 
	F607.CustomerCode,
   -- F106.Name AS CustomerName,
	IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
	IF(ISNULL(F106.CityCode), "", f106.CityCode) AS CustomerCityCode,
	IF(ISNULL(F106.Address), "", f106.Address) AS CustomerAddress,
	IF(ISNULL(F106.NPWPAddress), "", f106.NPWPAddress) AS NPWPAddress,
	IF(ISNULL(F106.NPWP), "", f106.NPWP) AS CustomerNPWP,
	IF(ISNULL(F106.ZipCode), "", f106.ZipCode) AS ZipCode,
	IF(ISNULL(F106.Phone1), "", f106.Phone1) AS Phone1,
	IF(ISNULL(F106.Fax), "", f106.Fax) AS Phone1,
       -- F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F608.itemcode AS WarehouseCode,
     f048.funit_name AS WarehouseName,
    F607.Description, 
    F607.TotalTransaction AS TotalTransactionForeign,
    
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
    -- f607.fbill_ppj,
   --  F607.DiscountPercent,
   --  F607.DiscountAmount AS DiscountAmountForeign,
   --  (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
   -- F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
   --  F607.PPNPercent,
   --  F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
   --  F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	-- F607.MateraiFeeAfterPPN 			      AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
 --   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	-- (F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
 --   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
  --   F607.FinalDiscount AS FinalDiscountForeign,
  --   (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	-- (F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal, 
   -- F607.GrandTotal AS GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) AS GrandTotalLocal,
	-- F608.BranchCode, 
	-- F608.INVNo, 
	F607.DueDate,
        "ITEM" AS TYPE,
	F608.ItemCode AS CODE,
	-- f608.ItemAlias,
	f048.ftrade_name AS ItemAlias,
	 -- F013.Name,
CAST('' AS CHAR(50)) AS ProductCode,
 -- cast('' as char(50)) as ProductName,
	F608.Description,
	f608.fbill_typeCode,
	f608.BIllNo,
	f608.BillDate,
		 -- F013.UnitCode,
	F608.Quantity, 
	f608.BiayaBeban,
	F608.BonusQuantity, 
	F608.Price, 
	F608.PPn,
  F608.fbill_pph,
  F608.fbill_adm,
  F608.fbill_ppj,
f608.Total
  --  f608.MonthPeriod,
FROM f608
  INNER JOIN F607 ON f608.INVNo = F607.INVNo
  LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
  -- INNER JOIN F001 ON F607.BranchCode = F001.Code
  -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  LEFT JOIN F106 ON F607.CustomerCode = F106.Code
  -- INNER JOIN F108 ON F607.SalesmanCode = F108.Code
  -- left JOIN f048 ON F607.WareHouseCode = f048.funit_code
  LEFT JOIN f048 ON F608.itemcode = f048.funit_code
	-- Inner Join F103 On  F607.BankAccountCode = F103.Code
  -- INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
  -- INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
  -- INNER JOIN F025 ON f608.ServiceCode = F025.Code
	-- INNER JOIN F041 ON f608.ServiceAliasCode = F041.Code
WHERE 
    f608.INVNo = prmINVNo AND f608.ppn >0
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_INVOICE_GetPPN_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_INVOICE_GetPPN_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_INVOICE_GetPPN_all`()
BEGIN 
	SELECT 
   -- F607.BranchCode,
    -- F001.Name AS BranchName,
    -- F001.NPWPNo AS NPWPNo,
    -- F001.Address AS BranchAddress,
    -- F001.CityCode AS BranchCityCode,
   --  BranchCity.Name AS BranchCityName,
	F607.INVNo, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
IF(ISNULL(f607.BPno), "", f607.BPno) AS BPno,
IF(ISNULL(f607b.FakDate), NOW(), f607b.FakDate) AS FakDate,
	-- F607.FakDate,
	F607.FakNoRef,
	f607.FakRefDate,
	-- f607.BPno,
	f607.StatusRef,
	f607.DueDate,
	F607.SODNo,
	f607.trade_name,
	F607.VoucherNo, 
	F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
	F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
	-- F103.AccountName AS BankAccountAsName,
	-- F103.AccountNo AS BankAccountNo,
	F607.PaymentTermCode,
   --  F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
	F607.ExchangeRate, 
	F607.CustomerCode,
   -- F106.Name AS CustomerName,
	IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
	IF(ISNULL(F106.CityCode), "", f106.CityCode) AS CustomerCityCode,
	IF(ISNULL(F106.Address), "", f106.Address) AS CustomerAddress,
	IF(ISNULL(F106.NPWPAddress), "", f106.NPWPAddress) AS NPWPAddress,
	IF(ISNULL(F106.NPWP), "", f106.NPWP) AS CustomerNPWP,
	IF(ISNULL(F106.ZipCode), "", f106.ZipCode) AS ZipCode,
	IF(ISNULL(F106.Phone1), "", f106.Phone1) AS Phone1,
	IF(ISNULL(F106.Fax), "", f106.Fax) AS Phone1,
       -- F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F608.itemcode AS WarehouseCode,
     f048.funit_name AS WarehouseName,
    F607.Description as DescriptionHeader, 
    F607.TotalTransaction AS TotalTransactionForeign,
    
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
   -- f607.fbill_ppj,
   --  F607.DiscountPercent,
   --  F607.DiscountAmount AS DiscountAmountForeign,
   --  (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
   -- F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
   --  F607.PPNPercent,
   --  F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
   --  F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	-- F607.MateraiFeeAfterPPN 			      AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
 --   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	-- (F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
 --   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
  --   F607.FinalDiscount AS FinalDiscountForeign,
  --   (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	-- (F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal, 
   -- F607.GrandTotal AS GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) AS GrandTotalLocal,
	-- F608.BranchCode, 
	-- F608.INVNo, 
	F607.DueDate,
        "ITEM" AS TYPE,
	F608.ItemCode AS CODE,
	-- f608.ItemAlias,
	f048.ftrade_name AS ItemAlias,
	 -- F013.Name,
CAST('' AS CHAR(50)) AS ProductCode,
 -- cast('' as char(50)) as ProductName,
	F608.Description,
	f608.fbill_typeCode,
	f608.BIllNo,
	f608.BillDate,
		 -- F013.UnitCode,
	F608.Quantity, 
	f608.BiayaBeban,
	F608.BonusQuantity, 
	F608.Price, 
	F608.PPn,
  F608.fbill_pph,
  F608.fbill_adm,
  F608.fbill_ppj,
f608.Total,
'' AS TerbilangText
  --  f608.MonthPeriod,
FROM f608
  INNER JOIN F607 ON f608.INVNo = F607.INVNo
  LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
  -- INNER JOIN F001 ON F607.BranchCode = F001.Code
  -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  LEFT JOIN F106 ON F607.CustomerCode = F106.Code
  -- INNER JOIN F108 ON F607.SalesmanCode = F108.Code
  -- left JOIN f048 ON F607.WareHouseCode = f048.funit_code
  LEFT JOIN f048 ON F608.itemcode = f048.funit_code
	-- Inner Join F103 On  F607.BankAccountCode = F103.Code
  -- INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
  -- INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
  -- INNER JOIN F025 ON f608.ServiceCode = F025.Code
	-- INNER JOIN F041 ON f608.ServiceAliasCode = F041.Code
WHERE 
     f608.ppn >0
ORDER BY f608.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_INVOICE_Get_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_INVOICE_Get_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_INVOICE_Get_all`()
BEGIN 
	SELECT 
   -- F607.BranchCode,
    -- F001.Name AS BranchName,
    -- F001.NPWPNo AS NPWPNo,
    -- F001.Address AS BranchAddress,
    -- F001.CityCode AS BranchCityCode,
   --  BranchCity.Name AS BranchCityName,
	F607.INVNo, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
	F607.FakDate,
	F607.FakNoRef,
	f607.FakRefDate,
	f607.BPno,
	f607.StatusRef,
	f607.DueDate,
	F607.SODNo,
	f607.trade_name,
	F607.VoucherNo, 
	F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
	F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
	-- F103.AccountName AS BankAccountAsName,
	-- F103.AccountNo AS BankAccountNo,
	F607.PaymentTermCode,
   --  F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
	F607.ExchangeRate, 
	F607.CustomerCode,
   -- F106.Name AS CustomerName,
	IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
	IF(ISNULL(F106.CityCode), "", f106.CityCode) AS CustomerCityCode,
	IF(ISNULL(F106.Address), "", f106.Address) AS CustomerAddress,
	IF(ISNULL(F106.NPWPAddress), "", f106.NPWPAddress) AS NPWPAddress,
	IF(ISNULL(F106.NPWP), "", f106.NPWP) AS CustomerNPWP,
	IF(ISNULL(F106.ZipCode), "", f106.ZipCode) AS ZipCode,
	IF(ISNULL(F106.Phone1), "", f106.Phone1) AS Phone1,
	IF(ISNULL(F106.Fax), "", f106.Fax) AS Phone1,
       -- F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F608.itemcode AS WarehouseCode,
     f048.funit_name AS WarehouseName,
    F607.Description as DescriptionHeader, 
    F607.TotalTransaction AS TotalTransactionForeign,
    
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
   -- f607.fbill_ppj,
   --  F607.DiscountPercent,
   --  F607.DiscountAmount AS DiscountAmountForeign,
   --  (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
   -- F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
   --  F607.PPNPercent,
   --  F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
   --  F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	-- F607.MateraiFeeAfterPPN 			      AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
 --   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	-- (F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
 --   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
  --   F607.FinalDiscount AS FinalDiscountForeign,
  --   (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	-- (F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal, 
   -- F607.GrandTotal AS GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) AS GrandTotalLocal,
    f607.DeductionAfterPPn,
	-- F608.BranchCode, 
	-- F608.INVNo, 
	F607.DueDate,
        "ITEM" AS TYPE,
	F608.ItemCode AS CODE,
	-- f608.ItemAlias,
	f048.ftrade_name AS ItemAlias,
	 -- F013.Name,
CAST('' AS CHAR(50)) AS ProductCode,
 -- cast('' as char(50)) as ProductName,
	F608.Description,
	f608.fbill_typeCode,
	f608.BIllNo,
	f608.BillDate,
		 -- F013.UnitCode,
	F608.Quantity, 
	f608.BiayaBeban,
	F608.BonusQuantity, 
	F608.Price, 
	F608.PPn,
  F608.fbill_pph,
  F608.fbill_adm,
  F608.fbill_ppj,
f608.Total,
'' AS TerbilangText
  --  f608.MonthPeriod,
FROM f608
  INNER JOIN F607 ON f608.INVNo = F607.INVNo
  LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
  -- INNER JOIN F001 ON F607.BranchCode = F001.Code
  -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  LEFT JOIN F106 ON F607.CustomerCode = F106.Code
  -- INNER JOIN F108 ON F607.SalesmanCode = F108.Code
  -- left JOIN f048 ON F607.WareHouseCode = f048.funit_code
  LEFT JOIN f048 ON F608.itemcode = f048.funit_code
	-- Inner Join F103 On  F607.BankAccountCode = F103.Code
  -- INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
  -- INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
  -- INNER JOIN F025 ON f608.ServiceCode = F025.Code
	-- INNER JOIN F041 ON f608.ServiceAliasCode = F041.Code
	--  f608.INVNo = prmINVNo
	-- GROUP BY invno
	ORDER BY f608.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_INVOICE_Get_all_dev` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_INVOICE_Get_all_dev` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_INVOICE_Get_all_dev`()
BEGIN 
	SELECT 
   -- F607.BranchCode,
    -- F001.Name AS BranchName,
    -- F001.NPWPNo AS NPWPNo,
    -- F001.Address AS BranchAddress,
    -- F001.CityCode AS BranchCityCode,
   --  BranchCity.Name AS BranchCityName,
	F607.INVNo, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
	F607.FakDate,
	F607.FakNoRef,
	f607.FakRefDate,
	f607.BPno,
	f607.StatusRef,
	f607.DueDate,
	F607.SODNo,
	f607.trade_name,
	F607.VoucherNo, 
	F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
	F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
	-- F103.AccountName AS BankAccountAsName,
	-- F103.AccountNo AS BankAccountNo,
	F607.PaymentTermCode,
   --  F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
	F607.ExchangeRate, 
	F607.CustomerCode,
   -- F106.Name AS CustomerName,
	IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
	IF(ISNULL(F106.CityCode), "", f106.CityCode) AS CustomerCityCode,
	IF(ISNULL(F106.Address), "", f106.Address) AS CustomerAddress,
	IF(ISNULL(F106.NPWPAddress), "", f106.NPWPAddress) AS NPWPAddress,
	IF(ISNULL(F106.NPWP), "", f106.NPWP) AS CustomerNPWP,
	IF(ISNULL(F106.ZipCode), "", f106.ZipCode) AS ZipCode,
	IF(ISNULL(F106.Phone1), "", f106.Phone1) AS Phone1,
	IF(ISNULL(F106.Fax), "", f106.Fax) AS Phone1,
       -- F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F608.itemcode AS WarehouseCode,
     f048.funit_name AS WarehouseName,
    F607.Description as DescriptionHeader, 
    F607.TotalTransaction AS TotalTransactionForeign,
    
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
   -- f607.fbill_ppj,
   --  F607.DiscountPercent,
   --  F607.DiscountAmount AS DiscountAmountForeign,
   --  (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
   -- F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
   --  F607.PPNPercent,
   --  F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
   --  F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	-- F607.MateraiFeeAfterPPN 			      AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
 --   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	-- (F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
 --   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
  --   F607.FinalDiscount AS FinalDiscountForeign,
  --   (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	-- (F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal, 
   -- F607.GrandTotal AS GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) AS GrandTotalLocal,
F607.DeductionAfterPPn,
	-- F608.BranchCode, 
	-- F608.INVNo, 
	F607.DueDate,
        "ITEM" AS TYPE,
	F608.ItemCode AS CODE,
	-- f608.ItemAlias,
	f048.ftrade_name AS ItemAlias,
	 -- F013.Name,
CAST('' AS CHAR(50)) AS ProductCode,
 -- cast('' as char(50)) as ProductName,
	F608.Description,
	f608.fbill_typeCode,
	f608.BIllNo,
	f608.BillDate,
		 -- F013.UnitCode,
	F608.Quantity, 
	f608.BiayaBeban,
	F608.BonusQuantity, 
	F608.Price, 
	F608.PPn,
  F608.fbill_pph,
  F608.fbill_adm,
  F608.fbill_ppj,
f608.Total,
'' AS TerbilangText
  --  f608.MonthPeriod,
FROM f608
  INNER JOIN F607 ON f608.INVNo = F607.INVNo
  LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
  -- INNER JOIN F001 ON F607.BranchCode = F001.Code
  -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  LEFT JOIN F106 ON F607.CustomerCode = F106.Code
  -- INNER JOIN F108 ON F607.SalesmanCode = F108.Code
  -- left JOIN f048 ON F607.WareHouseCode = f048.funit_code
  LEFT JOIN f048 ON F608.itemcode = f048.funit_code
	-- Inner Join F103 On  F607.BankAccountCode = F103.Code
  -- INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
  -- INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
  -- INNER JOIN F025 ON f608.ServiceCode = F025.Code
	-- INNER JOIN F041 ON f608.ServiceAliasCode = F041.Code
	--  f608.INVNo = prmINVNo
	WHERE LEFT(F607.INVno,7)='INV/BSP'
	ORDER BY f608.INVNo DESC
	
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_INVOICE_Get_ForJurnal` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_INVOICE_Get_ForJurnal` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_INVOICE_Get_ForJurnal`(
in prmINVNo varchar(50))
BEGIN 
	SELECT 
   -- F607.BranchCode,
    -- F001.Name AS BranchName,
    -- F001.NPWPNo AS NPWPNo,
    -- F001.Address AS BranchAddress,
    -- F001.CityCode AS BranchCityCode,
   --  BranchCity.Name AS BranchCityName,
	F607.INVNo, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
	F607.FakDate,
	F607.FakNoRef,
	f607.FakRefDate,
	f607.BPno,
	f607.StatusRef,
	f607.DueDate,
	F607.SODNo,
	f607.trade_name,
	F607.VoucherNo, 
	F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
	F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
	-- F103.AccountName AS BankAccountAsName,
	-- F103.AccountNo AS BankAccountNo,
	F607.PaymentTermCode,
   --  F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
	F607.ExchangeRate, 
	F607.CustomerCode,
   -- F106.Name AS CustomerName,
	IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
	IF(ISNULL(F106.CityCode), "", f106.CityCode) AS CustomerCityCode,
	IF(ISNULL(F106.Address), "", f106.Address) AS CustomerAddress,
	IF(ISNULL(F106.NPWPAddress), "", f106.NPWPAddress) AS NPWPAddress,
	IF(ISNULL(F106.NPWP), "", f106.NPWP) AS CustomerNPWP,
	IF(ISNULL(F106.ZipCode), "", f106.ZipCode) AS ZipCode,
	IF(ISNULL(F106.Phone1), "", f106.Phone1) AS Phone1,
	IF(ISNULL(F106.Fax), "", f106.Fax) AS Phone1,
       -- F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F608.itemcode AS WarehouseCode,
     f048.funit_name AS WarehouseName,
f048.AccountCodeAirC,
f048.AccountCodeAirD,
f048.AccountCodeC,
f048.AccountCodeD,
f048.AccountCodeListrikC,
f048.AccountCodeListrikD,
    F607.Description as DescriptionHeader, 
    F607.TotalTransaction AS TotalTransactionForeign,
    
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
   -- f607.fbill_ppj,
   --  F607.DiscountPercent,
   --  F607.DiscountAmount AS DiscountAmountForeign,
   --  (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
   -- F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
   --  F607.PPNPercent,
   --  F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
   --  F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	-- F607.MateraiFeeAfterPPN 			      AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
 --   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	-- (F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
 --   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
  --   F607.FinalDiscount AS FinalDiscountForeign,
  --   (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	-- (F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal, 
   -- F607.GrandTotal AS GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) AS GrandTotalLocal,
	-- F608.BranchCode, 
	-- F608.INVNo, 
	F607.DueDate,
        "ITEM" AS TYPE,
	F608.ItemCode AS CODE,
	-- f608.ItemAlias,
	f048.ftrade_name AS ItemAlias,
	 -- F013.Name,
CAST('' AS CHAR(50)) AS ProductCode,
 -- cast('' as char(50)) as ProductName,
	F608.Description,
	f608.fbill_typeCode,
	f608.BIllNo,
	f608.BillDate,
		 -- F013.UnitCode,
	F608.Quantity, 
	f608.BiayaBeban,
	F608.BonusQuantity, 
	F608.Price, 
	F608.PPn,
  F608.fbill_pph,
  F608.fbill_adm,
  F608.fbill_ppj,
f608.Total,
'' AS TerbilangText
  --  f608.MonthPeriod,
FROM f608
  INNER JOIN F607 ON f608.INVNo = F607.INVNo
  LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
  -- INNER JOIN F001 ON F607.BranchCode = F001.Code
  -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  LEFT JOIN F106 ON F607.CustomerCode = F106.Code
  -- INNER JOIN F108 ON F607.SalesmanCode = F108.Code
  -- left JOIN f048 ON F607.WareHouseCode = f048.funit_code
  LEFT JOIN f048 ON F608.itemcode = f048.funit_code
  WHERE f608.INVNo=prmINVNo
	-- Inner Join F103 On  F607.BankAccountCode = F103.Code
  -- INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
  -- INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
  -- INNER JOIN F025 ON f608.ServiceCode = F025.Code
	-- INNER JOIN F041 ON f608.ServiceAliasCode = F041.Code
	--  f608.INVNo = prmINVNo
	ORDER BY f608.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_INVOICE_Get_Header` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_INVOICE_Get_Header` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_INVOICE_Get_Header`()
BEGIN 
	SELECT 
   -- F607.BranchCode,
    -- F001.Name AS BranchName,
    -- F001.NPWPNo AS NPWPNo,
    -- F001.Address AS BranchAddress,
    -- F001.CityCode AS BranchCityCode,
   --  BranchCity.Name AS BranchCityName,
	F607.INVNo, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
	F607.FakDate,
	F607.FakNoRef,
	f607.FakRefDate,
	f607.BPno,
	f607.StatusRef,
	f607.DueDate,
	F607.SODNo,
	f607.trade_name,
	F607.VoucherNo, 
	F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
	F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
	-- F103.AccountName AS BankAccountAsName,
	-- F103.AccountNo AS BankAccountNo,
	F607.PaymentTermCode,
   --  F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
	F607.ExchangeRate, 
	F607.CustomerCode,
   -- F106.Name AS CustomerName,
	IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
	IF(ISNULL(F106.CityCode), "", f106.CityCode) AS CustomerCityCode,
	IF(ISNULL(F106.Address), "", f106.Address) AS CustomerAddress,
	IF(ISNULL(F106.NPWPAddress), "", f106.NPWPAddress) AS NPWPAddress,
	IF(ISNULL(F106.NPWP), "", f106.NPWP) AS CustomerNPWP,
	IF(ISNULL(F106.ZipCode), "", f106.ZipCode) AS ZipCode,
	IF(ISNULL(F106.Phone1), "", f106.Phone1) AS Phone1,
	IF(ISNULL(F106.Fax), "", f106.Fax) AS Phone1,
       -- F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F608.itemcode AS WarehouseCode,
     f048.funit_name AS WarehouseName,
    F607.Description as DescriptionHeader, 
    F607.TotalTransaction AS TotalTransactionForeign,
    
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
   -- f607.fbill_ppj,
   --  F607.DiscountPercent,
   --  F607.DiscountAmount AS DiscountAmountForeign,
   --  (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
   -- F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
   --  F607.PPNPercent,
   --  F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
   --  F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	-- F607.MateraiFeeAfterPPN 			      AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
 --   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	-- (F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
 --   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
  --   F607.FinalDiscount AS FinalDiscountForeign,
  --   (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	-- (F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal, 
   -- F607.GrandTotal AS GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) AS GrandTotalLocal,
    f607.DeductionAfterPPn,
	-- F608.BranchCode, 
	-- F608.INVNo, 
	F607.DueDate,
        "ITEM" AS TYPE,
	F608.ItemCode AS CODE,
	-- f608.ItemAlias,
	f048.ftrade_name AS ItemAlias,
	 -- F013.Name,
CAST('' AS CHAR(50)) AS ProductCode,
 -- cast('' as char(50)) as ProductName,
	F608.Description,
	f608.fbill_typeCode,
	f608.BIllNo,
	f608.BillDate,
		 -- F013.UnitCode,
	F608.Quantity, 
	f608.BiayaBeban,
	F608.BonusQuantity, 
	F608.Price, 
	F608.PPn,
  F608.fbill_pph,
  F608.fbill_adm,
  F608.fbill_ppj,
f608.Total,
'' AS TerbilangText
  --  f608.MonthPeriod,
FROM f608
  INNER JOIN F607 ON f608.INVNo = F607.INVNo
  LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
  -- INNER JOIN F001 ON F607.BranchCode = F001.Code
  -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  LEFT JOIN F106 ON F607.CustomerCode = F106.Code
  -- INNER JOIN F108 ON F607.SalesmanCode = F108.Code
  -- left JOIN f048 ON F607.WareHouseCode = f048.funit_code
  LEFT JOIN f048 ON F608.itemcode = f048.funit_code
	-- Inner Join F103 On  F607.BankAccountCode = F103.Code
  -- INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
  -- INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
  -- INNER JOIN F025 ON f608.ServiceCode = F025.Code
	-- INNER JOIN F041 ON f608.ServiceAliasCode = F041.Code
	--  f608.INVNo = prmINVNo
	GROUP BY invno
	ORDER BY f608.INVNo DESC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_INV_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_INV_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_INV_Get`(IN prmINVNo varchar(50))
BEGIN 
	SELECT 
   -- F607.BranchCode,
    -- F001.Name AS BranchName,
    -- F001.NPWPNo AS NPWPNo,
    -- F001.Address AS BranchAddress,
    -- F001.CityCode AS BranchCityCode,
   --  BranchCity.Name AS BranchCityName,
	F607.INVNo, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
	F607.FakDate,
	F607.FakNoRef,
	f607.FakRefDate,
	f607.StatusRef,
	f607.DueDate,
	F607.SODNo,
	f607.trade_name,
	F607.VoucherNo, 
	F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
	F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
	-- F103.AccountName AS BankAccountAsName,
	-- F103.AccountNo AS BankAccountNo,
	F607.PaymentTermCode,
   --  F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
	F607.ExchangeRate, 
	F607.CustomerCode,
   -- F106.Name AS CustomerName,
	IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
	IF(ISNULL(F106.CityCode), "", f106.CityCode) AS CustomerCityCode,
	IF(ISNULL(F106.Address), "", f106.Address) AS CustomerAddress,
	IF(ISNULL(F106.NPWPAddress), "", f106.NPWPAddress) AS NPWPAddress,
	IF(ISNULL(F106.NPWP), "", f106.NPWP) AS CustomerNPWP,
	IF(ISNULL(F106.ZipCode), "", f106.ZipCode) AS ZipCode,
	IF(ISNULL(F106.Phone1), "", f106.Phone1) AS Phone1,
	IF(ISNULL(F106.Fax), "", f106.Fax) AS Phone1,
       -- F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F607.WarehouseCode,
     f048.funit_name AS WarehouseName,
    F607.Description, 
    F607.TotalTransaction AS TotalTransactionForeign,
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
    F607.DiscountPercent,
    F607.DiscountAmount AS DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
    F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
    F607.PPNPercent,
    F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
    F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	F607.MateraiFeeAfterPPN 			      AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
   F607.PackingFeeAfterPPN 			      AS PackingFeeAfterPPNForeign, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
    F607.FinalDiscount AS FinalDiscountForeign,
    (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	F607.DeductionAfterPPn 			      AS DeductionAfterPPnForeign, 
	(F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal, 
    F607.GrandTotal AS GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) AS GrandTotalLocal,
	
    "Service" AS ItemType,
   -- f608.ServiceCode AS ItemCode,
    f608.ItemAlias,
	-- f608.ServiceAliasCode AS ServiceAliasCode,
	-- F041.Name AS ServiceAliasName,
  --  F025.Name AS ItemName,
    "" AS ItemUnitCode,
    f608.Description AS DescriptionDetail,
    f608.Quantity,
    0 AS BonusQuantity,
     f608.Price,
	f608.fbill_adm,
	f608.PPn,
	f608.BiayaBeban,
	f608.fbill_ppj,
	f608.Total,
	f608.fbill_pph,
    f608.DiscountPercent1,
    f608.DiscountAmount1,
    f608.FinalDiscount1,
    f608.DiscountPercent2,
    f608.DiscountAmount2,
    f608.DiscountPercent3,
    f608.DiscountAmount3
  --  f608.MonthPeriod,
FROM f608
  INNER JOIN F607 ON f608.INVNo = F607.INVNo
  LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
  -- INNER JOIN F001 ON F607.BranchCode = F001.Code
  -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  LEFT JOIN F106 ON F607.CustomerCode = F106.Code
  -- INNER JOIN F108 ON F607.SalesmanCode = F108.Code
  INNER JOIN f048 ON F607.WareHouseCode = f048.funit_code
	-- Inner Join F103 On  F607.BankAccountCode = F103.Code
  -- INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
  -- INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
  -- INNER JOIN F025 ON f608.ServiceCode = F025.Code
	-- INNER JOIN F041 ON f608.ServiceAliasCode = F041.Code
WHERE 
    f608.INVNo = prmINVNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_INV_GlobalInvoiceDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_INV_GlobalInvoiceDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_INV_GlobalInvoiceDetail`(
IN prmBranchCode VARCHAR(50), IN prmFirstDate DATE, IN prmLastDate DATE
)
BEGIN 
	SELECT 
    F607.BranchCode,
    -- F001.Name AS BranchName,
    -- F001.NPWPNo AS NPWPNo,
    -- F001.Address AS BranchAddress,
    -- F001.CityCode AS BranchCityCode,
   --  BranchCity.Name AS BranchCityName,
	F607.INVNo, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
	F607.FakDate,
	F607.FakNoRef,
	f607.FakRefDate,
	f607.StatusRef,
	f607.DueDate,
	F607.SODNo,
	f607.trade_name,
	F607.VoucherNo, 
	F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
	F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
	-- F103.AccountName AS BankAccountAsName,
	-- F103.AccountNo AS BankAccountNo,
	F607.PaymentTermCode,
   --  F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
	F607.ExchangeRate, 
	F607.CustomerCode,
   -- F106.Name AS CustomerName,
	IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
	IF(ISNULL(F106.CityCode), "", f106.CityCode) AS CustomerCityCode,
	IF(ISNULL(F106.Address), "", f106.Address) AS CustomerAddress,
	IF(ISNULL(F106.NPWPAddress), "", f106.NPWPAddress) AS NPWPAddress,
	IF(ISNULL(F106.NPWP), "", f106.NPWP) AS CustomerNPWP,
	IF(ISNULL(F106.ZipCode), "", f106.ZipCode) AS ZipCode,
	IF(ISNULL(F106.Phone1), "", f106.Phone1) AS Phone1,
	IF(ISNULL(F106.Fax), "", f106.Fax) AS Phone1,
       -- F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F607.WarehouseCode,
     f048.funit_name AS WarehouseName,
    F607.Description, 
    F607.TotalTransaction AS TotalTransactionForeign,
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
    F607.DiscountPercent,
    F607.DiscountAmount AS DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
    F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
    F607.PPNPercent,
    F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
    F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	F607.MateraiFeeAfterPPN 			      AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
   F607.PackingFeeAfterPPN 			      AS PackingFeeAfterPPNForeign, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
    F607.FinalDiscount AS FinalDiscountForeign,
    (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	F607.DeductionAfterPPn 			      AS DeductionAfterPPnForeign, 
	(F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal, 
    F607.GrandTotal AS GrandTotalForeign,
    (F607.GrandTotal * F607.ExchangeRate) AS GrandTotalLocal,
	
    "Service" AS ItemType,
   -- f608.ServiceCode AS ItemCode,
    f608.ItemAlias,
	-- f608.ServiceAliasCode AS ServiceAliasCode,
	-- F041.Name AS ServiceAliasName,
  --  F025.Name AS ItemName,
    "" AS ItemUnitCode,
    f608.Description AS DescriptionDetail,
    f608.Quantity,
    0 AS BonusQuantity,
     f608.Price,
	f608.fbill_adm,
	f608.PPn,
	f608.BiayaBeban,
	f608.fbill_ppj,
	f608.Total,
	f608.fbill_pph,
    f608.DiscountPercent1,
    f608.DiscountAmount1,
    f608.FinalDiscount1,
    f608.DiscountPercent2,
    f608.DiscountAmount2,
    f608.DiscountPercent3,
    f608.DiscountAmount3
  --  f608.MonthPeriod,
FROM f608
  INNER JOIN F607 ON f608.INVNo = F607.INVNo
  LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
  -- INNER JOIN F001 ON F607.BranchCode = F001.Code
  -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
  -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
  LEFT JOIN F106 ON F607.CustomerCode = F106.Code
  -- INNER JOIN F108 ON F607.SalesmanCode = F108.Code
  INNER JOIN f048 ON F607.WareHouseCode = f048.funit_code
	-- Inner Join F103 On  F607.BankAccountCode = F103.Code
  -- INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
  -- INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
  -- INNER JOIN F025 ON f608.ServiceCode = F025.Code
	-- INNER JOIN F041 ON f608.ServiceAliasCode = F041.Code
WHERE 
    		F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate;

END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_IOTNoSubINV_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_IOTNoSubINV_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_IOTNoSubINV_get`(IN prmBranchCode VARCHAR(50),
IN prmIOTNo VARCHAR(50)
)
BEGIN
	SELECT
		F703.BranchCode,
		F001.Name 	AS BranchName,
		F703.IOTNo,
		F703.TransactionDate,
		F703.RefNo,
		F703.WarehouseCode,
		F110.Name 	AS WarehouseName,
		F703.Description AS HeaderDescription,
		F703.CurrencyCode,
		F006.Name 	AS CurrencyName,
		F704.ItemCode,
		F013.Name 	AS ItemName,
		F013.UnitCode AS ItemUnitCode,
		F704.ReasonCode,
		F016.Name 	As ReasonName,
		F704.Description AS DetailDescription,
		F802.Quantity,
		F802.COGSIDR
	FROM F703
		 INNER JOIN F001 ON F703.BranchCode 	= F001.Code
		 INNER JOIN F006 ON F703.CurrencyCode 	= F006.Code
		 INNER JOIN F110 ON F703.WarehouseCode 	= F110.Code
		 INNER JOIN F704 ON F703.IOTNo 		= F704.IOTNo
		 INNER JOIN F802 ON F703.BranchCode 	= F802.BranchCode	  	AND 
					      F703.IOTNo  		= F802.IOTNo 		  	AND  
					      F703.WarehouseCode 	= F802.WarehouseCode 	AND 
					      F704.ItemCode 		= F802.ItemCode
		 INNER JOIN F013 ON F704.ItemCode 		= F013.Code
		 INNER JOIN F016 ON F704.ReasonCode 	= F016.Code
	WHERE
		 F703.IOTNo = prmIOTNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_IOTNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_IOTNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_IOTNo_get`(IN prmBranchCode VARCHAR(50),
IN prmIOTNo VARCHAR(50)
)
BEGIN
	SELECT
		F305.BranchCode,
		F001.Name 	AS BranchName,
		F305.IOTNo,
		F305.TransactionDate,
		F305.RefNo,
		F305.WarehouseCode,
		F110.Name 	AS WarehouseName,
		F305.Description AS HeaderDescription,
		F305.CurrencyCode,
		F006.Name 	AS CurrencyName,
		F306.ItemCode,
		F013.Name 	AS ItemName,
		F013.UnitCode AS ItemUnitCode,
		F306.ReasonCode,
		F016.Name 	As ReasonName,
		F306.Description AS DetailDescription,
		F902.Quantity,
		F902.COGSIDR
	FROM F305
		 INNER JOIN F001 ON F305.BranchCode 	= F001.Code
		 INNER JOIN F006 ON F305.CurrencyCode 	= F006.Code
		 INNER JOIN F110 ON F305.WarehouseCode 	= F110.Code
		 INNER JOIN F306 ON F305.IOTNo 		= F306.IOTNo
		 INNER JOIN F902 ON F305.BranchCode 	= F902.BranchCode	  	AND 
					      F305.IOTNo  		= F902.IOTNo 		  	AND  
					      F305.WarehouseCode 	= F902.WarehouseCode 	AND 
					      F306.ItemCode 		= F902.ItemCode
		 INNER JOIN F013 ON F306.ItemCode 		= F013.Code
		 INNER JOIN F016 ON F306.ReasonCode 	= F016.Code
	WHERE
		 F305.IOTNo = prmIOTNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_IOTNo_get_withoutprice` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_IOTNo_get_withoutprice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_IOTNo_get_withoutprice`(
	prmBranchCode VARCHAR(50),
	prmIOTNo VARCHAR(50)
)
BEGIN
	SELECT
		F305.BranchCode,
		F001.Name AS BranchName,
		F305.IOTNo,
		F305.TransactionDate,
		F305.RefNo,
		F305.WarehouseCode,
		F110.Name AS WarehouseName,
		F305.Description AS HeaderDescription,
		F000.CurrencyCode,
		F306.ItemCode,
		F013.Name AS ItemName,
		F306.Quantity,
		F306.ReasonCode,
		F016.Name As ReasonName,
		F306.Description AS DetailDescription
	FROM
	F305
		INNER JOIN F306 ON F305.BranchCode = F306.BranchCode AND F305.IOTNo = F306.IOTNo
		INNER JOIN F000 ON F305.BranchCode = F000.BranchCode
		INNER JOIN F013 ON F306.ItemCode = F013.Code
		INNER JOIN F016 ON F306.ReasonCode = F016.Code
		INNER JOIN F110 ON F305.WarehouseCode = F110.Code
	WHERE
		F305.BranchCode = prmBranchCode AND
		F305.IOTNo = prmIOTNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_IOTNo_get_withprice` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_IOTNo_get_withprice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_IOTNo_get_withprice`(
	prmBranchCode VARCHAR(50),
	prmIOTNo VARCHAR(50)
)
BEGIN
	SELECT
		F305.BranchCode,
		F305.IOTNo,
		F305.TransactionDate,
		F305.RefNo,
		F305.WarehouseCode,
		F110.Name AS WarehouseName,
		F305.Description AS HeaderDescription,
		F000.CurrencyCode,
		F306.ItemCode,
		F013.Name AS ItemName,
		F306.ReasonCode,
		F016.Name As ReasonName,
		F306.Description AS DetailDescription,
		F902.Quantity,
		F902.COGSIDR
	FROM
	F305
		INNER JOIN F306 ON F305.BranchCode = F306.BranchCode AND F305.IOTNo = F306.IOTNo
		INNER JOIN F902 ON F305.BranchCode = F902.BranchCode AND F305.WarehouseCode = F902.WarehouseCode AND F306.ItemCode = F902.ItemCode
		INNER JOIN F000 ON F305.BranchCode = F000.BranchCode
		INNER JOIN F013 ON F306.ItemCode = F013.Code
		INNER JOIN F016 ON F306.ReasonCode = F016.Code
		INNER JOIN F110 ON F305.WarehouseCode = F110.Code
	WHERE
		F305.BranchCode = prmBranchCode AND
		F305.IOTNo = prmIOTNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_item_checked` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_item_checked` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_item_checked`(In prmCode Varchar(50))
BEGIN
	Select 
	Keterangan,
	NoDoc,
	ItemCode,
	ItemName
	From
	(Select
	"Purchase Order" As Keterangan,
	F202.PODNo As NoDoc,
	F202.ItemCode,
	F013.Name As ItemName
	From F202
	Inner Join F013 On F202.ItemCode = F013.Code
	Union All
	Select
	"Purchase Order Return" As Keterangan,
	F204.PRTNo As NoDoc,
	F204.ItemCode,
	F013.Name As ItemName
	From F204
	Inner Join F013 On F204.ItemCode = F013.Code
	Union All
	Select
	"Goods Received Notes" As Keterangan,
	F302.GRNNo As NoDoc,
	F302.ItemCode,
	F013.Name As ItemName
	From F302
	Inner Join F013 On F302.ItemCode = F013.Code
	Union All
	Select
	"Inventory In" As Keterangan,
	F304.IINNo  As NoDoc,
	F304.ItemCode,
	F013.Name As ItemName
	From F304
	Inner Join F013 On F304.ItemCode = F013.Code
	Union All
	Select
	"Inventory Out" As Keterangan,
	F306.IOTNo As NoDoc,
	F306.ItemCode,
	F013.Name As ItemName
	From F306
	Inner Join F013 On F306.ItemCode = F013.Code
	Union All
	Select
	"Assembly" As Keterangan,
	F308.ASMNo As NoDoc,
	F308.ItemCode,
	F013.Name As ItemName
	From F308
	Inner Join F013 On F308.ItemCode = F013.Code
	Union All
	Select
	"Warehouse Mutation" As Keterangan,
	F310.WHMNo As NoDoc,
	F310.ItemCode,
	F013.Name As ItemName
	From F310
	Inner Join F013 On F310.ItemCode = F013.Code
	Union All
	Select
	"Opname" As Keterangan,
	F312.OPNNo As NoDoc,
	F312.ItemCode,
	F013.Name As ItemName
	From F312
	Inner Join F013 On F312.ItemCode = F013.Name
	Union All
	Select
	"Disasembly" AS Keterangan,
	F314.DSMNo As NoDoc,
	F314.ItemCode,
	F013.Name As ItemName
	From F314
	Inner Join F013 On F314.ItemCode = F013.Name
	Union All
	Select
	"Sales Order" As Keterangan,
	F604.SODNo As NoDoc,
	F604.ItemCode,
	F013.Name As ItemName
	From F604
	Inner Join F013 On F604.ItemCode = F013.Code
	Union All
	Select
	"Delevery Order" As Keterangan,
	F606.DODNo As NoDoc,
	F606.ItemCode,
	F013.Code As ItemName
	From F606
	Inner Join F013 On F606.ItemCode = F013.Code
	Union All
	Select
	"Invoice" As Keterangan,
	F608.INVNo As NoDoc,
	F608.ItemCode,
	F013.Name As ItemName
	From F608
	Inner Join F013 On F608.ItemCode = F013.Code
	Union All
	Select
	"Sales Return" As Keterangan,
	F614.SRTNo As NoDoc,
	F614.ItemCode,
	F013.Name As ItemName
	From F614
	Inner Join F013 On F614.ItemCode = F013.Code)
	As qryItem
	Where
	qryItem.ItemCode = prmCode
	Order By ItemCode Desc
	Limit 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_journalentry_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_journalentry_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_journalentry_get`(
   IN prmBranchCode VARCHAR(50), In prmVoucherNo varchar(50)
)
BEGIN
	SELECT 	
	   F401.BranchCode, 
	   F401.VoucherNo, 
	   F401.TransactionDate, 
	   F402.Description,
	   F402.AccountCode,
	   F402.Debit,
	   F402.Credit,
	   F401.RefNo, 
	   F401.CurrencyCode,
	   F006.Name as Currency, 
	   F401.ExchangeRate, 
	   F401.JournalType, 
	   F401.JournalVoucherCode, 
	   F401.PostingStatus, 
	   F401.ParentVoucherNo, 
	   F401.AutomaticJournalType
	FROM F401 
	   Inner Join F402 On concat(F402.VoucherNo, F402.BranchCode) = concat(F401.VoucherNo, F401.BranchCode)
	   inner Join F006 On F006.Code = F401.CurrencyCode
	WHERE
	  F401.BranchCode = prmBranchCode and F401.VoucherNo = prmVoucherNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_journalrecapitulation_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_journalrecapitulation_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_journalrecapitulation_get`(IN prmBranchCode VARCHAR(50), in prmFirstDate date, in prmLastDate Date)
BEGIN
SELECT 	
F401.TransactionDate,
	   F402.BranchCode, 
	   F402.VoucherNo, 
	   F402.Description, 
	   F402.AccountCode,
F101.Name as AccountName,
	   F402.Debit,
	   F402.Credit,
	   (F402.Debit * F401.ExchangeRate) as DebitLocal,
	   (F402.Credit * F401.ExchangeRate) as CreditLocal
	FROM 
	   F401 
	   INNER JOIN F402 ON F401.BranchCode = F402.BranchCode AND F401.VoucherNo = F402.VoucherNo
	   INNER JOIN F101 ON F402.AccountCode = F101.Code
	WHERE
	   F402.BranchCode = prmBranchCode 
		AND TransactionDate BETWEEN prmFirstDate AND prmLastDate
	ORDER BY
	F401.transactionDate, F402.VoucherNo, F402.Debit Desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_ledger_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_ledger_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_ledger_get`(IN prmBranchCode VARCHAR(50), in prmFirstDate Date, in prmLastDate Date)
BEGIN
	 SELECT * FROM   
                   (SELECT 'A' as Ket, '' AS VoucherNo, F402.AccountCode,   
                       F101.Name AS AccountName, null AS TransactionDate, '' AS RefNo,   
                       'Last Balance' AS Description, null AS Debit, null AS Credit,   
                       (SUM(F402.Debit * F401.ExchangeRate) - SUM(F402.Credit * F401.ExchangeRate)) AS balance   
                    FROM (F401 INNER JOIN F402 ON F401.BranchCode = F402.BranchCode AND F401.VoucherNo = F402.VoucherNo)   
                    INNER JOIN F101 ON F402.AccountCode = F101.Code   
                    WHERE F401.TransactionDate < prmFirstDate AND YEAR(F401.TransactionDate) = YEAR(prmFirstDate)   
                    GROUP BY F402.AccountCode   
                 UNION   
                    SELECT 'B' as Ket, F401.VoucherNo, F402.AccountCode,F101.Name AS AccountName,   
                       F401.TransactionDate, F401.RefNo, F402.Description,   
                       (F402.Debit * F401.ExchangeRate) AS Debit,   
                       (F402.Credit * F401.ExchangeRate) AS Credit,   
                       (Debit-Credit) AS balance   
                    FROM  (F401 INNER JOIN F402 ON F401.BranchCode = F402.BranchCode AND F401.VoucherNo = F402.VoucherNo)   
                          INNER JOIN F101 ON F402.AccountCode = F101.Code   
                    WHERE F402.BranchCode = prmBranchCode 
		AND TransactionDate BETWEEN prmFirstDate AND prmLastDate 
                )   
                AS Query1 ORDER BY Query1.AccountCode, Query1.Ket, Query1.TransactionDate;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_PBNo_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_PBNo_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_PBNo_Get`(
	prmBranchCode VARCHAR(50),
	prmPBNo VARCHAR(50)
)
BEGIN
		SELECT  F207.BranchCode,
	F001.Name AS BranchName, 
	F207.PBNo,
	F207.TransactionDate, 
	F207.PPName, 
	F207.Divisi,
	F207.Jabatan,	
	F207.CurrencyCode,
	-- F006.Name 						AS  CurrencyName,
	F207.ExchangeRate,
	F207.RefNo,	
	F207.Description					AS  PPDescriptionHeader,	
	F207.TotalTransactionAmount 				AS  PPTotalTransactionAmount, 
	F207.GrandTotalAmount 			    		AS  PPGrandTotalAmount, 	
	F207.PostLog,
	F207.PostLogDate,
	F207.PostPO,
	F207.PostPODate,
					                         
			  F208.ItemCode, 
			  F013.name as ItemName,
			F013.UnitCode,
			  F208.SpecificDes, 
			  F208.PPQuantity as Quantity,
			  F208.DateNeed,
			  F208.Description,
			  F208.AccPOQuantity ,
			  F208.SupplierCode_v1,
			  F208.Price_v1 , 
			  F208.DateArived_v1,
			  F208.PostAcc_v1, 
			  F208.SupplierCode_v2 ,
			  F208.Price_v2 , 
			  F208.DateArived_v2,
			  F208.PostAcc_v2, 
			  F208.SupplierCode_v3,
			  F208.Price_v3 , 
			  F208.DateArived_v3,
			  F208.PostAcc_v3
		FROM F207
INNER JOIN F001 ON F207.BranchCOde = F001.Code  
			INNER JOIN F208 ON F207.PBNo = F208.PBNo
			-- INNER JOIN F006 ON F207.CurrencyCode = F006.Code 
					
			INNER JOIN F013 ON F208.ItemCode = F013.Code
			
			 
		WHERE 
			F207.PBNo like prmPBNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_PODNo_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_PODNo_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_PODNo_Get`(
	prmBranchCode VARCHAR(50),
	prmPODNo VARCHAR(50)
)
BEGIN
		SELECT  F201.BranchCode, 
			F201.PODNo,
			F201.PostStatus,
			F201.PostStatus2,
			F201.TransactionDate, 
			F201.ClosingDate, 
			F201.DeliveryDateStart, 
			F201.DeliveryDateEnd,
                        F201.ApprovedBy,
                        F201.ApproveJobPosition,
                        F201.SupplierApprovedBy,
                        F201.SupplierApprovedJobPosition, 
			F201.StatusLampiran,
	F201.RekapDes,
			F018.Code 		AS PaymentTermCode, 
			F018.Name 		AS PaymentTermName, 
			F109.Code 		AS SupplierCode, 
			F109.Name 		AS SupplierName, 
			F109.ContactPerson 	AS SupplierContactPerson,
                        F109.ContactJobPosition AS SupplierContactJobPosition, 
			F109.Address	 	AS SupplierAddress, 
			F109.ZipCode 		AS SupplierZipCode, 
			F109.Phone1 		AS SupplierPhone1, 
			F109.Phone2 		AS SupplierPhone2, 
			F109.Fax 		AS SupplierFax, 
			F109.EmailAddress 	AS SupplierEmailAddress, 
			F009.Code 		AS SupplierCityCode,  
			F009.Name 		AS SupplierCityName, 
			SuppCountry.Code 	AS SupplierCountryCode,  
			SuppCountry.Name 	AS SupplierCountryName, 
			F006.Code 		AS CurrencyCode, 
			F006.Name 		AS CurrencyName, 
			GoodsDest.Code 	AS GoodsDestinationCode, 
			GoodsDest.Name 	AS GoodsDestinationName,
                        GoodsDest.Address AS GoodsDestinationAddress,
                        GoodsDest.ZipCode AS GoodsDestinationZipCode,
                        GoodsDest.CountryCode AS GoodsDestinationCountryCode,
			GoodsCountry.Name AS GoodsDestinationCountryName,
                        GoodsDest.Phone1 AS GoodsDestinationPhone1,
                        GoodsDest.Fax AS GoodsDestinationFax,
                        GoodsDest.ContactPerson AS GoodsDestinationContactPerson,
                        GoodsDest.EmailAddress AS GoodsDestinationEmailAddress,
			InvDest.Code    AS InvoiceDestinationCode, 
			InvDest.Name    AS InvoiceDestinationName,
                        InvDest.Address AS InvoiceDestinationAddress,
			InvDest.ZipCode AS InvoiceDestinationZipCode,
			InvDest.CountryCode AS InvoiceDestinationCountryCode,
			InvoiceCountry.Name AS InvoiceDestinationCountryName,
			InvDest.Phone1 AS InvoiceDestinationPhone1,
                        InvDest.Fax AS InvoiceDestinationFax,
                        InvDest.ContactPerson AS InvoiceDestinationContactPerson,
                        InvDest.EmailAddress AS InvoiceDestinationEmailAddress,			
			F201.ExchangeRate, 
			F201.Description	AS PODDescriptionHeader, 
			F201.TotalTransactionAmount AS PODTotalTransactionAmount, 			
			F201.DiscountPercent 	AS PODDiscountPercentHeader, 
			F201.DiscountAmount 	AS PODDiscountAmountHeader, 			
			F201.PPNPercent 				AS PODPPNPercent, 
			F201.PPNAmount 					AS PODPPNAmount, 			
			F201.FreightFeeAmount 				AS PODFreightFeeAmount, 			
			F201.InsuranceFeeAmount 			AS PODInsuranceFeeAmount, 			
			F201.AdministrationFeeAmount 			AS PODAdministrationFeeAmount, 			
			F201.OtherFeeAmount 			    AS PODOtherFeeAmount, 
			F201.RoundedAmount			    AS PODRoundedAmount,	
			F201.GrandTotalAmount 			    AS PODGrandTotalAmount, 
			F201.PaidAmount 			    AS PODPaidAmount, 
			F201.ClosingStatus,
			F201.RefNo,
			
			F202.ItemCode,
			F013.Name AS ItemName,
			F013.UnitCode, 
			F202.Quantity, 
			F202.Description, 
			F202.Price, 
			F202.DiscountPercent1, 
			F202.DiscountAmount1, 
			F202.DiscountPercent2, 
			F202.DiscountAmount2, 
			F202.DiscountPercent3, 
			F202.DiscountAmount3
		FROM F201
			LEFT JOIN F202 ON F201.PODNo = F202.PODNo
			LEFT  JOIN F006 ON F201.CurrencyCode = F006.Code 
			LEFT  JOIN F109 ON F201.SupplierCode = F109.Code 
			LEFT  JOIN F018 ON F201.PaymentTermCode = F018.Code
			LEFT  JOIN F013 ON F202.ItemCode = F013.Code
			LEFT  JOIN F009 ON F109.CityCode = F009.Code 
			LEFT  JOIN F010 AS SuppCountry ON F109.CountryCode = SuppCountry.Code     			
			LEFT  JOIN F107 AS GoodsDest ON F201.GoodsDestinationCode   = GoodsDest.Code
		     	LEFT  JOIN F107 AS InvDest   ON F201.InvoiceDestinationCode = InvDest.Code
			LEFT  JOIN F010 AS GoodsCountry ON GoodsDest.CountryCode = GoodsCountry.Code     
			LEFT  JOIN F010 AS InvoiceCountry ON InvDest.CountryCode = InvoiceCountry.Code      
		WHERE 
			F201.PODNo LIKE prmPODNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_Check_GRN` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_Check_GRN` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_POD_Check_GRN`(prmPODNo VARCHAR(50))
BEGIN
	SELECT F301.PODNo 
	FROM F301 
	WHERE  F301.PODNo = prmPODNo
	LIMIT 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_GlobalPurchase` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_GlobalPurchase` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_GlobalPurchase`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime)
BEGIN
 CALL usp_string_to_mysqlrow(prmBranchCode, ",");
   SELECT F301.BranchCode,
          F001.Name AS BranchName,
          F301.GRNNo,
          F301.TransactionDate,
          F301.PODNo,
          F301.SupplierCode,
          F109.Name AS SupplierName,
          F301.CurrencyCode,
          F006.Name AS CurrencyName,
          F301.TotalTransactionAmount,
          F301.DiscountPercent,
          F301.DiscountAmount,
          F301.PPNPercent,
          F301.PPNAmount,
          F301.GrandTotal,
          F302.ItemCode,
          F013.Name AS ItemName,
          F302.Quantity,
          F302.Price,
          F302.BonusQuantity
FROM F301
	INNER JOIN F302 ON F301.GRNNO = F302.GRNNo
	INNER JOIN F001 ON F301.BranchCode = F001.Code
	INNER JOIN F109 ON F301.SupplierCode = F109.Code
	INNER JOIN F006 ON F301.CurrencyCode = F006.Code
	INNER JOIN F013 ON F302.ItemCode = F013.Code
 WHERE F301.TransactionDate BETWEEN prmFirstdate AND prmLastdate
   AND F301.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
   END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_GlobalPurchaseDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_GlobalPurchaseDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_GlobalPurchaseDetail`(
IN prmBranchCode VARCHAR(50), in prmFirstDate Date, in prmLastDate Date
)
BEGIN
	SELECT
		F301.GRNNo,
		F301.TransactionDate,
		F301.PODNo,
		F301.CurrencyCode,
		F302.ItemCode,
		F013.Name AS ItemName,
		F013.UnitCode,
		F302.Quantity,
		F302.BonusQuantity,
		F302.Quantity * F302.Price - F302.DiscountAmount1 - F302.DiscountAmount2 - F302.DiscountAmount3 AS GrandTotal
	FROM F301
		INNER JOIN F302 ON F301.BranchCode = F302.BranchCode AND F301.GRNNo = F302.GRNNo
		INNER JOIN F013 ON F302.ItemCode   = F013.Code
	WHERE
		F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_GlobalPurchaseDetailPerSupplier` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_GlobalPurchaseDetailPerSupplier` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_GlobalPurchaseDetailPerSupplier`(
IN prmBranchCode VARCHAR(50), in prmFirstDate Date, in prmLastDate Date, prmSupplier1 VARCHAR(50), prmSupplier2 VARCHAR(50)
)
BEGIN
	SELECT
		F301.GRNNo,
		F301.TransactionDate,
		F301.PODNo,
		F301.SupplierCode,
		F301.CurrencyCode,
		F302.ItemCode,
		F013.Name AS ItemName,
		F013.UnitCode,
		F302.Quantity,
		F302.BonusQuantity,
		F302.Quantity * F302.Price - F302.DiscountAmount1 - F302.DiscountAmount2 - F302.DiscountAmount3 AS Total
	FROM F301
		INNER JOIN F302 ON F301.BranchCode = F302.BranchCode AND F301.GRNNo = F302.GRNNo
		INNER JOIN F013 ON F302.ItemCode   = F013.Code
	WHERE
		F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
		F301.SupplierCode    BETWEEN prmSupplier1 AND prmSupplier2;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_GlobalPurchaseHeader` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_GlobalPurchaseHeader` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_GlobalPurchaseHeader`(
IN prmBranchCode VARCHAR(50), in prmFirstDate Date, in prmLastDate Date
)
BEGIN
	SELECT
		F301.GRNNo,
		F301.TransactionDate,
		F301.PODNo,
		F301.CurrencyCode,
		F301.GrandTotal
	FROM F301
	WHERE F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_GlobalPurchaseHeaderPerSupplier` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_GlobalPurchaseHeaderPerSupplier` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_GlobalPurchaseHeaderPerSupplier`(
IN prmBranchCode VARCHAR(50), in prmFirstDate Date, in prmLastDate Date, prmSupplier1 VARCHAR(50), prmSupplier2 VARCHAR(50)
)
BEGIN
	SELECT
		F301.GRNNo,
		F301.TransactionDate,
		F301.PODNo,
		F301.SupplierCode,
		F301.CurrencyCode,
		F301.GrandTotal
	FROM F301
	WHERE 
		F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
		F301.SupplierCode    BETWEEN prmSupplier1 AND prmSupplier2;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_GlobalPurchasePerSupplier` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_GlobalPurchasePerSupplier` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_GlobalPurchasePerSupplier`(prmSupplierCode Text, prmFirstDate Datetime, prmLastDate datetime)
BEGIN
 CALL usp_string_to_mysqlrow(prmSupplierCode, ",");
   SELECT F301.BranchCode,
          F001.Name AS BranchName,
          F301.GRNNo,
          F301.TransactionDate,
          F301.PODNo,
          F301.SupplierCode,
          F109.Name AS SupplierName,
          F301.CurrencyCode,
          F006.Name AS CurrencyName,
          F301.TotalTransactionAmount,
          F301.DiscountPercent,
          F301.DiscountAmount,
          F301.PPNPercent,
          F301.PPNAmount,
          F301.GrandTotal,
          F302.ItemCode,
          F013.Name AS ItemName,
          F302.Quantity,
          F302.Price,
          F302.BonusQuantity
FROM F301
	INNER JOIN F302 ON F301.GRNNO = F302.GRNNo
	INNER JOIN F001 ON F301.BranchCode = F001.Code
	INNER JOIN F109 ON F301.SupplierCode = F109.Code
	INNER JOIN F006 ON F301.CurrencyCode = F006.Code
	INNER JOIN F013 ON F302.ItemCode = F013.Code
 WHERE F301.TransactionDate BETWEEN prmFirstdate AND prmLastdate
   AND F301.SupplierCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
   END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_GlobalPurchaseReturn` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_GlobalPurchaseReturn` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_GlobalPurchaseReturn`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime)
BEGIN
    CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F203.BranchCode,
       F001.Name As BranchName,
       F203.PRTNo,
       F203.TransactionDate,
       F203.CurrencyCode,
       F006.Name AS CurrencyName,
       F203.SupplierCode,
       F109.Name AS SupplierName,
       F203.WarehouseCode,
       F110.Name As WarehouseName,
       F203.TotalTransactionAmount,
       F203.DiscountPercent,
       F203.DiscountAmount,
       F203.PPNPercent,
       F203.PPNAmount,
       F203.OtherFee,
       F203.GrandTotalAmount,
       F204.ItemCode,
       F013.Name As ItemName,
       F015.Name As ItemAlias,
       F204.Quantity,
       F204.Price,
       F204.GRNNo
From F203
     Inner Join F204 On F203.PRTNo = F204.PRTNo
     Inner Join F001 On F203.BranchCode = F001.Code
     Inner Join F006 On F203.CurrencyCode = F006.Code
     Inner Join F109 On F203.SupplierCode = F109.Code
     Inner Join F110 On F203.WarehouseCode = F110.Code
     Inner Join F013 On F204.ItemCode = F013.Code
     Inner Join F015 On F204.ItemCode = F015.Code
WHERE F203.TransactionDate BETWEEN prmFirstdate AND prmLastdate
AND F203.BranchCode IN (SELECT * FROM Temp_SplitString);
DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_PODRealization_Import` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_PODRealization_Import` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_PODRealization_Import`(
IN prmBranchCode VARCHAR(50), in prmFirstDate Date, in prmLastDate Date, prmSupplier1 VARCHAR(50), prmSupplier2 VARCHAR(50)
)
BEGIN
	CALL usp_string_to_mysqlrow(prmBranchCode, ",");
	SELECT
		F201.BranchCode,
		F001.Name 	AS BranchName,
		F201.PODNo,
		F201.TransactionDate,
		F201.PaymentTermCode,
		F018.Name 	AS PaymentTermName,
		F201.CurrencyCode,
		F006.Name 	AS CurrencyName,
		F201.SupplierCode,
		F109.Name 	AS SupplierName,
		F202.ItemCode,
		F013.Name 	AS ItemName,
		F013.UnitCode 	AS ItemUnitCode,
		F202.Price,
		F202.Quantity,
		F302.Price 		AS Price2,
		F302.Quantity 	AS Qty2
	FROM
	F201
		INNER JOIN F001 ON F201.BranchCode 			= F001.Code
		INNER JOIN F006 ON F201.CurrencyCode 		= F006.Code
		INNER JOIN F202 ON F201.BranchCode 			= F202.BranchCode AND F201.PODNo = F202.PODNo
		INNER JOIN F013 ON F013.Code 				= F202.ItemCode
		INNER JOIN F018 ON F201.PaymentTermCode 	= F018.Code
		INNER JOIN F109 ON F201.SupplierCode    		= F109.Code
		LEFT  JOIN F301 ON F201.PODNo 			= F301.PODNo
		LEFT  JOIN F302 ON F301.GRNNo 			= F302.GRNNo
	WHERE
		F201.TransactionDate 	BETWEEN prmFirstDate AND prmLastDate AND
		F201.SupplierCode    	BETWEEN prmSupplier1 AND prmSupplier2 AND
		F201.BranchCode IN (SELECT * FROM Temp_SplitString) AND
		F201.PODStatus = "A"
	GROUP BY F201.TransactionDate, ItemCode;
	DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_PODRealization_Local` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_PODRealization_Local` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_PODRealization_Local`(
IN prmBranchCode VARCHAR(50), in prmFirstDate Date, in prmLastDate Date, prmSupplier1 VARCHAR(50), prmSupplier2 VARCHAR(50)
)
BEGIN
	CALL usp_string_to_mysqlrow(prmBranchCode, ",");
	SELECT
		F201.BranchCode,
		F001.Name 	AS BranchName,
		F201.PODNo,
		F201.TransactionDate,
		F201.PaymentTermCode,
		F018.Name 	AS PaymentTermName,
		F201.CurrencyCode,
		F006.Name 	AS CurrencyName,
		F201.SupplierCode,
		F109.Name 	AS SupplierName,
		F202.ItemCode,
		F013.Name 	AS ItemName,
		F013.UnitCode 	AS ItemUnitCode,
		F202.Price,
		F202.Quantity,
		F302.Price 		AS Price2,
		F302.Quantity 	AS Qty2
	FROM
	F201
		INNER JOIN F001 ON F201.BranchCode 			= F001.Code
		INNER JOIN F006 ON F201.CurrencyCode 		= F006.Code
		INNER JOIN F202 ON F201.BranchCode 			= F202.BranchCode AND F201.PODNo = F202.PODNo
		INNER JOIN F013 ON F013.Code 				= F202.ItemCode
		INNER JOIN F018 ON F201.PaymentTermCode 	= F018.Code
		INNER JOIN F109 ON F201.SupplierCode    		= F109.Code
		LEFT  JOIN F301 ON F201.PODNo 			= F301.PODNo
		LEFT  JOIN F302 ON F301.GRNNo 			= F302.GRNNo
	WHERE
		F201.TransactionDate 	BETWEEN prmFirstDate AND prmLastDate AND
		F201.SupplierCode    	BETWEEN prmSupplier1 AND prmSupplier2 AND
		F201.BranchCode IN (SELECT * FROM Temp_SplitString) AND
		F201.PODStatus = "B"
	GROUP BY F201.TransactionDate, ItemCode;
	DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_PODRecapitulation_Import` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_PODRecapitulation_Import` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_PODRecapitulation_Import`(
	IN prmBranchCode TEXT, 
	IN prmFirstDate Date, 
	IN prmLastDate Date
)
BEGIN
	CALL usp_string_to_mysqlrow(prmBranchCode, ",");
	SELECT
		F201.BranchCode,
		F001.Name AS BranchName,
		F201.PODNo,
		F201.TransactionDate,
		F201.DeliveryDateStart,
		F201.ExpiredDate,
		F201.PaymentTermCode,
		F018.Name AS PaymentTermName,
		F201.CurrencyCode,
		F006.Name AS CurrencyName,
		F201.SupplierCode,
		F109.Name AS SupplierName,
		F201.TotalTransactionAmount
	FROM F201
		INNER JOIN F001 ON F201.BranchCode 		= F001.Code
		INNER JOIN F006 ON F201.CurrencyCode 		= F006.Code
		INNER JOIN F018 ON F201.PaymentTermCode 	= F018.Code
		INNER JOIN F109 ON F201.SupplierCode    	= F109.Code
	WHERE
		F201.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		AND F201.BranchCode IN (SELECT * FROM Temp_SplitString)
		AND F201.PODStatus = "A";
	DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_PODRecapitulation_Local` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_PODRecapitulation_Local` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_PODRecapitulation_Local`(
	IN prmBranchCode TEXT, 
	IN prmFirstDate Date, 
	IN prmLastDate Date
)
BEGIN
	CALL usp_string_to_mysqlrow(prmBranchCode, ",");
	SELECT
		F201.BranchCode,
		F001.Name AS BranchName,
		F201.PODNo,
		F201.TransactionDate,
		F201.DeliveryDateStart,
		F201.ExpiredDate,
		F201.PaymentTermCode,
		F018.Name AS PaymentTermName,
		F201.CurrencyCode,
		F006.Name AS CurrencyName,
		F201.SupplierCode,
		F109.Name AS SupplierName,
		F201.TotalTransactionAmount
	FROM F201
		INNER JOIN F001 ON F201.BranchCode 			= F001.Code
		INNER JOIN F006 ON F201.CurrencyCode 		= F006.Code
		INNER JOIN F018 ON F201.PaymentTermCode 	= F018.Code
		INNER JOIN F109 ON F201.SupplierCode    		= F109.Code
	WHERE
		F201.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		AND F201.BranchCode IN (SELECT * FROM Temp_SplitString)
		AND F201.PODStatus = "B";
	DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_PurchasePerItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_PurchasePerItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_PurchasePerItem`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime, prmItem1 Text, prmItem2 Text)
BEGIN
 CALL usp_string_to_mysqlrow(prmBranchCode, ",");
   SELECT F301.BranchCode,
          F001.Name AS BranchName,
          F301.GRNNo,
          F301.TransactionDate,
          F301.PODNo,
          F301.SupplierCode,
          F109.Name AS SupplierName,
          F301.CurrencyCode,
          F006.Name AS CurrencyName,
          F301.TotalTransactionAmount,
          F301.DiscountPercent,
          F301.DiscountAmount,
          F301.PPNPercent,
          F301.PPNAmount,
          F301.GrandTotal,
          F302.ItemCode,
          F013.Name AS ItemName,
          F302.Quantity,
          F302.Price,
          F302.BonusQuantity
FROM F301
	INNER JOIN F302 ON F301.GRNNO = F302.GRNNo
	INNER JOIN F001 ON F301.BranchCode = F001.Code
	INNER JOIN F109 ON F301.SupplierCode = F109.Code
	INNER JOIN F006 ON F301.CurrencyCode = F006.Code
	INNER JOIN F013 ON F302.ItemCode = F013.Code
 WHERE F301.TransactionDate BETWEEN prmFirstdate AND prmLastdate
   AND F302.ItemCode BETWEEN prmItem1 AND prmItem2
   AND F301.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
   END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_PurchasePerSupplier` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_PurchasePerSupplier` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_PurchasePerSupplier`(
IN prmBranchCode VARCHAR(50), IN prmFirstDate Datetime, IN prmLastDate datetime, prmSupplier1 VARCHAR(50), prmSupplier2 VARCHAR(50))
BEGIN
 CALL usp_string_to_mysqlrow(prmBranchCode, ",");
   SELECT F301.BranchCode,
          F001.Name AS BranchName,
          F301.GRNNo,
          F301.TransactionDate,
          F301.PODNo,
          F301.SupplierCode,
          F109.Name AS SupplierName,
          F301.CurrencyCode,
          F006.Name AS CurrencyName,
          F301.TotalTransactionAmount,
          F301.DiscountPercent,
          F301.DiscountAmount,
          F301.PPNPercent,
          F301.PPNAmount,
          F301.GrandTotal,
          F302.ItemCode,
          F013.Name AS ItemName,
          F302.Quantity,
          F302.Price,
          F302.BonusQuantity
FROM F301
	INNER JOIN F302 ON F301.GRNNO = F302.GRNNo
	INNER JOIN F001 ON F301.BranchCode = F001.Code
	INNER JOIN F109 ON F301.SupplierCode = F109.Code
	INNER JOIN F006 ON F301.CurrencyCode = F006.Code
	INNER JOIN F013 ON F302.ItemCode = F013.Code
WHERE F301.TransactionDate BETWEEN prmFirstdate AND prmLastdate
  AND F301.SupplierCode    BETWEEN prmSupplier1 AND prmSupplier2
  AND F301.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
  END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_PurchaseReturnPerItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_PurchaseReturnPerItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_PurchaseReturnPerItem`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime, prmItem1 Text, prmItem2 Text)
BEGIN
    CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F203.BranchCode,
       F001.Name As BranchName,
       F203.PRTNo,
       F203.TransactionDate,
       F203.CurrencyCode,
       F006.Name AS CurrencyName,
       F203.SupplierCode,
       F109.Name AS SupplierName,
       F203.WarehouseCode,
       F110.Name As WarehouseName,
       F203.TotalTransactionAmount,
       F203.DiscountPercent,
       F203.DiscountAmount,
       F203.PPNPercent,
       F203.PPNAmount,
       F203.OtherFee,
       F203.GrandTotalAmount,
       F204.ItemCode,
       F013.Name As ItemName,
       F015.Name As ItemAlias,
       F204.Quantity,
       F204.Price,
       F204.GRNNo
From F203
     Inner Join F204 On F203.PRTNo = F204.PRTNo
     Inner Join F001 On F203.BranchCode = F001.Code
     Inner Join F006 On F203.CurrencyCode = F006.Code
     Inner Join F109 On F203.SupplierCode = F109.Code
     Inner Join F110 On F203.WarehouseCode = F110.Code
     Inner Join F013 On F204.ItemCode = F013.Code
     Inner Join F015 On F204.ItemCode = F015.Code
WHERE F203.TransactionDate BETWEEN prmFirstdate AND prmLastdate
AND F204.ItemCode BETWEEN prmItem1 AND prmItem2
AND F203.BranchCode IN (SELECT * FROM Temp_SplitString);
DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_POD_PurchaseReturnPerSupplier` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_POD_PurchaseReturnPerSupplier` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_POD_PurchaseReturnPerSupplier`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime, prmSupplier1 Varchar(50), prmSupplier2 Varchar(50))
BEGIN
    CALL usp_string_to_mysqlrow(prmBranchCode, ",");
Select F203.BranchCode,
       F001.Name As BranchName,
       F203.PRTNo,
       F203.TransactionDate,
       F203.CurrencyCode,
       F006.Name AS CurrencyName,
       F203.SupplierCode,
       F109.Name AS SupplierName,
       F203.WarehouseCode,
       F110.Name As WarehouseName,
       F203.TotalTransactionAmount,
       F203.DiscountPercent,
       F203.DiscountAmount,
       F203.PPNPercent,
       F203.PPNAmount,
       F203.OtherFee,
       F203.GrandTotalAmount,
       F204.ItemCode,
       F013.Name As ItemName,
       F015.Name As ItemAlias,
       F204.Quantity,
       F204.Price,
       F204.GRNNo
From F203
     Inner Join F204 On F203.PRTNo = F204.PRTNo
     Inner Join F001 On F203.BranchCode = F001.Code
     Inner Join F006 On F203.CurrencyCode = F006.Code
     Inner Join F109 On F203.SupplierCode = F109.Code
     Inner Join F110 On F203.WarehouseCode = F110.Code
     Inner Join F013 On F204.ItemCode = F013.Code
     Inner Join F015 On F204.ItemCode = F015.Code
WHERE F203.TransactionDate BETWEEN prmFirstdate AND prmLastdate
AND F203.SupplierCode BETWEEN prmSupplier1 AND prmSupplier2
AND F203.BranchCode IN (SELECT * FROM Temp_SplitString);
DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_PPNo_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_PPNo_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_PPNo_Get`(
	prmBranchCode VARCHAR(50),
	prmPPNo VARCHAR(50)
)
BEGIN
		SELECT  F205.BranchCode,
	F001.Name AS BranchName, 
	F205.PPNo,
	F205.TransactionDate, 
	F205.PPName, 
	F205.Divisi,
	F205.Jabatan,	
	F205.CurrencyCode,
	-- F006.Name 						AS  CurrencyName,
	F205.ExchangeRate,
	F205.RefNo,	
	F205.Description					AS  PPDescriptionHeader,	
	F205.TotalTransactionAmount 				AS  PPTotalTransactionAmount, 
	F205.GrandTotalAmount 			    		AS  PPGrandTotalAmount, 	
	F205.PostLog,
	F205.PostLogDate,
	F205.PostPO,
	F205.PostPODate,
					                         
			  F206.ItemCode, 
			  F013.name as ItemName,
			F013.UnitCode,
			  F206.SpecificDes, 
			  F206.PPQuantity as Quantity,
			  F206.DateNeed,
			  F206.Description,
			  F206.AccPOQuantity ,
			  F206.SupplierCode_v1,
			  F206.Price_v1 , 
			  F206.DateArived_v1,
			  F206.PostAcc_v1, 
			  F206.SupplierCode_v2 ,
			  F206.Price_v2 , 
			  F206.DateArived_v2,
			  F206.PostAcc_v2, 
			  F206.SupplierCode_v3,
			  F206.Price_v3 , 
			  F206.DateArived_v3,
			  F206.PostAcc_v3
		FROM F205
INNER JOIN F001 ON F205.BranchCOde = F001.Code  
			INNER JOIN F206 ON F205.PPNo = F206.PPNo
			-- INNER JOIN F006 ON F205.CurrencyCode = F006.Code 
					
			INNER JOIN F013 ON F206.ItemCode = F013.Code
			
			 
		WHERE 
			F205.PPNo like prmPPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_profitandloss_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_profitandloss_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_profitandloss_get`(IN prmBranchCode VARCHAR(50), in prmFirstDate Date)
BEGIN 
	select AccountCode, AccountName, LastMonthIDR, ThisMonthIDR, YeartoDateMonthIDR, 
	CASE LEFT(AccountCode,2)
	   WHEN "06" THEN "Sales"
	   WHEN "07" THEN "Sales"
	   WHEN "08" THEN "Expenses"
	   WHEN "09" THEN "Expenses"
	   WHEN "10" THEN "Expenses"
	   WHEN "11" THEN "Others Revenues"
	   WHEN "12" THEN "Income Tax"
	END AS GroupHeader,
	CASE LEFT(AccountCode,2)
	   WHEN "06" THEN "Sales"
	   WHEN "07" THEN "Cost Of Goods Sold"
	   WHEN "08" THEN "Marketting Expenses"
	   WHEN "09" THEN "General And Administration Expenses"
	   WHEN "10" THEN "Other EXPENSES"
	   WHEN "11" THEN "Others Revenues"
	   WHEN "12" THEN "Income Tax"
	END AS Header,
	CASE LEFT(AccountCode,2)
	   WHEN "06" THEN 1
	   WHEN "07" THEN 1
	   WHEN "08" THEN -1
	   WHEN "09" THEN -1
	   WHEN "10" THEN -1
	   WHEN "11" THEN 1
	   WHEN "12" THEN -1
	END AS TandaGroupHeader,
	CASE LEFT(AccountCode,2)
	   WHEN "06" THEN 1
	   WHEN "07" THEN -1
	   WHEN "08" THEN 1
	   WHEN "09" THEN 1
	   WHEN "10" THEN 1
	   WHEN "11" THEN 1
	   WHEN "12" THEN 1
	END AS TandaHeader
	from(
	select
	qr3.AccountCode,
	qr3.AccountName,
	sum(qr3.LastMonthIDR)  as LastMonthIDR,
	sum(qr3.ThisMonthIDR)  as ThisMonthIDR,
	sum(qr3.LastMonthIDR + qr3.ThisMonthIDR) as YearToDateMonthIDR
	from(
	select 
	qr2.AccountCode, 
	qr2.AccountName,
	-sum(qr2.DebitamountIDR - qr2.CreditAmountIDR)  as LastMonthIDR,
	cast(0 as signed)  as ThisMonthIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where 
	F401.PostingStatus = '1' 
	and
	F401.BranchCode = prmBranchCode
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	and
	left(F402.AccountCode,2) in ('06','11') 
	)as qr1) 
	as qr2 
	where 
	qr2.TransactionDate < prmFirstDate group by qr2.AccountCode, qr2.AccountName
	union all
	select 
	qr2.AccountCode, 
	qr2.AccountName,
	sum(qr2.DebitamountIDR - qr2.CreditAmountIDR)  as LastMonthIDR,
	cast(0 as signed)  as ThisMonthIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where 
	F401.PostingStatus = '1' 
	and
	F401.BranchCode = prmBranchCode
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	and
	left(F402.AccountCode,2) in ('07','08','09','10','12') 
	)as qr1) 
	as qr2 
	where 
	qr2.TransactionDate < prmFirstDate group by qr2.AccountCode, qr2.AccountName
	union all
	select 
	qr2.AccountCode, 
	qr2.AccountName,
	cast(0 as signed)  as LastMonthIDR,
	-sum(qr2.DebitamountIDR - qr2.CreditAmountIDR)  as ThisMonthIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where 
	F401.PostingStatus = '1' 
	and
	F401.BranchCode = prmBranchCode
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	and
	left(F402.AccountCode,2) in ('06','11') 
	)as qr1
	)as qr2 
	where 
	month(qr2.TransactionDate) = month(prmFirstDate) group by qr2.AccountCode, qr2.AccountName
	union all
	select 
	qr2.AccountCode, 
	qr2.AccountName,
	cast(0 as signed)  as LastMonthIDR,
	sum(qr2.DebitamountIDR - qr2.CreditAmountIDR)  as ThisMonthIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where 
	F401.PostingStatus = '1' 
	and
	F401.BranchCode = prmBranchCode
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	and
	left(F402.AccountCode,2) in ('07','08','09','10','12') 
	)as qr1
	)as qr2 
	where 
	month(qr2.TransactionDate) =  month(prmFirstDate) group by qr2.AccountCode, qr2.AccountName
	)as qr3 group by qr3.AccountCode, qr3.AccountName
	)as qr4 Order by qr4.AccountCode ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_PRT_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_PRT_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_PRT_get`(IN prmPRTNo VARCHAR(50))
BEGIN
	SELECT
		F203.BranchCode,
		F001.Name 	AS BranchName,
		F203.PRTNo,
		F203.TransactionDate,
		F203.CurrencyCode,
		F006.Name 	AS CurrencyName,
		F203.ExchangeRate,
		F203.SupplierCode,
		F109.Name 	AS SupplierName,
		F109.Address AS SupplierAddress,
		F109.Phone1 AS SupplierPhone,
		F109.Fax AS SupplierFax,
		F203.WarehouseCode,
		F110.Name 	AS WarehouseName,
		F203.RefNo,
		F203.Description,
		F203.OtherFee,
		F204.ItemCode,
		F013.Name 	AS ItemName,
		F013.UnitCode 	AS ItemUnitCode,
		F204.Quantity,
		F204.Price,
		F204.GRNNo,
		F204.Description
	FROM F203
		INNER JOIN F001 ON F203.BranchCode 		= F001.Code
		INNER JOIN F006 ON F203.CurrencyCode 	= F006.Code
		INNER JOIN F109 ON F203.SupplierCode 	= F109.Code
		INNER JOIN F110 ON F203.WarehouseCode 	= F110.Code
		INNER JOIN F204 ON F203.PRTNo 		= F204.PRTNo
		INNER JOIN F013 ON F204.ItemCode 		= F013.Code
	WHERE
		F203.PRTNo = prmPRTNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_PurchasingDoc_Check` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_PurchasingDoc_Check` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_PurchasingDoc_Check`(
   IN prmBranchCode VARCHAR(50),  
   IN prmDocNo varchar(50), 
   IN prmSupplierCode varchar(50),
   IN prmSupplierName varchar(100),   
   IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT
	'GRN' as TransactionType,
	F301.BranchCode, 
	F301.GRNNo 		as DocNo, 
	F301.TransactionDate,	
	F301.SupplierCode 	as SupplierCode, 
	F109.Name 		as SupplierName,
	F109.ContactPerson 	as SupplierContactPerson,  	
	F301.CurrencyCode	as CurrencyCode, 
	F006.Name 		as CurrencyName,
	F301.ExchangeRate,          
        F301.Description	as Description,        
	F301.GrandTotal 				as GrandTotalAmount, 
	(F301.GrandTotal * F301.ExchangeRate)	as GrandTotalAmountLocal,
	F301.PaidAmount 			as PaidAmount, 
	(F301.PaidAmount * F301.ExchangeRate) 	as PaidAmountLocal,
        (F301.GrandTotal - F301.PaidAmount) as Balance,
	(F301.GrandTotal - F301.PaidAmount)* F301.ExchangeRate as BalanceLocal
from F301 
	    INNER JOIN F006 on F301.CurrencyCode = F006.Code 
            INNER JOIN F018 on F301.PaymentTermCode  = F018.Code
	    INNER JOIN F109 on F301.SupplierCode = F109.Code 		    
	   WHERE 
		F301.BranchCode = prmBranchCode 
		-- AND F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		AND F301.GRNNo LIKE prmDocNo
		AND F301.SupplierCode LIKE prmSupplierCode
		AND F109.Name LIKE prmSupplierName		
		AND F301.CurrencyCode LIKE prmCurrencyCode
		
union all
select
	'PRT' as TransactionType,
	F203.BranchCode, 
	F203.PRTNo 		as DocNo, 
	F203.TransactionDate,
	F203.SupplierCode  	as SupplierCode,
	F109.Name 		As SupplierName,
	F109.ContactPerson 	As SupplierContactPerson,	
	F203.CurrencyCode 	as CurrencyCode,
	F006.Name 		As CurrencyName,
	F203.ExchangeRate,		
	F203.Description	as Description, 	
	F203.GrandTotalAmount				as GrandTotalAmount,
	(F203.GrandTotalAmount * F203.ExchangeRate) 	As GrandTotalAmountLocal, 
	F203.UsedAmount 				as PaidAmount,
	(F203.UsedAmount * F203.ExchangeRate) 		as  PaidAmountLocal,
	(F203.GrandTotalAmount - F203.UsedAmount) as Balance,
	(F203.GrandTotalAmount - F203.UsedAmount)* F203.ExchangeRate as BalanceLocal
FROM F203	
	 INNER JOIN F006 ON F203.CurrencyCode = F006.Code
	 INNER JOIN F109 ON F203.SupplierCode = F109.Code  
WHERE 	
	F203.BranchCode = prmBranchCode 
	-- and F203.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	AND F203.PRTNo LIKE prmDocNo
	AND F203.SupplierCode LIKE prmSupplierCode
	AND F109.Name LIKE prmSupplierName	
	AND F203.CurrencyCode LIKE prmCurrencyCode
	;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_PurchasingDoc_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_PurchasingDoc_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_PurchasingDoc_get`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate DATETIME,
   IN prmLastDate DATETIME,
   IN prmDocNo VARCHAR(50), 
   IN prmSupplierCode VARCHAR(50),
   IN prmSupplierName VARCHAR(100),   
   IN prmCurrencyCode VARCHAR(50)
)
BEGIN
	SELECT
	'GRN' AS TransactionType,
	F301.BranchCode, 
	F301.GRNNo 		AS DocNo, 
	F301.TransactionDate,	
	F301.SupplierCode 	AS SupplierCode, 
	F109.Name 		AS SupplierName,
	F109.ContactPerson 	AS SupplierContactPerson,  	
	F301.CurrencyCode	AS CurrencyCode, 
	F006.Name 		AS CurrencyName,
	F301.ExchangeRate,          
        F301.Description	AS Description,        
	F301.GrandTotal 				AS GrandTotalAmount, 
	(F301.GrandTotal * F301.ExchangeRate)	AS GrandTotalAmountLocal,
	F301.PaidAmount 			AS PaidAmount, 
	(F301.PaidAmount * F301.ExchangeRate) 	AS PaidAmountLocal,
        (F301.GrandTotal - F301.PaidAmount) AS Balance,
	(F301.GrandTotal - F301.PaidAmount)* F301.ExchangeRate AS BalanceLocal
FROM F301 
	    INNER JOIN F006 ON F301.CurrencyCode = F006.Code 
            INNER JOIN F018 ON F301.PaymentTermCode  = F018.Code
	    INNER JOIN F109 ON F301.SupplierCode = F109.Code 		    
	   WHERE 
		-- F301.BranchCode = prmBranchCode 
		 F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		AND F301.GRNNo LIKE prmDocNo
		AND F301.SupplierCode LIKE prmSupplierCode
		AND F109.Name LIKE prmSupplierName		
		AND F301.CurrencyCode LIKE prmCurrencyCode
		and f301.GrandTotal-f301.PaidAmount<>0
		
UNION ALL
SELECT
	'PRT' AS TransactionType,
	F203.BranchCode, 
	F203.PRTNo 		AS DocNo, 
	F203.TransactionDate,
	F203.SupplierCode  	AS SupplierCode,
	F109.Name 		AS SupplierName,
	F109.ContactPerson 	AS SupplierContactPerson,	
	F203.CurrencyCode 	AS CurrencyCode,
	F006.Name 		AS CurrencyName,
	F203.ExchangeRate,		
	F203.Description	AS Description, 	
	F203.GrandTotalAmount				AS GrandTotalAmount,
	(F203.GrandTotalAmount * F203.ExchangeRate) 	AS GrandTotalAmountLocal, 
	F203.UsedAmount 				AS PaidAmount,
	(F203.UsedAmount * F203.ExchangeRate) 		AS  PaidAmountLocal,
	(F203.GrandTotalAmount - F203.UsedAmount) AS Balance,
	(F203.GrandTotalAmount - F203.UsedAmount)* F203.ExchangeRate AS BalanceLocal
FROM F203	
	 INNER JOIN F006 ON F203.CurrencyCode = F006.Code
	 INNER JOIN F109 ON F203.SupplierCode = F109.Code  
WHERE 	
	-- F203.BranchCode = prmBranchCode 
	 F203.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	AND F203.PRTNo LIKE prmDocNo
	AND F203.SupplierCode LIKE prmSupplierCode
	AND F109.Name LIKE prmSupplierName	
	AND F203.CurrencyCode LIKE prmCurrencyCode
	and f203.GrandTotalAmount-f203.UsedAmount<>0
	;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_PurchasingDoc_get_Check` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_PurchasingDoc_get_Check` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_PurchasingDoc_get_Check`(
   IN prmBranchCode VARCHAR(50),  
   IN prmDocNo varchar(50)
)
BEGIN
	SELECT
	'GRN' as TransactionType,
	F301.BranchCode, 
	F301.GRNNo 		as DocNo, 
	F301.TransactionDate,	
	F301.SupplierCode 	as SupplierCode, 
	F109.Name 		as SupplierName,
	F109.ContactPerson 	as SupplierContactPerson,  	
	F301.CurrencyCode	as CurrencyCode, 
	F006.Name 		as CurrencyName,
	F301.ExchangeRate,          
        F301.Description	as Description,        
	F301.GrandTotal 				as GrandTotalAmount, 
	(F301.GrandTotal * F301.ExchangeRate)	as GrandTotalAmountLocal,
	F301.PaidAmount 			as PaidAmount, 
	(F301.PaidAmount * F301.ExchangeRate) 	as PaidAmountLocal,
        (F301.GrandTotal - F301.PaidAmount) as Balance,
	(F301.GrandTotal - F301.PaidAmount)* F301.ExchangeRate as BalanceLocal
from F301 
	    INNER JOIN F006 on F301.CurrencyCode = F006.Code 
            INNER JOIN F018 on F301.PaymentTermCode  = F018.Code
	    INNER JOIN F109 on F301.SupplierCode = F109.Code 		    
	   WHERE 
		F301.BranchCode = prmBranchCode 		
		AND F301.GRNNo LIKE prmDocNo
		
		
union all
select
	'PRT' as TransactionType,
	F203.BranchCode, 
	F203.PRTNo 		as DocNo, 
	F203.TransactionDate,
	F203.SupplierCode  	as SupplierCode,
	F109.Name 		As SupplierName,
	F109.ContactPerson 	As SupplierContactPerson,	
	F203.CurrencyCode 	as CurrencyCode,
	F006.Name 		As CurrencyName,
	F203.ExchangeRate,		
	F203.Description	as Description, 	
	F203.GrandTotalAmount				as GrandTotalAmount,
	(F203.GrandTotalAmount * F203.ExchangeRate) 	As GrandTotalAmountLocal, 
	F203.UsedAmount 				as PaidAmount,
	(F203.UsedAmount * F203.ExchangeRate) 		as  PaidAmountLocal,
	(F203.GrandTotalAmount - F203.UsedAmount) as Balance,
	(F203.GrandTotalAmount - F203.UsedAmount)* F203.ExchangeRate as BalanceLocal
FROM F203	
	 INNER JOIN F006 ON F203.CurrencyCode = F006.Code
	 INNER JOIN F109 ON F203.SupplierCode = F109.Code  
WHERE 	
	F203.BranchCode = prmBranchCode 	
	AND F203.PRTNo LIKE prmDocNo
	
	;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesDoc_Check` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesDoc_Check` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesDoc_Check`(
   IN prmBranchCode VARCHAR(50),
   -- IN prmFirstDate Datetime,
   -- IN prmLastDate Datetime,
   IN prmDocNo varchar(50), 
   IN prmCustomerCode varchar(50),
   IN prmCustomerName varchar(100),
   IN prmSalesmanCode varchar(50),
   IN prmSalesmanName varchar(100),
   IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT
	'INV' as TransactionType,
	F607.BranchCode, 
	F607.INVNo 		as DocNo, 
	F607.TransactionDate,	
	F607.CustomerCode	as CustomerCode, 
	F106.Name 		as CustomerName,
	F106.ContactPerson 	as CustomerContactPerson,  
	F607.SalesmanCode 	As SalesmanCode,
	F108.Name 		As SalesmanName, 	
	F607.CurrencyCode	as CurrencyCode, 
	F006.Name 		as CurrencyName,
	F607.ExchangeRate,          
        -- F607.Description	as Description,        
	F607.GrandTotal 			as GrandTotal, 
	(F607.GrandTotal * F607.ExchangeRate)	as GrandTotalAmountLocal,
	F607.PaidAmount 			as PaidAmount, 
	(F607.PaidAmount * F607.ExchangeRate) 	as PaidAmountLocal,
        (F607.GrandTotal - F607.PaidAmount) as Balance,
	(F607.GrandTotal - F607.PaidAmount)* F607.ExchangeRate as BalanceLocal
from F607 
	    INNER JOIN F006 on F607.CurrencyCode = F006.Code 
            INNER JOIN F018 on F607.PaymentTermCode  = F018.Code
	    -- INNER JOIN F106 on F607.BranchCode = F106.BranchCode and F607.CustomerCode = F106.Code 	    
            -- INNER JOIN F108 on F607.BranchCode = F108.BranchCode and F607.SalesmanCode = F108.Code  
		INNER JOIN F106 on F607.CustomerCode = F106.Code 	    
		INNER JOIN F108 on F607.SalesmanCode = F108.Code            
	    
	   WHERE 
		F607.BranchCode = prmBranchCode 
		-- AND F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		AND F607.INVNo LIKE prmDocNo
		AND F607.CustomerCode LIKE prmCustomerCode
		AND F106.Name LIKE prmCustomerName
		AND F607.SalesmanCode LIKE prmSalesmanCode
		AND F108.Name LIKE prmSalesmanName
		AND F607.CurrencyCode LIKE prmCurrencyCode
		
union all
select
	'SRT' as TransactionType,
	F613.BranchCode, 
	F613.SRTNo 		as DocNo, 
	F613.TransactionDate,
	F613.CustomerCode  	as CustomerCode,
	F106.Name 		As CustomerName,
	F106.ContactPerson 	As CustomerContactPerson,	
	F613.SalesmanCode	As SalesmanCode,
	F108.Name 		As SalesmanName,
	F613.CurrencyCode 	as CurrencyCode,
	F006.Name 		As CurrencyName,
	F613.ExchangeRate,		
	-- F613.Description	as Description, 	
	F613.GrandTotalAmount				as GrandTotal,
	(F613.GrandTotalAmount * F613.ExchangeRate) 	As GrandTotalAmountLocal, 
	F613.UsedAmount 				as PaidAmount,
	(F613.UsedAmount * F613.ExchangeRate) 		as  PaidAmountLocal,
	(F613.GrandTotalAmount - F613.UsedAmount) as Balance,
	(F613.GrandTotalAmount - F613.UsedAmount)* F613.ExchangeRate as BalanceLocal
FROM F613	
	 INNER JOIN F006 ON F613.CurrencyCode = F006.Code
	 -- INNER JOIN F106 ON F613.BranchCode = F106.BranchCode AND F613.CustomerCode = F106.Code   
	 -- INNER JOIN F108 ON F613.BranchCode = F108.BranchCode AND F613.SalesmanCode = F108.Code
	INNER JOIN F106 ON F613.CustomerCode = F106.Code   
	INNER JOIN F108 ON F613.SalesmanCode = F108.Code
WHERE 	
	F613.BranchCode = prmBranchCode 
	-- and F613.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	AND F613.SRTNo LIKE prmDocNo
	AND F613.CustomerCode LIKE prmCustomerCode
	AND F106.Name LIKE prmCustomerName
	AND F613.SalesmanCode LIKE prmSalesmanCode
	AND F108.Name LIKE prmSalesmanName
	AND F613.CurrencyCode LIKE prmCurrencyCode
union all
select
	'CDP' as TransactionType,
	F515.BranchCode, 
	F515.CDPNo 		as DocNo, 
	F515.TransactionDate,
	F515.CustomerCode  	as CustomerCode,
	F106.Name 		As CustomerName,
	F106.ContactPerson 	As CustomerContactPerson,	
	'-'			As SalesmanCode,
	'-'			As SalesmanName,
	F515.CurrencyCode 	as CurrencyCode,
	F006.Name 		As CurrencyName,
	F515.ExchangeRate,		
	-- F515.Description	as Description, 	
	F515.TotalTransactionAmount				as GrandTotal,
	(F515.TotalTransactionAmount * F515.ExchangeRate) 	As GrandTotalAmountLocal, 
	F515.PaidAmount 				as PaidAmount,
	(F515.PaidAmount * F515.ExchangeRate) 		as  PaidAmountLocal,
	(F515.TotalTransactionAmount - F515.PaidAmount) as Balance,
	(F515.TotalTransactionAmount - F515.PaidAmount)* F515.ExchangeRate as BalanceLocal
FROM F515	
	 INNER JOIN F006 ON F515.CurrencyCode = F006.Code
	 -- INNER JOIN F106 ON F613.BranchCode = F106.BranchCode AND F613.CustomerCode = F106.Code   
	 -- INNER JOIN F108 ON F613.BranchCode = F108.BranchCode AND F613.SalesmanCode = F108.Code
	INNER JOIN F106 ON F515.CustomerCode = F106.Code   
	-- INNER JOIN F108 ON F515.SalesmanCode = F108.Code
WHERE 	
	F515.BranchCode = prmBranchCode 
	-- and F515.TransactionDate BETWEEN prmFirstDate AND prmLastDate
	AND F515.CDPNo LIKE prmDocNo
	AND F515.CustomerCode LIKE prmCustomerCode
	AND F106.Name LIKE prmCustomerName
	-- AND F515.SalesmanCode LIKE prmSalesmanCode
	-- AND F108.Name LIKE prmSalesmanName
	AND F515.CurrencyCode LIKE prmCurrencyCode
	;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesDoc_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesDoc_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesDoc_get`(
  -- IN prmBranchCode VARCHAR(50),
   IN prmFirstDate Datetime,
   IN prmLastDate Datetime,
   IN prmDocNo varchar(50), 
   IN prmCustomerCode varchar(50),
   IN prmCustomerName varchar(100)
   -- IN prmSalesmanCode varchar(50),
   -- IN prmSalesmanName varchar(100),
   -- IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT
	'INV' AS TransactionType,
	F607.BranchCode, 
	F607.INVNo 		AS DocNo, 
	F607.TransactionDate,	
	F607.CustomerCode	AS CustomerCode, 
	IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
	IF(ISNULL(F106.CityCode), "", f106.CityCode) AS CustomerCityCode,
	IF(ISNULL(F106.Address), "", f106.Address) AS CustomerAddress,
	IF(ISNULL(F106.NPWPAddress), "", f106.NPWPAddress) AS NPWPAddress,
	IF(ISNULL(F106.NPWP), "", f106.NPWP) AS CustomerNPWP,
	IF(ISNULL(F106.ZipCode), "", f106.ZipCode) AS ZipCode,
	IF(ISNULL(F106.Phone1), "", f106.Phone1) AS Phone1,
	IF(ISNULL(F106.Fax), "", f106.Fax) AS Phone1,
	f607.WarehouseCode AS  WarehouseCode,
	f607.Description,
	IF(ISNULL(f048.funit_name), "", f048.funit_name) AS WarehouseName,
	-- F607.SalesmanCode 	AS SalesmanCode,
	-- F108.Name 		AS SalesmanName, 	
	-- F607.CurrencyCode	AS CurrencyCode, 
	-- F006.Name 		AS CurrencyName,
	-- F607.ExchangeRate,          
        -- F607.Description	as Description, 
        F607.TotalTransaction AS TotalTransactionForeign,
        (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
         f607.fbill_ppj,
         (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
         (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
         (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
         (F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal,
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal,        
	-- F607.GrandTotal 			AS GrandTotal, 
 -- (F607.PackingFeeAfterPPN++f607.fbill_ppj+F607.OtherFeeBeforePPN+F607.TotalTransaction+F607.PPh23FeeAfterPPN+F607.PPNAmount) 			AS GrandTotal, 
	-- ((F607.PackingFeeAfterPPN++f607.fbill_ppj+F607.OtherFeeBeforePPN+F607.TotalTransaction+F607.PPh23FeeAfterPPN+F607.PPNAmount) * F607.ExchangeRate)	AS GrandTotalAmountLocal,
(F607.GrandTotal * F607.ExchangeRate) AS GrandTotalAmountLocal,	
(F607.GrandTotal * F607.ExchangeRate) AS GrandTotal,
	F607.PaidAmount 			AS PaidAmount, 
	(F607.PaidAmount * F607.ExchangeRate) 	AS PaidAmountLocal,
        -- (F607.GrandTotal - F607.PaidAmount) AS Balance,
	-- (F607.GrandTotal - F607.PaidAmount)* F607.ExchangeRate AS BalanceLocal,
	((F607.GrandTotal * F607.ExchangeRate)  - F607.PaidAmount) AS Balance,
	((F607.GrandTotal * F607.ExchangeRate) - F607.PaidAmount)* F607.ExchangeRate AS BalanceLocal,
	f607.DeleteStatus
FROM F607 
	    -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code 
            -- INNER JOIN F018 ON F607.PaymentTermCode  = F018.Code
	    -- INNER JOIN F106 on F607.BranchCode = F106.BranchCode and F607.CustomerCode = F106.Code 	    
            -- INNER JOIN F108 on F607.BranchCode = F108.BranchCode and F607.SalesmanCode = F108.Code  
		LEFT JOIN F106 ON F607.CustomerCode = F106.Code 
		 LEFT JOIN f048 ON F607.WareHouseCode = f048.funit_code	    
		-- INNER JOIN F108 ON F607.SalesmanCode = F108.Code            
	    
	   WHERE 
		-- F607.BranchCode = prmBranchCode 
		 F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		AND F607.INVNo LIKE prmDocNo
		AND F607.CustomerCode LIKE prmCustomerCode
		AND F106.Name LIKE prmCustomerName
	and f607.GrandTotal-f607.PaidAmount<>0
	
	
	;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesDoc_get2` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesDoc_get2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesDoc_get2`(
   IN prmBranchCode VARCHAR(50),
   IN prmFirstDate DATETIME,
   IN prmLastDate DATETIME,
   IN prmDocNo VARCHAR(50), 
   IN prmCustomerCode VARCHAR(50),
   IN prmCustomerName VARCHAR(100)
   -- IN prmSalesmanCode varchar(50),
   -- IN prmSalesmanName varchar(100),
   -- IN prmCurrencyCode varchar(50)
)
BEGIN
	SELECT 
	'INV' AS TransactionType,
	F607.BranchCode, 
	F607.INVNo 		AS DocNo, 
	F607.TransactionDate,	
	F607.CustomerCode	AS CustomerCode, 
	IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
	IF(ISNULL(F106.CityCode), "", f106.CityCode) AS CustomerCityCode,
	IF(ISNULL(F106.Address), "", f106.Address) AS CustomerAddress,
	IF(ISNULL(F106.NPWPAddress), "", f106.NPWPAddress) AS NPWPAddress,
	IF(ISNULL(F106.NPWP), "", f106.NPWP) AS CustomerNPWP,
	IF(ISNULL(F106.ZipCode), "", f106.ZipCode) AS ZipCode,
	IF(ISNULL(F106.Phone1), "", f106.Phone1) AS Phone1,
	IF(ISNULL(F106.Fax), "", f106.Fax) AS Phone1,
	f607.WarehouseCode AS  WarehouseCode,
	f607.Description,
	IF(ISNULL(f048.funit_name), "", f048.funit_name) AS WarehouseName,
	-- F607.SalesmanCode 	AS SalesmanCode,
	-- F108.Name 		AS SalesmanName, 	
	-- F607.CurrencyCode	AS CurrencyCode, 
	-- F006.Name 		AS CurrencyName,
	-- F607.ExchangeRate,          
        -- F607.Description	as Description, 
        F607.TotalTransaction AS TotalTransactionForeign,
        (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
         f607.fbill_ppj,
         (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
         (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
         (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
         (F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal,
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal,        
	-- F607.GrandTotal 			AS GrandTotal, 
 -- (F607.PackingFeeAfterPPN++f607.fbill_ppj+F607.OtherFeeBeforePPN+F607.TotalTransaction+F607.PPh23FeeAfterPPN+F607.PPNAmount) 			AS GrandTotal, 
	-- ((F607.PackingFeeAfterPPN++f607.fbill_ppj+F607.OtherFeeBeforePPN+F607.TotalTransaction+F607.PPh23FeeAfterPPN+F607.PPNAmount) * F607.ExchangeRate)	AS GrandTotalAmountLocal,
(F607.GrandTotal * F607.ExchangeRate) AS GrandTotalAmountLocal,	
(F607.GrandTotal * F607.ExchangeRate) AS GrandTotal,
	F607.PaidAmount 			AS PaidAmount, 
	(F607.PaidAmount * F607.ExchangeRate) 	AS PaidAmountLocal,
        -- (F607.GrandTotal - F607.PaidAmount) AS Balance,
	-- (F607.GrandTotal - F607.PaidAmount)* F607.ExchangeRate AS BalanceLocal,
	((F607.GrandTotal * F607.ExchangeRate)  - F607.PaidAmount) AS Balance,
	((F607.GrandTotal * F607.ExchangeRate) - F607.PaidAmount)* F607.ExchangeRate AS BalanceLocal,
	f607.DeleteStatus
FROM F607 
	    -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code 
            -- INNER JOIN F018 ON F607.PaymentTermCode  = F018.Code
	    -- INNER JOIN F106 on F607.BranchCode = F106.BranchCode and F607.CustomerCode = F106.Code 	    
            -- INNER JOIN F108 on F607.BranchCode = F108.BranchCode and F607.SalesmanCode = F108.Code  
		LEFT JOIN F106 ON F607.CustomerCode = F106.Code 
		 LEFT JOIN f048 ON F607.WareHouseCode = f048.funit_code	    
		-- INNER JOIN F108 ON F607.SalesmanCode = F108.Code            
	    
	   WHERE 
		 SUBSTRING(f607.INVNo,5,3) LIKE prmBranchCode AND 
		 F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate
		AND F607.INVNo LIKE prmDocNo
		AND F607.CustomerCode LIKE prmCustomerCode
		AND F106.Name LIKE prmCustomerName
	AND f607.GrandTotal-f607.PaidAmount<>0
	
	
	;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesDoc_get_Check` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesDoc_get_Check` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesDoc_get_Check`(
   -- IN prmBranchCode VARCHAR(50),  
   IN prmDocNo varchar(50)
 
)
BEGIN
	SELECT
	'INV' AS TransactionType,
	F607.BranchCode, 
	F607.INVNo 		AS DocNo, 
	F607.TransactionDate,	
	F607.CustomerCode	AS CustomerCode, 
	F106.Name 		AS CustomerName,
	F106.ContactPerson 	AS CustomerContactPerson,  
	-- F607.SalesmanCode 	AS SalesmanCode,
	-- F108.Name 		AS SalesmanName, 	
	-- F607.CurrencyCode	AS CurrencyCode, 
	-- F006.Name 		AS CurrencyName,
	-- F607.ExchangeRate,          
        -- F607.Description	as Description,        
	F607.GrandTotal 			AS GrandTotal, 
	(F607.GrandTotal * F607.ExchangeRate)	AS GrandTotalAmountLocal,
	F607.PaidAmount 			AS PaidAmount, 
	(F607.PaidAmount * F607.ExchangeRate) 	AS PaidAmountLocal,
        (F607.GrandTotal - F607.PaidAmount) AS Balance,
	(F607.GrandTotal - F607.PaidAmount)* F607.ExchangeRate AS BalanceLocal
FROM F607 
	    -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code 
            -- INNER JOIN F018 ON F607.PaymentTermCode  = F018.Code
	    -- INNER JOIN F106 on F607.BranchCode = F106.BranchCode and F607.CustomerCode = F106.Code 	    
            -- INNER JOIN F108 on F607.BranchCode = F108.BranchCode and F607.SalesmanCode = F108.Code  
		INNER JOIN F106 ON F607.CustomerCode = F106.Code 	    
		-- INNER JOIN F108 ON F607.SalesmanCode = F108.Code            
	    
	   WHERE 
		-- F607.BranchCode = prmBranchCode 
		--  F607.TransactionDate BETWEEN prmFirstDate AND '2012-05-30'
		 F607.INVNo LIKE prmDocNo
		-- AND F607.CustomerCode LIKE prmCustomerCode
		-- AND F106.Name LIKE prmCustomerName
		-- AND F607.SalesmanCode LIKE prmSalesmanCode
		-- AND F108.Name LIKE prmSalesmanName
		-- AND F607.CurrencyCode LIKE prmCurrencyCode
	
	;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesPerCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesPerCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_SalesPerCustomer`(prmBranchCode TEXT, prmFirstDate Datetime, prmLastDate datetime, prmCustomer1 Text, prmCustomer2 Text)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
	SELECT 
    F607.BranchCode,
    -- F001.Name AS BranchName,
    F607.INVNo,
	F607.PostingSend,
	F607.PostingRec,
    F607.RefNo,
    F607.VoucherNo, 
    F607.TransactionDate, 
	F607.FromDate,
	F607.ToDate,
    F607.CurrencyCode,
    -- F006.Name AS CurrencyName, 
	IF(ISNULL(f607b.FakNo), "", f607b.FakNo) AS FakNo,
IF(ISNULL(f607.BPno), "", f607.BPno) AS BPno,
IF(ISNULL(f607b.FakDate), NOW(), f607b.FakDate) AS FakDate,
	F607.FakDate,
	F607.StatusRef,
	F607.FakNoRef,
	F607.FakRefDate,
	F607.BankAccountCode,
	-- F103.Name AS BankAccountName,
    F607.PaymentTermCode,
    -- F018.Name AS PaymentTermName,
    -- F018.Days AS PaymentTermDays, 
    F607.ExchangeRate, 
    F607.CustomerCode,
    IF(ISNULL(F106.Name), "", f106.name) AS CustomerName,
	IF(ISNULL(F106.ContactPerson), "", f106.ContactPerson) AS CustomerContactPerson,
    F607.SalesmanCode,
    -- F108.Name AS SalesmanName,
    F607.WarehouseCode,
    -- F110.Name AS WarehouseName,
    F106.Name AS Description, 
    F607.TotalTransaction AS TotalTransactionForeign,
    (F607.TotalTransaction * F607.ExchangeRate) AS TotalTransactionLocal,
    F607.DiscountPercent,
    F607.DiscountAmount AS DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) AS DiscountAmountLocal,
    F607.OtherFeeBeforePPN AS OtherFeeBeforePPNForeign,
    (F607.OtherFeeBeforePPN * F607.ExchangeRate) AS OtherFeeBeforePPNLocal,
    F607.PPNPercent,
    F607.PPNAmount AS PPNAmountForeign,
    (F607.PPNAmount * F607.ExchangeRate) AS PPNAmountLocal,
    F607.OtherFeeAfterPPN AS OtherFeeAfterPPNForeign,
    (F607.OtherFeeAfterPPN * F607.ExchangeRate) AS OtherFeeAfterPPNLocal,
	F607.MateraiFeeAfterPPN   AS MateraiFeeAfterPPNForeign, 
	(F607.MateraiFeeAfterPPN * F607.ExchangeRate)   AS MateraiFeeAfterPPNLocal, 
   F607.PackingFeeAfterPPN 			      AS PackingFeeAfterPPNForeign, 
	(F607.PackingFeeAfterPPN * F607.ExchangeRate)   AS PackingFeeAfterPPNLocal, 
   F607.AsuransiFeeAfterPPN 			      AS AsuransiFeeAfterPPNForeign, 
	(F607.AsuransiFeeAfterPPN * F607.ExchangeRate)   AS AsuransiFeeAfterPPNLocal, 
   F607.PPh23FeeAfterPPN 			      AS PPh23FeeAfterPPNForeign, 
	(F607.PPh23FeeAfterPPN * F607.ExchangeRate)   AS PPh23FeeAfterPPNLocal, 
    F607.FinalDiscount AS FinalDiscountForeign,
    (F607.FinalDiscount * F607.ExchangeRate) AS FinalDiscountLocal,
	F607.DeductionAfterPPn 			      AS DeductionAfterPPnForeign, 
	(F607.DeductionAfterPPn * F607.ExchangeRate)   AS DeductionAfterPPnLocal,
      F607.TotalTransaction+F607.PackingFeeAfterPPN + F607.OtherFeeBeforePPN AS GrandTotalForeign,
    -- (F607.GrandTotal * F607.ExchangeRate)  AS GrandTotalLocal,
    F607.TotalTransaction+F607.PackingFeeAfterPPN + F607.OtherFeeBeforePPN AS GrandTotalLocal,
    F607.CreatedBy, 
	f607.fbill_ppj,
    F607.CreatedBy, 
    F607.CreatedDate, 
    F607.UpdatedBy, 
    F607.UpdatedDate
FROM   F607
       -- INNER JOIN F001 ON F607.BranchCode = F001.Code
      -- INNER JOIN F006 ON F607.CurrencyCode = F006.Code
        LEFT JOIN f607b ON f607b.INVNo = F607.INVNo
       -- INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
       INNER JOIN F106 ON F607.CustomerCode = F106.Code
       -- INNER JOIN F108 ON F607.SalesmanCode = F108.Code
       -- INNER JOIN F110 ON F607.WarehouseCode = F110.Code
Where F607.TransactionDate between prmFirstdate and prmLastdate
AND F607.CustomerCode BETWEEN prmCustomer1 AND prmCustomer2
AND F607.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesPerCustomer_PerItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesPerCustomer_PerItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesPerCustomer_PerItem`(prmBranchCode Text, prmFirstDate Date, prmLastDate Date, prmCustomer1 Text, prmCustomer2 Text)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
select F607.BranchCode,
       F001.Name AS BranchName,
       F607.INVNo,
       F607.SODNo,
       F607.VoucherNo,
       F607.TransactionDate,
       F607.ExchangeRate,
       F607.TaxStatus,
       F013.Code As ItemCode,
       F013.Name AS ItemName,
       F006.Code AS CurrencyCode,
       F006.Name AS CurrencyName,
       F018.Code AS PaymentTermCode,
       F018.Name AS PaymentTermName,
       F106.Code As CustomerCode,
       F106.Name AS CustomerName,
       F108.Code AS SalesmanCode,
       F108.Name AS SalesmanName,
       F110.Code AS WarehouseCode,
       F110.Name AS WarehouseName,
       F608.Quantity,
       F608.BonusQuantity,
       F608.Price,
       F607.TotalTransaction AS GrossSales,
       F607.DiscountAmount AS DiscAmountHeader,
       F607.FinalDiscount AS FinalDiscountHeader,
       F607.OtherFeeBeforePPN AS OtherFeeDiscountBeforePPNHeader,
       F607.PPNAmount AS PPNAmountHeader,
       F607.OtherFeeAfterPPN AS OtherFeeAfterPPNHeader,
       F607.GrandTotal AS GrandTotal,
       F607.PaidAmount As PaidAmountHeader
From   F607
       INNER JOIN F608 ON F607.INVNo = F608.INVNo 
       INNER JOIN F013 ON F608.ItemCode = F013.Code
       INNER JOIN F001 ON F607.BranchCode = F001.Code
       INNER JOIN F006 ON F607.CurrencyCode = F006.Code
       INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
       INNER JOIN F106 ON F607.CustomerCode = F106.Code
       INNER JOIN F108 ON F607.SalesmanCode = F108.Code
       INNER JOIN F110 ON F607.WarehouseCode = F110.Code
Where F607.TransactionDate between prmFirstdate and prmLastdate
AND F607.CustomerCode BETWEEN prmCustomer1 AND prmCustomer2
AND F607.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesPerItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesPerItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesPerItem`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime, prmItem1 Text, prmItem2 Text)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");    
select F607.BranchCode,
       F001.Name AS BranchName,
       F607.INVNo,
       F607.SODNo,
       F607.VoucherNo,
       F607.TransactionDate,
       F607.ExchangeRate,
       F607.TaxStatus,
       F013.Code As ItemCode,
       F013.Name AS ItemName,
       F006.Code AS CurrencyCode,
       F006.Name AS CurrencyName,
       F018.Code AS PaymentTermCode,
       F018.Name AS PaymentTermName,
       F106.Code As CustomerCode,
       F106.Name AS CustomerName,
       F108.Code AS SalesmanCode,
       F108.Name AS SalesmanName,
       F110.Code AS WarehouseCode,
       F110.Name AS WarehouseName,
       F608.Quantity,
       F608.BonusQuantity,
       F608.Price,
       F607.TotalTransaction AS GrossSales,
       F607.DiscountAmount AS DiscAmountHeader,
       F607.FinalDiscount AS FinalDiscountHeader,
       F607.OtherFeeBeforePPN AS OtherFeeDiscountBeforePPNHeader,
       F607.PPNAmount AS PPNAmountHeader,
       F607.OtherFeeAfterPPN AS OtherFeeAfterPPNHeader,
       F607.GrandTotal AS GrandTotal,
       F607.PaidAmount As PaidAmountHeader
From   F607
       INNER JOIN F608 ON F607.INVNo = F608.INVNo 
       INNER JOIN F013 ON F608.ItemCode = F013.Code
       INNER JOIN F001 ON F607.BranchCode = F001.Code
       INNER JOIN F006 ON F607.CurrencyCode = F006.Code
       INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
       INNER JOIN F106 ON F607.CustomerCode = F106.Code
       INNER JOIN F108 ON F607.SalesmanCode = F108.Code
       INNER JOIN F110 ON F607.WarehouseCode = F110.Code
Where F607.TransactionDate between prmFirstdate and prmLastdate
AND F608.ItemCode BETWEEN prmItem1 AND prmItem2
AND F607.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesPerSalesman` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesPerSalesman` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesPerSalesman`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime, prmSalesman1 Text, prmSalesman2 Text)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
select F607.BranchCode,
       F001.Name AS BranchName,
       F607.INVNo,
       F607.SODNo,
       F607.VoucherNo,
       F607.TransactionDate,
       F607.ExchangeRate,
       F607.TaxStatus,
       F006.Code AS CurrencyCode,
       F006.Name AS CurrencyName,
       F018.Code AS PaymentTermCode,
       F018.Name AS PaymentTermName,
       F106.Code As CustomerCode,
       F106.Name AS CustomerName,
       F108.Code AS SalesmanCode,
       F108.Name AS SalesmanName,
       F110.Code AS WarehouseCode,
       F110.Name AS WarehouseName,
       F607.TotalTransaction AS GrossSales,
       F607.DiscountAmount AS DiscAmountHeader,
       F607.FinalDiscount AS FinalDiscountHeader,
       F607.OtherFeeBeforePPN AS OtherFeeDiscountBeforePPNHeader,
       F607.PPNAmount AS PPNAmountHeader,
       F607.OtherFeeAfterPPN AS OtherFeeAfterPPNHeader,
       F607.GrandTotal AS GrandTotal,
       F607.PaidAmount As PaidAmountHeader
From   F607
       INNER JOIN F001 ON F607.BranchCode = F001.Code
       INNER JOIN F006 ON F607.CurrencyCode = F006.Code
       INNER JOIN F018 ON F607.PaymentTermCode = F018.Code
       INNER JOIN F106 ON F607.CustomerCode = F106.Code
       INNER JOIN F108 ON F607.SalesmanCode = F108.Code
       INNER JOIN F110 ON F607.WarehouseCode = F110.Code
Where F607.TransactionDate between prmFirstdate and prmLastdate
AND F607.SalesmanCode BETWEEN prmSalesman1 AND prmSalesman2
AND F607.BranchCode IN (SELECT * FROM Temp_SplitString);
   DROP TEMPORARY TABLE Temp_SplitString;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesRecapitulation_PerCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesRecapitulation_PerCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesRecapitulation_PerCustomer`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime, prmCustomer1 Text, prmCustomer2 Text)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
SELECT 
	Qry1.CurrencyCode, Qry1.CustomerCode, Qry1.BranchCode, Qry1.BranchName, Qry1.CustomerName, Qry1.SalesAmount, Qry1.SalesQuantity, Qry1.TransactionDate,  
    IFNULL(Qry2.ReturnAmount,0) AS ReturnAmount, IFNULL(Qry2.ReturnQuantity,0) AS ReturnQuantity
FROM
	(SELECT 
			F607.CurrencyCode,
		    F607.CustomerCode,
            F607.BranchCode,
            F607.TransactionDate,
            F001.Name AS BranchName,
            F106.Name AS CustomerName,   
	   sum(TotalTransaction) AS SalesAmount,
       sum(Quantity) AS SalesQuantity
	   FROM F607
			INNER JOIN F608 ON F607.InvNo = F608.InvNo
            INNER JOIN F001 ON F607.BranchCode = F001.Code
            INNER JOIN F106 ON F607.CustomerCode = F106.Code
	   WHERE F607.TransactionDate BETWEEN prmFirstdate AND prmLastdate
       AND F607.CustomerCode BETWEEN prmCustomer1 AND prmCustomer2 
	   GROUP BY CurrencyCode, CustomerCode, BranchName
    ) Qry1
	LEFT JOIN
	(
		SELECT
			F613.BranchCode,
			CurrencyCode,
		    CustomerCode,
			sum(TotalTransactionAmount) AS ReturnAmount,
            sum(Quantity) AS ReturnQuantity
		FROM F613
			INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
		WHERE F613.TransactionDate BETWEEN prmFirstdate AND prmLastdate
		AND F613.CustomerCode BETWEEN prmCustomer1 AND prmCustomer2
        GROUP BY CurrencyCode, CustomerCode
    ) Qry2
    ON Qry1.CurrencyCode = Qry2.CurrencyCode AND Qry1.CustomerCode = Qry2.CustomerCode AND Qry1.BranchCode = Qry2.BranchCode
    WHERE Qry1.BranchCode IN (SELECT * FROM Temp_SplitString);
    DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesRecapitulation_PerItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesRecapitulation_PerItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesRecapitulation_PerItem`(prmBranchCode Varchar(50), prmFirstDate Datetime, prmLastDate datetime, prmItem1 Text, prmItem2 Text)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
SELECT 
	Qry1.CurrencyCode, Qry1.ItemCode, Qry1.BranchCode, Qry1.BranchName, Qry1.ItemName, Qry1.SalesAmount, Qry1.SalesQuantity, Qry1.TransactionDate,  
    IFNULL(Qry2.ReturnAmount,0) AS ReturnAmount, IFNULL(Qry2.ReturnQuantity,0) AS ReturnQuantity
FROM
	(SELECT 
			F607.CurrencyCode,
		    F608.ItemCode,
            F607.BranchCode,
            F607.TransactionDate,
            F001.Name AS BranchName,
            F013.Name AS ItemName,   
	   sum(TotalTransaction) AS SalesAmount,
       sum(Quantity) AS SalesQuantity
	   FROM F607
			INNER JOIN F608 ON F607.InvNo = F608.InvNo
            INNER JOIN F001 ON F607.BranchCode = F001.Code
            INNER JOIN F013 ON F608.ItemCode = F013.Code
	   WHERE F607.TransactionDate BETWEEN prmFirstdate AND prmLastdate
	   AND F608.ItemCode BETWEEN prmItem1 AND prmItem2
	   GROUP BY CurrencyCode, ItemCode, BranchName
    ) Qry1
	LEFT JOIN
	(
		SELECT
			F613.BranchCode,
			CurrencyCode,
		    F614.ItemCode,
			sum(TotalTransactionAmount) AS ReturnAmount,
            sum(Quantity) AS ReturnQuantity
		FROM F613
			INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
		WHERE F613.TransactionDate BETWEEN prmFirstdate AND prmLastdate
		AND F614.ItemCode BETWEEN prmItem1 AND prmItem2
        GROUP BY CurrencyCode, ItemCode
    ) Qry2
    ON Qry1.CurrencyCode = Qry2.CurrencyCode AND Qry1.ItemCode = Qry2.ItemCode AND Qry1.BranchCode = Qry2.BranchCode
    WHERE Qry1.BranchCode IN (SELECT * FROM Temp_SplitString);
    DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesRecapitulation_PerSalesman` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesRecapitulation_PerSalesman` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesRecapitulation_PerSalesman`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime, prmSalesman1 Text, prmSalesman2 Text)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
SELECT 
	Qry1.CurrencyCode, Qry1.SalesmanCode, Qry1.BranchCode, Qry1.BranchName, Qry1.SalesmanName, Qry1.SalesAmount, Qry1.SalesQuantity, Qry1.TransactionDate,  
    IFNULL(Qry2.ReturnAmount,0) AS ReturnAmount, IFNULL(Qry2.ReturnQuantity,0) AS ReturnQuantity
FROM
	(SELECT 
			F607.CurrencyCode,
		    F607.SalesmanCode,
            F607.BranchCode,
            F607.TransactionDate,
            F001.Name AS BranchName,
            F108.Name AS SalesmanName,   
	   sum(TotalTransaction) AS SalesAmount,
       sum(Quantity) AS SalesQuantity
	   FROM F607
			INNER JOIN F608 ON F607.InvNo = F608.InvNo
            INNER JOIN F001 ON F607.BranchCode = F001.Code
            INNER JOIN F108 ON F607.SalesmanCode = F108.Code
	   WHERE F607.TransactionDate BETWEEN prmFirstdate AND prmLastdate
	   AND F607.SalesmanCode BETWEEN prmSalesman1 AND prmSalesman2
	   GROUP BY CurrencyCode, SalesmanCode, BranchName
    ) Qry1
	LEFT JOIN
	(
		SELECT
			F613.BranchCode,
			CurrencyCode,
		    SalesmanCode,
			sum(TotalTransactionAmount) AS ReturnAmount,
            sum(Quantity) AS ReturnQuantity
		FROM F613
			INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
		WHERE F613.TransactionDate BETWEEN prmFirstdate AND prmLastdate
		AND F613.SalesmanCode BETWEEN prmSalesman1 AND prmSalesman2
        GROUP BY CurrencyCode, SalesmanCode
    ) Qry2
    ON Qry1.CurrencyCode = Qry2.CurrencyCode AND Qry1.SalesmanCode = Qry2.SalesmanCode AND Qry1.BranchCode = Qry2.BranchCode
    WHERE Qry1.BranchCode IN (SELECT * FROM Temp_SplitString);
    DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesReturnPerItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesReturnPerItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesReturnPerItem`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime, prmItem1 Text, prmItem2 Text)
BEGIN
CALL usp_string_to_mysqlrow(prmBranchCode, ",");
    
SELECT F613.BranchCode,
           F001.Name AS BranchName,
           F613.SRTNo,
           F613.TransactionDate,
           F613.ExchangeRate,
           F613.RefNo,
           F613.Description,
           F006.Code AS CurrencyCode,
		   F006.Name AS CurrencyName,
           F106.Code AS CustomerCode,
           F106.Name AS CustomerName,
           F108.Code AS SalesmanCode,
           F108.Name AS SalesmanName,
           F110.Code AS WarehouseCode,
           F110.Name AS WarehouseName,
           F613.TotalTransactionAmount AS GrossReturn,
           F613.DiscountPercent AS DiscountPercentHeader,
           F613.DiscountAmount AS DiscountAmountHeader,
           F613.PPNPercent AS PPNPercentHeader,
           F613.PPNAmount AS PPNAmountHeader,
           F613.OtherFee AS OtherFeeHeader,
           F613.GrandTotalAmount AS GrandTotalAmountHeader,
           F613.UsedAmount,
           F614.ItemCode,
           F013.Name AS ItemName,
           F614.Quantity,
           F614.Price,
           F614.InvNo,
           F614.DiscountPercent1,
           F614.DiscountAmount1,
           F614.DiscountPercent2,
           F614.DiscountAmount2,
           F614.DiscountPercent3,
           F614.DiscountAmount3
FROM F613
         INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
         INNER JOIN F001 ON F613.BranchCode = F001.Code
         INNER JOIN F006 ON F613.CurrencyCode = F006.Code
         INNER JOIN F106 ON F613.CustomerCode = F106.Code
         INNER JOIN F108 ON F613.SalesmanCode = F108.Code
         INNER JOIN F110 ON F613.WarehouseCode = F110.Code
         INNER JOIN F013 ON F614.ItemCode = F013.Code
     WHERE F613.TransactionDate BETWEEN prmFirstdate AND prmLastdate
     AND F614.ItemCode BETWEEN prmItem1 AND prmItem2
     AND F613.BranchCode IN (SELECT * FROM Temp_SplitString);
DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesReturn_PerCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesReturn_PerCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesReturn_PerCustomer`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime, prmCustomer1 Text, prmCustomer2 Text)
BEGIN
    CALL usp_string_to_mysqlrow(prmBranchCode, ",");
    SELECT F613.BranchCode,
           F001.Name AS BranchName,
           F613.SRTNo,
           F613.TransactionDate,
           F613.ExchangeRate,
           F613.RefNo,
           F613.Description,
           F006.Code AS CurrencyCode,
		   F006.Name AS CurrencyName,
           F106.Code AS CustomerCode,
           F106.Name AS CustomerName,
           F108.Code AS SalesmanCode,
           F108.Name AS SalesmanName,
           F110.Code AS WarehouseCode,
           F110.Name AS WarehouseName,
           F613.TotalTransactionAmount AS GrossReturn,
           F613.DiscountPercent AS DiscountPercentHeader,
           F613.DiscountAmount AS DiscountAmountHeader,
           F613.PPNPercent AS PPNPercentHeader,
           F613.PPNAmount AS PPNAmountHeader,
           F613.OtherFee AS OtherFeeHeader,
           F613.GrandTotalAmount AS GrandTotalAmountHeader,
           F613.UsedAmount,
           F614.ItemCode,
           F013.Name AS ItemName,
           F614.Quantity,
           F614.Price,
           F614.InvNo,
           F614.DiscountPercent1,
           F614.DiscountAmount1,
           F614.DiscountPercent2,
           F614.DiscountAmount2,
           F614.DiscountPercent3,
           F614.DiscountAmount3
FROM F613
         INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
         INNER JOIN F001 ON F613.BranchCode = F001.Code
         INNER JOIN F006 ON F613.CurrencyCode = F006.Code
         INNER JOIN F106 ON F613.CustomerCode = F106.Code
         INNER JOIN F108 ON F613.SalesmanCode = F108.Code
         INNER JOIN F110 ON F613.WarehouseCode = F110.Code
         INNER JOIN F013 ON F614.ItemCode = F013.Code
WHERE F613.TransactionDate BETWEEN prmFirstdate AND prmLastdate
AND F613.CustomerCode BETWEEN prmCustomer1 AND prmCustomer2
AND F613.BranchCode IN (SELECT * FROM Temp_SplitString);
DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesReturn_PerCustomer_PerItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesReturn_PerCustomer_PerItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesReturn_PerCustomer_PerItem`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime, prmCustomer1 Text, prmCustomer2 Text)
BEGIN
    CALL usp_string_to_mysqlrow(prmBranchCode, ",");
    SELECT F613.BranchCode,
           F001.Name AS BranchName,
           F613.SRTNo,
           F613.TransactionDate,
           F613.ExchangeRate,
           F613.RefNo,
           F613.Description,
           F006.Code AS CurrencyCode,
		   F006.Name AS CurrencyName,
           F106.Code AS CustomerCode,
           F106.Name AS CustomerName,
           F108.Code AS SalesmanCode,
           F108.Name AS SalesmanName,
           F110.Code AS WarehouseCode,
           F110.Name AS WarehouseName,
           F613.TotalTransactionAmount AS GrossReturn,
           F613.DiscountPercent AS DiscountPercentHeader,
           F613.DiscountAmount AS DiscountAmountHeader,
           F613.PPNPercent AS PPNPercentHeader,
           F613.PPNAmount AS PPNAmountHeader,
           F613.OtherFee AS OtherFeeHeader,
           F613.GrandTotalAmount AS GrandTotalAmountHeader,
           F613.UsedAmount,
           F614.ItemCode,
           F013.Name AS ItemName,
           F614.Quantity,
           F614.Price,
           F614.InvNo,
           F614.DiscountPercent1,
           F614.DiscountAmount1,
           F614.DiscountPercent2,
           F614.DiscountAmount2,
           F614.DiscountPercent3,
           F614.DiscountAmount3
FROM F613
         INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
         INNER JOIN F001 ON F613.BranchCode = F001.Code
         INNER JOIN F006 ON F613.CurrencyCode = F006.Code
         INNER JOIN F106 ON F613.CustomerCode = F106.Code
         INNER JOIN F108 ON F613.SalesmanCode = F108.Code
         INNER JOIN F110 ON F613.WarehouseCode = F110.Code
         INNER JOIN F013 ON F614.ItemCode = F013.Code
WHERE F613.TransactionDate BETWEEN prmFirstdate AND prmLastdate
AND F613.CustomerCode BETWEEN prmCustomer1 AND prmCustomer2
AND F613.BranchCode IN (SELECT * FROM Temp_SplitString);
DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SalesReturn_PerSalesman` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SalesReturn_PerSalesman` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SalesReturn_PerSalesman`(prmBranchCode Text, prmFirstDate Datetime, prmLastDate datetime, prmSalesman1 Text, prmSalesman2 Text)
BEGIN
    CALL usp_string_to_mysqlrow(prmBranchCode, ",");
    SELECT F613.BranchCode,
           F001.Name AS BranchName,
           F613.SRTNo,
           F613.TransactionDate,
           F613.ExchangeRate,
           F613.RefNo,
           F613.Description,
           F006.Code AS CurrencyCode,
		   F006.Name AS CurrencyName,
           F106.Code AS CustomerCode,
           F106.Name AS CustomerName,
           F108.Code AS SalesmanCode,
           F108.Name AS SalesmanName,
           F110.Code AS WarehouseCode,
           F110.Name AS WarehouseName,
           F613.TotalTransactionAmount AS GrossReturn,
           F613.DiscountPercent AS DiscountPercentHeader,
           F613.DiscountAmount AS DiscountAmountHeader,
           F613.PPNPercent AS PPNPercentHeader,
           F613.PPNAmount AS PPNAmountHeader,
           F613.OtherFee AS OtherFeeHeader,
           F613.GrandTotalAmount AS GrandTotalAmountHeader,
           F613.UsedAmount,
           F614.ItemCode,
           F013.Name AS ItemName,
           F614.Quantity,
           F614.Price,
           F614.InvNo,
           F614.DiscountPercent1,
           F614.DiscountAmount1,
           F614.DiscountPercent2,
           F614.DiscountAmount2,
           F614.DiscountPercent3,
           F614.DiscountAmount3
FROM F613
         INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
         INNER JOIN F001 ON F613.BranchCode = F001.Code
         INNER JOIN F006 ON F613.CurrencyCode = F006.Code
         INNER JOIN F106 ON F613.CustomerCode = F106.Code
         INNER JOIN F108 ON F613.SalesmanCode = F108.Code
         INNER JOIN F110 ON F613.WarehouseCode = F110.Code
         INNER JOIN F013 ON F614.ItemCode = F013.Code
WHERE F613.TransactionDate BETWEEN prmFirstdate AND prmLastdate
AND F613.SalesmanCode BETWEEN prmSalesman1 AND prmSalesman2
AND F613.BranchCode IN (SELECT * FROM Temp_SplitString);
DROP TEMPORARY TABLE Temp_SplitString;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SDPNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SDPNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SDPNo_get`(
	prmBranchCode VARCHAR(50),
	prmSDPNo VARCHAR(50)
)
BEGIN
		SELECT  
			F517.BranchCode, 
			F001.Name As BranchName,
			F517.SDPNo,			
			F517.RefNo,
			F517.TransactionDate,
			F517.CurrencyCode,
			F006.Name as CurrencyName,
			F517.SupplierCode,
			F109.Name as SupplierName,
			F517.SupplierNameAlias,
			F518.SDPDescription,
			F518.Amount,
			F517.TotalTransactionAmount			
		FROM F517			
			Inner Join F001 On F517.BranchCode = F001.Code
			INNER JOIN F109 on F517.SupplierCode = F109.Code
			Inner Join F006 On F517.CurrencyCode = F006.Code
			INNER JOIN F518 ON F517.SDPNo = F518.SDPNo
		WHERE 
			F517.SDPNo like prmSDPNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SODNo_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SODNo_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SODNo_Get`(
	prmBranchCode VARCHAR(50),
	prmSODNo VARCHAR(50)
)
BEGIN
SELECT 
       F603.BranchCode,
       F001.Name As BranchName,
       F001.Address As BranchAddress,
       F001.Phone1 As BranchPhone1,
       F001.Fax As BranchFax,
       F001.EmailAddress As BranchEmail,
       F603.SODNo,
       F603.TransactionDate,
       F603.ClosingDate,
       F603.DeliveryDateStart,
       F603.DeliveryDateEnd,
       F018.Code          as PaymentTermCode,
       F018.Name          as PaymentTermName,
       F106.Code          as CustomerCode,
       F106.Name          as CustomerName,
       F106.Address       as CustomerAddress,
       F106.ZipCode       as CustomerZipCode,
       F106.NPWP          as CustomerNPWP,
       F106.NPWPAddress   as CustomerNPWPAddress,
       F106.Phone1             as CustomerPhone1,
       F106.Phone2             as CustomerPhone2,
       F106.Fax                as CustomerFax,
       F603.CustomerContact    as CustomerContactPerson,
       F106.CompanyTypeCode    as CustomerCompanyTypeCode,
       F106.EmailAddress       as CustomerEmailAddress,
       F603.SalesmanCode,
       F108.Name As SalesmanName,
       F006.Code               as CurrencyCode,
       F006.Name               as CurrencyName,
       F009.Code               as CustomerCityCode,
       F009.Name               as CustomerCityName,
       F010.Code               as CustomerCountrycode,
       F010.Name               as CustomerCountryName,
       F603.Description        as SODDescriptionHeader,
       F603.TotalTransactionAmount as SODTotalTransactionAmount,
       F603.DiscountPercent        as SODDiscountPercentHeader,
       F603.DiscountAmount         as SODDiscountAmountHeader,
       F603.PPNPercent             as SODPPNPercentHeader,
       F603.PPNAmount              as SODPPNAmountHeader,
       F603.FreightFeeAmount       as SODFreightFeeAmount,
       F603.InsuranceFeeAmount     as SODInsuranceFeeAmount,
       F603.AdministrationFeeAmount     as SODAdministrationFeeAmount,
       F603.OtherFeeAmount              as SODOtherFeeAmount,
       F603.FinalDiscount		as SODFinalDiscount,
       F603.GrandTotalAmount            as SODGrandTotalAmount,
       F603.ClosingStatus               as SODClosingStatus,
       F604.SODNo,
       F604.ItemCode,
       F604.ItemAlias,
       F013.Name as ItemName,
       F013.UnitCode,
       F604.Quantity,
       F604.Price,
       F604.DiscountPercent1,
       F604.DiscountPercent2,
       F604.DiscountAmount1,
       F604.DiscountAmount2,
       F604.DiscountPercent3,
       F604.DiscountAmount3
FROM F603
       INNER JOIN F001 ON F603.BranchCode = F001.Code
       INNER JOIN F604 ON F603.SODNo = F604.SODNo
       INNER JOIN F006 ON F603.CurrencyCode = F006.Code
       INNER JOIN F106 ON F603.CustomerCode = F106.Code
       INNER JOIN F009 ON F106.CityCode = F009.Code
       INNER JOIN F010 ON F106.CountryCode = F010.Code       
       INNER JOIN F018 ON F603.PaymentTermCode = F018.Code
       INNER JOIN F013 ON F604.ItemCode = F013.Code
       INNER JOIN F108 ON F603.SalesmanCode = F108.Code
WHERE         
       F603.SODNo = prmSODNo; 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SP_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SP_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SP_get`(
	-- prmBranchCode VARCHAR(50),
	prmfdoc_no VARCHAR(50)
)
BEGIN
		SELECT  a.fdoc_no+b.funit_code  AS fkey,a.*,b.fcust_code,b.fstart_period,b.fend_period,
b.fdeposit,b.fcust_name,b.fcust_add,b.fcust_city,b.fktp,
b.fcust_hp,b.fcust_phone,b.fcust_cp ,b.fdesc,b.ftrade_name 
,b.funit_name,b.funit_long,b.funit_width,b.funit_sqm,b.frent_rate,b.frent_basis,
CAST('' AS CHAR(200)) AS fterbilang1,
CAST('' AS CHAR(200)) AS fterbilang2,
CAST('' AS CHAR(200)) AS fterbilang3,
CAST('' AS CHAR(200)) AS fterbilang4,
CAST('' AS CHAR(200)) AS fterbilang5,b.frent_tax FROM ( 
SELECT fdoc_no,SUM(fbill_tot) AS frpSewa,
COUNT(*) AS fangsuran FROM f052 WHERE fbill_type='0' GROUP BY fdoc_no ) a
LEFT JOIN (
SELECT a1.fdoc_no,a1.fcust_code,a1.fstart_period,a1.fend_period,a1.fdeposit,
IF(ISNULL(b1.name), "", b1.name) AS fcust_name,
IF(ISNULL(b1.address), "", b1.address) AS fcust_add,
IF(ISNULL(b1.citycode), "", b1.citycode) AS fcust_city,
IF(ISNULL(b1.emailaddress), "", b1.emailaddress) AS fktp,
 IF(ISNULL(b1.Phone1), "", b1.Phone1) AS fcust_hp,
 IF(ISNULL(b1.Phone2), "", b1.Phone2) AS fcust_phone,
 IF(ISNULL(b1.ContactPerson), "", b1.ContactPerson) AS  fcust_cp,
a1.fdesc,a1.ftrade_name,a1.funit_code ,c1.funit_name,
a1.frent_rate,a1.frent_basis ,
c1.funit_long,c1.funit_sqm,c1.funit_width,a1.frent_tax
 FROM f051 a1
LEFT JOIN f106  b1 ON a1.fcust_code=b1.code 
LEFT JOIN f048 c1 ON a1.funit_code=c1.funit_code)
b ON a.fdoc_no=b.fdoc_no
	WHERE
		a.fdoc_no=  prmfdoc_no; 	
		
            
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_SRTNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_SRTNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_SRTNo_get`(IN prmSRTNo VARCHAR(50))
BEGIN
	SELECT 
		F613.BranchCode, 
		F613.SRTNo, 
		F613.TransactionDate, 
		F613.CustomerCode,
		F106.Name AS CustomerName,
		F106.Address AS CustomerAddress,
		F106.Phone1 AS CustomerPhone,
		F106.Fax AS CustomerFax, 
		F613.SalesmanCode,
		F108.Name AS SalesmanName, 
		F613.WarehouseCode,
		F110.Name AS WarehouseName, 
		F613.RefNo, 
		F613.Description,
		F613.OtherFee, 
		F614.ItemCode,
		F013.Name AS ItemName,
		F013.UnitCode AS ItemUnitCode, 
		F614.Quantity, 
		F614.Price,
		F614.INVNo,
		F614.Description 
	FROM F613 
		INNER JOIN F106 ON F613.CustomerCode = F106.Code
		INNER JOIN F108 ON F613.SalesmanCode = F108.Code
		INNER JOIN F110 ON F613.WarehouseCode = F110.Code
		INNER JOIN F614 ON F613.SRTNo = F614.SRTNo
		INNER JOIN F013 ON F614.ItemCode = F013.Code
	WHERE
		F613.SRTNo = prmSRTNo;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_StockCardSubINV_Awal` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_StockCardSubINV_Awal` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_StockCardSubINV_Awal`(
  In prmBranchCode varchar(50), 
  In prmWarehouseCode varchar(50),
  In prmFirstItemCode varchar(50), 
  In prmLastItemCode varchar(50),
  In prmFirstDate DateTime,
  In prmLastDate DateTime)
BEGIN
SELECT Qry.BranchCode,Qry.WarehouseCode,Qry.ItemCode,Qry.ItemName,SUM(Qty) As LastBalance FROM
(
SELECT 
  F400.BranchCode, 
  F400.WarehouseCode, 
  F400.ItemCode, 
  F013.Name As ItemName, 
  F400.ActualStock As Qty
  FROM F400
    INNER JOIN F013 ON F013.Code  = F400.ItemCode
  WHERE 
    F400.PeriodYear = Year(prmFirstDate) AND
    F400.BranchCode LIKE prmBranchCode AND
    F400.WarehouseCode LIKE prmWarehouseCode AND
    F400.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode
/*----- INVENTORY IN (+) ----- */
UNION ALL 
SELECT
  F702.BranchCode,
  F701.WarehouseCode,
  F702.ItemCode,
  F013.Name As ItemName,
  F702.Quantity As Qty
FROM F702
  INNER JOIN F013 ON F013.Code  = F702.ItemCode
  INNER JOIN F701 ON F701.IINNo = F702.IINNo
 WHERE 
   F702.BranchCode LIKE prmBranchCode AND
   F701.WarehouseCode LIKE prmWarehouseCode AND
   F702.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F701.TransactionDate >= prmFirstDate AND F701.TransactionDate < prmLastDate
/*----- INVENTORY OUT (-) ----- */
UNION ALL 
SELECT
  F704.BranchCode,
  F703.WarehouseCode,
  F704.ItemCode,
  F013.Name As ItemName,
  -F704.Quantity As Qty
FROM F704
  INNER JOIN F013 ON F013.Code  = F704.ItemCode
  INNER JOIN F703 ON F703.IOTNo = F704.IOTNo
 WHERE 
   F704.BranchCode LIKE prmBranchCode AND
   F703.WarehouseCode LIKE prmWarehouseCode AND
   F704.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F703.TransactionDate >= prmFirstDate AND F703.TransactionDate < prmLastDate
) As Qry
GROUP BY Qry.WarehouseCode,Qry.ItemCode,Qry.ItemName
ORDER BY Qry.WarehouseCode,Qry.ItemCode
;  
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_StockCardSubInv_Item` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_StockCardSubInv_Item` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_StockCardSubInv_Item`(
  In prmBranchCode varchar(50), 
  In prmWarehouseCode varchar(50),
  In prmFirstItemCode varchar(50), 
  In prmLastItemCode varchar(50),
  In prmFirstDate DateTime,
  In prmLastDate DateTime)
BEGIN
  
/*----- INVENTORY IN (+) ----- */
SELECT
  F701.TransactionDate,
  F702.BranchCode,
  F701.WarehouseCode,
  F702.ItemCode,
  F013.Name As ItemName,
  F701.IINNo As TransactionCode,
  F702.Quantity As QtyIn,
  0 As QtyOut
  -- F016.Name As Info
FROM F702
  INNER JOIN F013 ON F013.Code  = F702.ItemCode
  INNER JOIN F701 ON F701.IINNo = F702.IINNo
  -- INNER JOIN F016 ON F702.ReasonCode = F016.Code
 WHERE 
   F701.WarehouseCode LIKE prmWarehouseCode AND
   F702.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F701.TransactionDate BETWEEN prmFirstDate AND prmLastDate
/*----- INVENTORY OUT (-) ----- */
UNION ALL 
SELECT
  F703.TransactionDate,
  F704.BranchCode,
  F703.WarehouseCode,
  F704.ItemCode,
  F013.Name As ItemName,
  F703.IOTNo As TransactionCode,
  0 As QtyIn,
  F704.Quantity As QtyOut
  -- F016.Name As Info
FROM F704
  INNER JOIN F013 ON F013.Code  = F704.ItemCode
  INNER JOIN F703 ON F703.IOTNo = F704.IOTNo
  -- INNER JOIN F016 ON F704.ReasonCode = F016.Code
 WHERE 
   F703.WarehouseCode LIKE prmWarehouseCode AND
   F704.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F703.TransactionDate BETWEEN prmFirstDate AND prmLastDate
ORDER By TransactionDate ASC, QtyIn DESC, TransactionCode ASC
;  
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_StockCard_Awal` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_StockCard_Awal` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_StockCard_Awal`(
  In prmBranchCode varchar(50), 
  In prmWarehouseCode varchar(50),
  In prmFirstItemCode varchar(50), 
  In prmLastItemCode varchar(50),
  In prmFirstDate DateTime,
  In prmLastDate DateTime)
BEGIN
SELECT Qry.BranchCode,Qry.WarehouseCode,Qry.ItemCode,Qry.ItemName,SUM(Qty) As LastBalance FROM
(
SELECT 
  F400.BranchCode, 
  F400.WarehouseCode, 
  F400.ItemCode, 
  F013.Name As ItemName, 
  F400.ActualStock As Qty
  FROM F400
    INNER JOIN F013 ON F013.Code  = F400.ItemCode
  WHERE 
    F400.PeriodYear = Year(prmFirstDate) AND
    F400.BranchCode LIKE prmBranchCode AND
    F400.WarehouseCode LIKE prmWarehouseCode AND
    F400.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode
/* ----- PURCHASE RETURN (-) ----- */
UNION ALL
SELECT 
  F204.BranchCode,
  F203.WarehouseCode,
  F204.ItemCode,
  F013.Name As ItemName,
  -F204.Quantity As Qty
FROM F204
  INNER JOIN F013 ON F013.Code  = F204.ItemCode
  INNER JOIN F203 ON F203.PRTNo = F204.PRTNo
WHERE 
  F204.BranchCode LIKE prmBranchCode AND
  F203.WarehouseCode LIKE prmWarehouseCode AND
  F204.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
  F203.TransactionDate >= prmFirstDate AND F203.TransactionDate < prmLastDate
/* ----- GOOD RECEIVED NOTES (+) ----- */
UNION ALL 
SELECT
  F302.BranchCode,
  F301.WarehouseCode,
  F302.ItemCode,
  F013.Name As ItemName,
  F302.Quantity As Qty
FROM F302
  INNER JOIN F013 ON F013.Code  = F302.ItemCode
  INNER JOIN F301 ON F301.GRNNo = F302.GRNNo
WHERE
  F302.BranchCode LIKE prmBranchCode AND
  F301.WarehouseCode LIKE prmWarehouseCode AND
  F302.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
  F301.TransactionDate >= prmFirstDate AND F301.TransactionDate < prmLastDate
/*----- INVENTORY IN (+) ----- */
UNION ALL 
SELECT
  F304.BranchCode,
  F303.WarehouseCode,
  F304.ItemCode,
  F013.Name As ItemName,
  F304.Quantity As Qty
FROM F304
  INNER JOIN F013 ON F013.Code  = F304.ItemCode
  INNER JOIN F303 ON F303.IINNo = F304.IINNo
 WHERE 
   F304.BranchCode LIKE prmBranchCode AND
   F303.WarehouseCode LIKE prmWarehouseCode AND
   F304.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F303.TransactionDate >= prmFirstDate AND F303.TransactionDate < prmLastDate
/*----- INVENTORY OUT (-) ----- */
UNION ALL 
SELECT
  F306.BranchCode,
  F305.WarehouseCode,
  F306.ItemCode,
  F013.Name As ItemName,
  -F306.Quantity As Qty
FROM F306
  INNER JOIN F013 ON F013.Code  = F306.ItemCode
  INNER JOIN F305 ON F305.IOTNo = F306.IOTNo
 WHERE 
   F306.BranchCode LIKE prmBranchCode AND
   F305.WarehouseCode LIKE prmWarehouseCode AND
   F306.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F305.TransactionDate >= prmFirstDate AND F305.TransactionDate < prmLastDate
/*----- SALES RETURN (+) ----- */
UNION ALL 
SELECT
  F614.BranchCode,
  F613.WarehouseCode,
  F614.ItemCode,
  F013.Name As ItemName,
  F614.Quantity As Qty
FROM F614
  INNER JOIN F013 ON F013.Code  = F614.ItemCode
  INNER JOIN F613 ON F613.SRTNo = F614.SRTNo
 WHERE 
   F614.BranchCode LIKE prmBranchCode AND
   F613.WarehouseCode LIKE prmWarehouseCode AND
   F614.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F613.TransactionDate >= prmFirstDate AND F613.TransactionDate < prmLastDate
/*----- DELIVERY ORDER (-) -----*/
UNION ALL 
SELECT
  F606.BranchCode,
  F605.WarehouseCode,
  F606.ItemCode,
  F013.Name As ItemName,
  -F606.Quantity As Qty
FROM F606
  INNER JOIN F013 ON F013.Code  = F606.ItemCode
  INNER JOIN F605 ON F605.DODNo = F606.DODNo
 WHERE 
   F606.BranchCode LIKE prmBranchCode AND
   F605.WarehouseCode LIKE prmWarehouseCode AND
   F606.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F605.TransactionDate >= prmFirstDate AND F605.TransactionDate < prmLastDate
/*----- INVOICE NON DO (-) -----*/
UNION ALL 
SELECT
  F608.BranchCode,
  F607.WarehouseCode,
  F608.ItemCode,
  F013.Name As ItemName,
  -F608.Quantity As Qty
FROM F608
  INNER JOIN F013 ON F013.Code  = F608.ItemCode
  INNER JOIN F607 ON F607.INVNo = F608.INVNo
 WHERE 
   F608.BranchCode LIKE prmBranchCode AND
   LENGTH(F607.SODNo) = 0 AND
   F607.WarehouseCode LIKE prmWarehouseCode AND
   F608.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F607.TransactionDate >= prmFirstDate AND F607.TransactionDate < prmLastDate
/*----- WAREHOUSE MUTATION DESTINATION (+) -----*/
UNION ALL 
SELECT
  F310.BranchCode,
  F309.WarehouseDestinationCode As WarehouseCode,
  F310.ItemCode,
  F013.Name As ItemName,
  F310.Quantity As Qty
FROM F310
  INNER JOIN F013 ON F013.Code  = F310.ItemCode
  INNER JOIN F309 ON F309.WHMNo = F310.WHMNo
 WHERE 
   F310.BranchCode LIKE prmBranchCode AND
   F309.WarehouseDestinationCode LIKE prmWarehouseCode AND
   F310.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F309.TransactionDate >= prmFirstDate AND F309.TransactionDate < prmLastDate
/*----- WAREHOUSE MUTATION SOURCE (-) -----*/
UNION ALL 
SELECT
  F310.BranchCode,
  F309.WarehouseSourceCode As WarehouseCode,
  F310.ItemCode,
  F013.Name As ItemName,
  -F310.Quantity As Qty
FROM F310
  INNER JOIN F013 ON F013.Code  = F310.ItemCode
  INNER JOIN F309 ON F309.WHMNo = F310.WHMNo
 WHERE 
   F310.BranchCode LIKE prmBranchCode AND
   F309.WarehouseSourceCode LIKE prmWarehouseCode AND
   F310.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F309.TransactionDate >= prmFirstDate AND F309.TransactionDate < prmLastDate
/*----- ITEM ASSEMBLY INCREASE (+) -----*/
UNION ALL 
SELECT
  F308.BranchCode,
  F307.WarehouseCode,
  F308.ItemCode,
  F013.Name As ItemName,
  F308.Quantity As Qty
FROM F308
  INNER JOIN F013 ON F013.Code  = F308.ItemCode
  INNER JOIN F307 ON F307.ASMNo = F308.ASMNo
WHERE 
  F308.ASMPosition = "I" AND
   F308.BranchCode LIKE prmBranchCode AND
   F307.WarehouseCode LIKE prmWarehouseCode AND
   F308.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F307.TransactionDate >= prmFirstDate AND F307.TransactionDate <= prmLastDate
/*----- ITEM ASSEMBLY DECREASE (-) -----*/
UNION ALL 
SELECT
  F308.BranchCode,
  F307.WarehouseCode,
  F308.ItemCode,
  F013.Name As ItemName,
  -F308.Quantity As Qty
FROM F308
  INNER JOIN F013 ON F013.Code  = F308.ItemCode
  INNER JOIN F307 ON F307.ASMNo = F308.ASMNo
WHERE 
  F308.ASMPosition = "D" AND
  F308.BranchCode LIKE prmBranchCode AND
  F307.WarehouseCode LIKE prmWarehouseCode AND
  F308.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
  F307.TransactionDate >= prmFirstDate AND F307.TransactionDate < prmLastDate
/*----- STOCK OPNAME -----*/
UNION ALL 
SELECT
  F311.BranchCode,
  F311.WarehouseCode As WarehouseCode,
  F312.ItemCode,
  F013.Name As ItemName,
  F312.Difference As Qty
FROM F312
  INNER JOIN F013 ON F013.Code  = F312.ItemCode
  INNER JOIN F311 ON F311.OPNNo = F311.OPNNo
 WHERE 
   F311.WarehouseCode LIKE prmWarehouseCode AND
   F312.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F311.TransactionDate >= prmFirstDate AND F311.TransactionDate < prmLastDate
) As Qry
GROUP BY Qry.WarehouseCode,Qry.ItemCode,Qry.ItemName
ORDER BY Qry.WarehouseCode,Qry.ItemCode
;  
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_StockCard_Item` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_StockCard_Item` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_StockCard_Item`(
  In prmBranchCode varchar(50), 
  In prmWarehouseCode varchar(50),
  In prmFirstItemCode varchar(50), 
  In prmLastItemCode varchar(50),
  In prmFirstDate DateTime,
  In prmLastDate DateTime)
BEGIN
  
/* ----- PURCHASE RETURN (-) ----- */
SELECT 
  F203.TransactionDate,
  F204.BranchCode,
  F203.WarehouseCode,
  F204.ItemCode,
  F013.Name As ItemName,
  F203.PRTNo As TransactionCode,
  0 As QtyIn,
  F204.Quantity As QtyOut,
  F109.Name As Info
FROM F204
  INNER JOIN F013 ON F013.Code  = F204.ItemCode
  INNER JOIN F203 ON F203.PRTNo = F204.PRTNo
  INNER JOIN F109 ON F203.SupplierCode = F109.Code
WHERE 
  F203.TransactionDate BETWEEN prmFirstDate AND prmLastDate AND
  F203.WarehouseCode LIKE prmWarehouseCode AND
  F204.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode
/* ----- GOOD RECEIVED NOTES (+) ----- */
UNION ALL 
SELECT
  F301.TransactionDate,
  F302.BranchCode,
  F301.WarehouseCode,
  F302.ItemCode,
  F013.Name As ItemName,
  F301.GRNNo As TransactionCode,
  F302.Quantity As QtyIn,
  0 As QtyOut,
  F109.Name As Info
FROM F302
  INNER JOIN F013 ON F013.Code  = F302.ItemCode
  INNER JOIN F301 ON F301.GRNNo = F302.GRNNo
  INNER JOIN F109 ON F301.SupplierCode = F109.Code
 WHERE
   F301.WarehouseCode LIKE prmWarehouseCode AND
   F302.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F301.TransactionDate BETWEEN prmFirstDate AND prmLastDate
/*----- INVENTORY IN (+) ----- */
UNION ALL 
SELECT
  F303.TransactionDate,
  F304.BranchCode,
  F303.WarehouseCode,
  F304.ItemCode,
  F013.Name As ItemName,
  F303.IINNo As TransactionCode,
  F304.Quantity As QtyIn,
  0 As QtyOut,
  F016.Name As Info
FROM F304
  INNER JOIN F013 ON F013.Code  = F304.ItemCode
  INNER JOIN F303 ON F303.IINNo = F304.IINNo
  INNER JOIN F016 ON F304.ReasonCode = F016.Code
 WHERE 
   F303.WarehouseCode LIKE prmWarehouseCode AND
   F304.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F303.TransactionDate BETWEEN prmFirstDate AND prmLastDate
/*----- INVENTORY OUT (-) ----- */
UNION ALL 
SELECT
  F305.TransactionDate,
  F306.BranchCode,
  F305.WarehouseCode,
  F306.ItemCode,
  F013.Name As ItemName,
  F305.IOTNo As TransactionCode,
  0 As QtyIn,
  F306.Quantity As QtyOut,
  F016.Name As Info
FROM F306
  INNER JOIN F013 ON F013.Code  = F306.ItemCode
  INNER JOIN F305 ON F305.IOTNo = F306.IOTNo
  INNER JOIN F016 ON F306.ReasonCode = F016.Code
 WHERE 
   F305.WarehouseCode LIKE prmWarehouseCode AND
   F306.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F305.TransactionDate BETWEEN prmFirstDate AND prmLastDate
/*----- SALES RETURN (+) ----- */
UNION ALL 
SELECT
  F613.TransactionDate,
  F614.BranchCode,
  F613.WarehouseCode,
  F614.ItemCode,
  F013.Name As ItemName,
  F613.SRTNo As TransactionCode,
  F614.Quantity As QtyIn,
  0 As QtyOut,
  F106.Name As Info
FROM F614
  INNER JOIN F013 ON F013.Code  = F614.ItemCode
  INNER JOIN F613 ON F613.SRTNo = F614.SRTNo
  INNER JOIN F106 ON F613.CustomerCode = F106.Code
 WHERE 
   F613.WarehouseCode LIKE prmWarehouseCode AND
   F614.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F613.TransactionDate BETWEEN prmFirstDate AND prmLastDate
/*----- DELIVERY ORDER (-) -----*/
UNION ALL 
SELECT
  F605.TransactionDate,
  F606.BranchCode,
  F605.WarehouseCode,
  F606.ItemCode,
  F013.Name As ItemName,
  F605.DODNo As TransactionCode,
  0 As QtyIn,
  F606.Quantity As QtyOut,
  F106.Name As Info
FROM F606
  INNER JOIN F013 ON F013.Code  = F606.ItemCode
  INNER JOIN F605 ON F605.DODNo = F606.DODNo
  INNER JOIN F106 ON F605.CustomerCode = F106.Code
 WHERE 
   F605.WarehouseCode LIKE prmWarehouseCode AND
   F606.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F605.TransactionDate BETWEEN prmFirstDate AND prmLastDate
/*----- INVOICE NON DO (-) -----*/
UNION ALL 
SELECT
  F607.TransactionDate,
  F608.BranchCode,
  F607.WarehouseCode,
  F608.ItemCode,
  F013.Name As ItemName,
  F607.INVNo As TransactionCode,
  0 As QtyIn,
  F608.Quantity As QtyOut,
  F106.Name As Info
FROM F608
  INNER JOIN F013 ON F013.Code  = F608.ItemCode
  INNER JOIN F607 ON F607.INVNo = F608.INVNo
  INNER JOIN F106 ON F607.CustomerCode = F106.Code
 WHERE 
   LENGTH(F607.SODNo) = 0 AND
   F607.WarehouseCode LIKE prmWarehouseCode AND
   F608.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F607.TransactionDate BETWEEN prmFirstDate AND prmLastDate
/*----- WAREHOUSE MUTATION DESTINATION (+) -----*/
UNION ALL 
SELECT
  F309.TransactionDate,
  F310.BranchCode,
  F309.WarehouseDestinationCode As WarehouseCode,
  F310.ItemCode,
  F013.Name As ItemName,
  F309.WHMNo As TransactionCode,
  F310.Quantity As QtyIn,
  0 As QtyOut,
  CONCAT("From Warehouse ",F309.WareHouseSourceCode) As Info
FROM F310
  INNER JOIN F013 ON F013.Code  = F310.ItemCode
  INNER JOIN F309 ON F309.WHMNo = F310.WHMNo
 WHERE 
   F309.WarehouseDestinationCode LIKE prmWarehouseCode AND
   F310.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F309.TransactionDate BETWEEN prmFirstDate AND prmLastDate
/*----- WAREHOUSE MUTATION SOURCE (-) -----*/
UNION ALL 
SELECT
  F309.TransactionDate,
  F310.BranchCode,
  F309.WarehouseSourceCode As WarehouseCode,
  F310.ItemCode,
  F013.Name As ItemName,
  F309.WHMNo As TransactionCode,
  0 As QtyIn,
  F310.Quantity As QtyOut,
  CONCAT("To Warehouse ",F309.WareHouseDestinationCode) As Info
FROM F310
  INNER JOIN F013 ON F013.Code  = F310.ItemCode
  INNER JOIN F309 ON F309.WHMNo = F310.WHMNo
 WHERE 
   F309.WarehouseSourceCode LIKE prmWarehouseCode AND
   F310.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F309.TransactionDate BETWEEN prmFirstDate AND prmLastDate
/*----- ITEM ASSEMBLY INCREASE (+) -----*/
UNION ALL 
SELECT
  F307.TransactionDate,
  F308.BranchCode,
  F307.WarehouseCode,
  F308.ItemCode,
  F013.Name As ItemName,
  F307.ASMNo As TransactionCode,
  F308.Quantity As QtyIn,
  0 As QtyOut,
  "Assembly (Increased Item)" As Info
FROM F308
  INNER JOIN F013 ON F013.Code  = F308.ItemCode
  INNER JOIN F307 ON F307.ASMNo = F308.ASMNo
WHERE 
  F308.ASMPosition = "I" AND
  F307.WarehouseCode LIKE prmWarehouseCode AND
  F308.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
  F307.TransactionDate BETWEEN prmFirstDate AND prmLastDate
/*----- ITEM ASSEMBLY DECREASE (-) -----*/
UNION ALL 
SELECT
  F307.TransactionDate,
  F308.BranchCode,
  F307.WarehouseCode,
  F308.ItemCode,
  F013.Name As ItemName,
  F307.ASMNo As TransactionCode,
  0 As QtyIn,
  F308.Quantity As QtyOut,
  "Assembly (Decreased Item)" As Info
FROM F308
  INNER JOIN F013 ON F013.Code  = F308.ItemCode
  INNER JOIN F307 ON F307.ASMNo = F308.ASMNo
WHERE 
  F308.ASMPosition = "D" AND
  F307.WarehouseCode LIKE prmWarehouseCode AND
  F308.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
  F307.TransactionDate BETWEEN prmFirstDate AND prmLastDate
/*----- Stock Opname -----*/
UNION ALL 
SELECT
  F311.TransactionDate,
  F311.BranchCode,
  F311.WarehouseCode,
  F312.ItemCode,
  F013.Name As ItemName,
  F311.OPNNo As TransactionCode,
  IF(F312.Difference > 0, F312.Difference, 0) AS QtyIn,
  IF(F312.Difference < 0, ABS(F312.Difference), 0) AS QtyOut,
  "Stock Opname (Adjusment)" As Info
FROM F312
  INNER JOIN F013 ON F013.Code  = F312.ItemCode
  INNER JOIN F311 ON F312.OPNNo = F311.OPNNo
 WHERE 
   F311.WarehouseCode LIKE prmWarehouseCode AND
   F312.ItemCode BETWEEN prmFirstItemCode AND prmLastItemCode AND
   F311.TransactionDate BETWEEN prmFirstDate AND prmLastDate
ORDER By TransactionDate ASC, QtyIn DESC, TransactionCode ASC
;  
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_string_to_mysqlrow` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_string_to_mysqlrow` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_string_to_mysqlrow`(
	IN _string TEXT,
	IN _delimiter CHAR(1)
)
BEGIN
		DECLARE cur_position INT DEFAULT 1 ;
		DECLARE remainder TEXT;
		DECLARE cur_string VARCHAR(1000);
		DECLARE delimiter_length TINYINT UNSIGNED;
		DROP TEMPORARY TABLE IF EXISTS Temp_SplitString;
		CREATE TEMPORARY TABLE Temp_SplitString (
			_string VARCHAR(100) NOT NULL PRIMARY KEY
		) ENGINE=MyISAM;
			
		
		SET remainder = _string;
		SET delimiter_length = CHAR_LENGTH(_delimiter);
		
		WHILE CHAR_LENGTH(remainder) > 0 AND cur_position > 0 DO
			SET cur_position = INSTR(remainder, `_delimiter`);
			IF cur_position = 0 THEN
				SET cur_string = remainder;
			ELSE
				SET cur_string = LEFT(remainder, cur_position - 1);
			END IF;
			IF TRIM(cur_string) != '' THEN
				INSERT INTO Temp_SplitString VALUES (TRIM(cur_string));
			END IF;
			SET remainder = SUBSTRING(remainder, cur_position + delimiter_length);
		END WHILE;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_string_to_mysqlrow2` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_string_to_mysqlrow2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_string_to_mysqlrow2`(
	IN _string TEXT,
	IN _delimiter CHAR(1)
)
BEGIN
		DECLARE cur_position INT DEFAULT 1 ;
		DECLARE remainder TEXT;
		DECLARE cur_string Text;
		DECLARE delimiter_length TINYINT UNSIGNED;
		DROP TEMPORARY TABLE IF EXISTS Temp_SplitString;
		CREATE TEMPORARY TABLE Temp_SplitString (
			_string Text NOT NULL PRIMARY KEY
		) ENGINE=MyISAM;
			
		
		SET remainder = _string;
		SET delimiter_length = CHAR_LENGTH(_delimiter);
		
		WHILE CHAR_LENGTH(remainder) > 0 AND cur_position > 0 DO
			SET cur_position = INSTR(remainder, `_delimiter`);
			IF cur_position = 0 THEN
				SET cur_string = remainder;
			ELSE
				SET cur_string = LEFT(remainder, cur_position - 1);
			END IF;
			IF TRIM(cur_string) != '' THEN
				INSERT INTO Temp_SplitString VALUES (TRIM(cur_string));
			END IF;
			SET remainder = SUBSTRING(remainder, cur_position + delimiter_length);
		END WHILE;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_TaxInvoiceNonItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_TaxInvoiceNonItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_TaxInvoiceNonItem`(IN prmBranchCode VARCHAR(50), IN prmTINNo VARCHAR(50))
BEGIN 
  SELECT 
    F641.BranchCode, 
    F001.Name As BranchName,
    F001.NPWPNo As BranchNPWPNo,
    F001.KukuhDate As BranchKukuhDate,
    F001.Address As BranchAddress,
    F001.CityCode As BranchCityCode,
    F001.TaxInvoiceName,
    F001.TaxInvoiceLevel,
    BranchCity.Name As BranchCityName,
    F641.TINNo, 
    F641.TransactionDate As TaxInvoiceDate,
    F641.ExchangeRate,
    F642.INVNo,
    F607.CurrencyCode,
    F607.TotalTransaction As TotalInvoiceForeign,
    (F607.TotalTransaction * F607.ExchangeRate) As TotalInvoiceLocal,
    F607.DiscountAmount As DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) As DiscountAmountLocal,
    F607.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    F106.CityCode As CustomerCityCode,
    CustomerCity.Name As CustomerCityName,
    F106.NPWPAddress As CustomerAddress,
    F106.NPWP As CustomerNPWP
FROM F642
INNER JOIN F641 ON F641.TINNo = F642.TINNo
INNER JOIN F607 ON F607.INVNo = F642.INVNo
INNER JOIN F001 ON F641.BranchCode = F001.Code
INNER JOIN F006 ON F607.CurrencyCode = F006.Code
INNER JOIN F106 ON F607.CustomerCode = F106.Code
INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
WHERE F642.BranchCode = prmBranchCode AND F642.TINNo = prmTINNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_TaxInvoiceWithItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_TaxInvoiceWithItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_TaxInvoiceWithItem`(IN prmBranchCode VARCHAR(50), IN prmTINNo VARCHAR(50))
BEGIN 
  SELECT 
    F642.BranchCode, 
    F001.Name As BranchName,
    F001.NPWPNo As BranchNPWPNo,
    F001.KukuhDate As BranchKukuhDate,
    F001.Address As BranchAddress,
    F001.CityCode As BranchCityCode,
    F001.TaxInvoiceName,
    F001.TaxInvoiceLevel,
    BranchCity.Name As BranchCityName,
    F642.TINNo, 
    F641.TransactionDate As TaxInvoiceDate,
    F641.ExchangeRate,
    F608.INVNo,
    F641.CurrencyCode,
    F641.CustomerCode,
    F106.Name As CustomerName,
    F106.ContactPerson As CustomerContactPerson,
    F106.CityCode As CustomerCityCode,
    CustomerCity.Name As CustomerCityName,
    F106.NPWPAddress As CustomerAddress,
    F106.NPWP As CustomerNPWP,
    F608.ItemCode,
    F013.Name As ItemName,
    F608.ItemAlias,
    F608.Quantity,
    F608.Price,
    F608.DiscountAmount1 + F608.DiscountAmount2 + F608.DiscountAmount3 + F608.FinalDiscount1 As Discount,
    ((F608.Quantity * F608.Price) - F608.DiscountAmount1 - F608.FinalDiscount1 - F608.DiscountAmount2 - F608.DiscountAmount3) As TotalInvoiceForeign,
    (((F608.Quantity * F608.Price) - F608.DiscountAmount1 - F608.FinalDiscount1 - F608.DiscountAmount2 - F608.DiscountAmount3) * F641.ExchangeRate) As TotalInvoiceLocal,
    F607.DiscountAmount As DiscountAmountForeign,
    (F607.DiscountAmount * F607.ExchangeRate) As DiscountAmountLocal
FROM F608
INNER JOIN F607 ON F607.INVNo = F608.INVNo
INNER JOIN F642 ON F642.INVNo = F608.INVNo
INNER JOIN F641 ON F641.TINNo = F642.TINNo
INNER JOIN F013 ON F013.Code = F608.ItemCode
INNER JOIN F001 ON F642.BranchCode = F001.Code
INNER JOIN F006 ON F641.CurrencyCode = F006.Code
INNER JOIN F106 ON F641.CustomerCode = F106.Code
INNER JOIN F009 CustomerCity ON F106.CityCode = CustomerCity.Code
INNER JOIN F009 BranchCity ON F001.CityCode = BranchCity.Code
WHERE F642.BranchCode = prmBranchCode AND F642.TINNo = prmTINNo
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_trialbalance_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_trialbalance_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_trialbalance_get`(IN prmBranchCode VARCHAR(50), in prmFirstDate Date, in prmLastDate Date)
BEGIN
	END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_trialbalance_get_backup` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_trialbalance_get_backup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_trialbalance_get_backup`(IN prmBranchCode VARCHAR(50), in prmFirstDate Date, in prmLastDate Date)
BEGIN
	select 
	* from(
	select 
	case left(qr3.AccountCode,2)
		when '01' then 'B'
		when '02' then 'B'
		when '03' then 'B'
		when '04' then 'B'
		when '05' then 'B'
		else 'P'
	end as Posisi,
	qr3.AccountCode, 
	qr3.AccountName, 
	sum(OpeningBalanceIDR) as OpeningBalanceIDR, 
	sum(MutationDebitIDR) as MutationDebitIDR, 
	sum(MutationCreditIDR) as MutationCreditIDR, 
	sum(OpeningBalanceIDR + MutationDebitIDR - MutationCreditIDR) as LastBalanceIDR from( 
	select 
	qr2.AccountCode, 
	qr2.AccountName,
	sum(qr2.DebitamountIDR - qr2.CreditAmountIDR) as OpeningBalanceIDR,
	cast('0' as signed) as MutationDebitIDR,
	cast('0' as signed) as MutationCreditIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where 
	F401.PostingStatus = '1' 
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	 
	union All 
	 
	select 
	CAST(''  as char)  			as VoucherNo, 
	'prmFirstDate' 					as TransactionDate, 
	CAST(''  as char)  			as RefNo, 
	CAST(1 as signed)			as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name 					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	'IDR' 						as CurrencyCode, 
	CAST('' as char) 			as CurrencyName, 
	case 
		when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign 
		else 0 
	end as DebitAmountForeign, 
	 
	case 
		when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign 
		else 0 
	end as CreditAmountForeign, 
	 
	case 
		when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign * F105.ExchangeRate 
		else 0 
	end as DebitAmountIDR, 
	 
	case 
		when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign * F105.ExchangeRate 
		else 0 
	end as CreditAmountIDR, 
	 
	CAST(0 as signed)						as MutationAmountForeign, 
	CAST(0 as signed)						as MutationAmountIDR, 
	'Saldo Awal' 								as Detail, 
	CAST(0 as signed) 						as SaldoAmountForeign, 
	CAST(0 as signed) 						as SaldoAmountIDR 
	from F105 
	inner join F101 on F105.AccountCode = F101.Code 
	where 
	F101.Type = 'S' 		
	and 	
	F105.PeriodYear = year(prmFirstDate) 
	)as qr1 
	where qr1.TransactionDate < prmFirstDate) 
	as qr2 
	group by AccountCode, AccountName
	  
	union all
	select 
	qr2.AccountCode, 
	qr2.AccountName,
	cast('0' as signed) as OpeningBalanceIDR,
	sum(qr2.DebitamountIDR)    as DebitMutationIDR,
	sum(qr2.CreditamountIDR)   as CreditMutationIDR
	from(
	select 
	* from( 
	select 
	F401.VoucherNo					as VoucherNo, 
	F401.TransactionDate				as TransactionDate, 
	F401.RefNo					as RefNo, 
	F401.ExchangeRate				as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	F006.Code 			as CurrencyCode, 
	F006.Name 			as CurrencyName, 
	F402.Debit 				as DebitAmountForeign, 
	F402.Credit 				as CreditAmountForeign, 
	F402.Debit * F401.ExchangeRate 		as DebitAmountIDR, 
	F402.Credit * F401.ExchangeRate		as CreditAmountIDR, 
	CAST(0 as signed)			as MutationAmountForeign, 
	CAST(0 as signed)			as MutationAmountIDR, 
	F402.Description					as Detail, 
	CAST(0 as signed) 			as SaldoAmountForeign, 
	CAST(0 as signed) 			as SaldoAmountIDR 
	from F401 
	INNER JOIN F006 on F401.CurrencyCode =  F006.Code 
	INNER JOIN F402 on F401.VoucherNo = F402.VoucherNo 
	LEFT JOIN F101 on F402.AccountCode = F101.Code 
	where F401.PostingStatus = '1' 
	and
	year(F401.TransactionDate) = year(prmFirstDate)
	 
	union All 
	 
	select 
	CAST(''  as char)  			as VoucherNo, 
	'prmFirstDate' 					as TransactionDate, 
	CAST(''  as char)  			as RefNo, 
	CAST('1' as signed)			as ExchangeRate, 
	F101.Code 					as AccountCode, 
	F101.Name 					as AccountName, 
	CAST('' as char) 			as RivalAccountNo, 
	'IDR' 						as CurrencyCode, 
	CAST('' as char) 			as CurrencyName, 
	case 
		when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign 
		else 0 
	end as DebitAmountForeign, 
	 
	case 
		when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign 
		else 0 
	end as CreditAmountForeign, 
	 
	case 
		when LEFT(F105.AccountCode, 2) in ('01','02','07','08','09','10','12') then F105.OpeningBalanceForeign * F105.ExchangeRate 
		else 0 
	end as DebitAmountIDR, 
	 
	case 
		when LEFT(F105.AccountCode, 2) in ('03','04','05','06','11') then -F105.OpeningBalanceForeign * F105.ExchangeRate 
		else 0 
	end as CreditAmountIDR, 
	 
	CAST(0 as signed)						as MutationAmountForeign, 
	CAST(0 as signed)						as MutationAmountIDR, 
	'Saldo Awal' 								as Detail, 
	CAST(0 as signed) 						as SaldoAmountForeign, 
	CAST(0 as signed) 						as SaldoAmountIDR 
	from F105 
	inner join F101 on F105.AccountCode = F101.Code 
	where F101.Type = 'S' 		
	and 	
	F105.PeriodYear = year('prmFirstDate')
	)as qr1  where qr1.TransactionDate between prmFirstDate and prmLastDate) as qr2
	group by AccountCode, AccountName)
	as qr3 
	where 
	qr3.OpeningBalanceIDR <> 0 
	or
	qr3.MutationDebitIDR <> 0 
	or
	qr3.MutationCreditIDR <> 0 
	group by AccountCode, AccountName) as qr4 order by AccountCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_WHMNo_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_WHMNo_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_WHMNo_get`(IN prmBranchCode Varchar(50), IN prmWHMNo VARCHAR(50))
BEGIN
SELECT F309.BranchCode,
       F001.Name AS BranchName,
	   F309.WHMNo,
       F309.TransactionDate,
       f309.WarehouseSourceCode,
       WRH1.Name AS WarehouseSourceName,
       F309.WarehouseDestinationCode,
       WRH2.Name AS WarehouseDestinationName,
       F309.RefNo,
       F309.Description,
       F310.ItemCode,
F013.Name AS ItemName,       
F310.Quantity,
F013.UnitCode
FROM F310
	INNER JOIN F309 ON F309.WHMNo = F310.WHMNo 
   INNER JOIN F001 ON F309.BranchCode = F001.Code
	 INNER JOIN F110 WRH1 ON F309.WarehouseSourceCode = WRH1.Code
     INNER JOIN F110 WRH2 ON F309.WarehouseDestinationCode = WRH2.Code
     INNER JOIN F013 ON F310.ItemCode = F013.Code

  F309.BranchCode = prmBranchCode AND f309.WHMNo = prmWHMNo ;    
    END */$$
DELIMITER ;

/* Procedure structure for procedure `yusp_Get_F605_NonInvoice` */

/*!50003 DROP PROCEDURE IF EXISTS  `yusp_Get_F605_NonInvoice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `yusp_Get_F605_NonInvoice`(IN prmBranchCode VARCHAR(50), IN prmSODNo VARCHAR(50), IN prmINVNo VARCHAR(50))
BEGIN
      SELECT 
	F605.BranchCode,
        F605.SODNo,
	F605.DODNo,
	F605.TransactionDate As DODDate,
	Ifnull(F928.DODNo,"") As DODInv,
        Ifnull(F928.INVNo,"") As INVNo
      FROM F605
	LEFT JOIN F928 ON F605.DODNo = F928.DODNo AND F928.BranchCode = F605.BranchCode
      WHERE F605.BranchCode = prmBranchCode AND F605.SODNo = prmSODNo AND ((INVNo Is Null) OR (INVNo = prmInvNo));
    END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_AddMinusStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_AddMinusStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zusp_AddMinusStock`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmMinusQuantity Decimal(18,4), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO f398 ( 
    f398.BranchCode, 
    f398.WarehouseCode, 
    f398.ItemCode, 
    f398.MinusQuantity, 
    f398.CreatedBy, 
    f398.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmWarehouseCode, 
    prmItemCode, 
    prmMinusQuantity, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_AddMinusStock_SubInv` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_AddMinusStock_SubInv` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zusp_AddMinusStock_SubInv`( 
    -- IN prmBranchCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmMinusQuantity Decimal(18,4), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F878 ( 
    -- F878.BranchCode, 
    F878.WarehouseCode, 
    F878.ItemCode, 
    F878.MinusQuantity, 
    F878.CreatedBy, 
    F878.CreatedDate
 ) VALUES ( 
    -- prmBranchCode, 
    prmWarehouseCode, 
    prmItemCode, 
    prmMinusQuantity, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_GetActualStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_GetActualStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zusp_GetActualStock`(IN prmBranchCode varchar(50), 
  IN prmWarehouseCode varchar(50), IN prmItemCode varchar(50))
BEGIN 
  SELECT 
    f399.BranchCode, 
    f399.WarehouseCode, 
    f399.Code, 
    f399.ItemCode, 
    f399.ItemDate, 
    f399.COGSIDR, 
    f399.ActualStock, 
    f399.UsedStock
FROM f399
WHERE 
  -- F399.BranchCode = prmBranchCode AND
  F399.WarehouseCode = prmWarehouseCode AND
  F399.ItemCode = prmItemCode AND
  F399.ActualStock > F399.UsedStock
  ORDER BY F399.ItemDate ASC, F399.Code ASC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_GetActualStock_SubInv` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_GetActualStock_SubInv` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zusp_GetActualStock_SubInv`( 
  IN prmWarehouseCode varchar(50), IN prmItemCode varchar(50))
BEGIN 
  SELECT 
    F899.BranchCode, 
    F899.WarehouseCode, 
    F899.Code, 
    F899.ItemCode, 
    F899.ItemDate, 
    F899.COGSIDR, 
    F899.ActualStock, 
    F899.UsedStock
FROM F899
WHERE 
  -- F899.BranchCode = prmBranchCode AND
  -- F899.WarehouseCode = prmWarehouseCode AND
  F899.ItemCode = prmItemCode AND
  F899.ActualStock > F899.UsedStock
  ORDER BY F899.ItemDate ASC, F899.Code ASC
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_GetMinusStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_GetMinusStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zusp_GetMinusStock`(
  In prmBranchCode varchar(50), In prmWarehouseCode varchar(50), In prmItemCode varchar(50))
BEGIN
      SELECT MinusQuantity FROM F398 
      WHERE 
      -- F398.BranchCode = prmBranchCode AND 
      F398.WarehouseCode = prmWarehouseCode AND 
      F398.ItemCode = prmItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_GetMinusStock_SubInv` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_GetMinusStock_SubInv` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zusp_GetMinusStock_SubInv`(
  -- In prmBranchCode varchar(50), 
In prmWarehouseCode varchar(50), In prmItemCode varchar(50))
BEGIN
      SELECT MinusQuantity FROM F878 
      WHERE 
      -- F878.BranchCode = prmBranchCode AND 
      F878.WarehouseCode = prmWarehouseCode AND 
      F878.ItemCode = prmItemCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_InsertActualStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_InsertActualStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zusp_InsertActualStock`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmItemDate datetime, 
    IN prmCOGSIDR decimal(18,4), 
    IN prmActualStock decimal(18,4), 
    IN prmUsedStock decimal(18,4), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO f399 ( 
    f399.BranchCode, 
    f399.WarehouseCode, 
    f399.ItemCode, 
    f399.ItemDate, 
    f399.COGSIDR, 
    f399.ActualStock, 
    f399.UsedStock, 
    f399.CreatedBy, 
    f399.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmWarehouseCode, 
    prmItemCode, 
    prmItemDate, 
    prmCOGSIDR, 
    prmActualStock, 
    prmUsedStock, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_InsertActualStock_SubInv` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_InsertActualStock_SubInv` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zusp_InsertActualStock_SubInv`( 
    IN prmBranchCode VARCHAR(50), 
    IN prmWarehouseCode VARCHAR(50), 
    IN prmItemCode VARCHAR(50), 
    IN prmItemDate datetime, 
    IN prmCOGSIDR decimal(18,4), 
    IN prmActualStock decimal(18,4), 
    IN prmUsedStock decimal(18,4), 
    IN prmCreatedBy VARCHAR(50)
 )
BEGIN 
  INSERT INTO F899 ( 
    F899.BranchCode, 
    F899.WarehouseCode, 
    F899.ItemCode, 
    F899.ItemDate, 
    F899.COGSIDR, 
    F899.ActualStock, 
    F899.UsedStock, 
    F899.CreatedBy, 
    F899.CreatedDate
 ) VALUES ( 
    prmBranchCode, 
    prmWarehouseCode, 
    prmItemCode, 
    prmItemDate, 
    prmCOGSIDR, 
    prmActualStock, 
    prmUsedStock, 
    prmCreatedBy, 
    Now()
 ); 
END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_UpdateMinusStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_UpdateMinusStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `zusp_UpdateMinusStock`(
	prmBranchCode VARCHAR(50), 
	prmWarehouseCode VARCHAR(50), 
	prmItemCode VARCHAR(50), 
	prmMinusQuantity DECIMAL(18,4), 
	prmUpdatedBy VARCHAR(50)
)
BEGIN
  UPDATE F398
  SET
    F398.MinusQuantity = F398.MinusQuantity + prmMinusQuantity,
    F398.UpdatedBy = prmUpdatedBy,
    F398.UpdatedDate = Now()
  WHERE
    -- F398.BranchCode = prmBranchCode AND 
    F398.WarehouseCode = prmWarehouseCode AND 
    F398.ItemCode = prmItemCode;
  END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_UpdateMinusStock_SubInv` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_UpdateMinusStock_SubInv` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `zusp_UpdateMinusStock_SubInv`(
	-- prmBranchCode VARCHAR(50), 
	prmWarehouseCode VARCHAR(50), 
	prmItemCode VARCHAR(50), 
	prmMinusQuantity DECIMAL(18,4), 
	prmUpdatedBy VARCHAR(50)
)
BEGIN
  UPDATE F878
  SET
    F878.MinusQuantity = F878.MinusQuantity + prmMinusQuantity,
    F878.UpdatedBy = prmUpdatedBy,
    F878.UpdatedDate = Now()
  WHERE
    -- F878.BranchCode = prmBranchCode AND 
    F878.WarehouseCode = prmWarehouseCode AND 
    F878.ItemCode = prmItemCode;
  END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_UpdateUsedStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_UpdateUsedStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zusp_UpdateUsedStock`( 
    IN prmBranchCode VARCHAR(50),
    IN prmWarehouseCode VARCHAR(50),
    IN prmItemCode VARCHAR(50),
    IN prmCode VARCHAR(50), 
    IN prmUsedQty Decimal(18,4),
    IN prmUpdatedBy varchar(50)
 )
BEGIN 
  UPDATE F399 SET 
    F399.UsedStock = F399.UsedStock + prmUsedQty,
    F399.UpdatedBy = prmUpdatedBy,
    F399.UpdatedDate = Now()
  WHERE 
    -- F399.BranchCode = prmBranchCode AND 
    F399.WarehouseCode = prmWarehouseCode AND
    F399.ItemCode = prmItemCode AND
    F399.Code = prmCode -- F399.ActualStock >= F399.UsedStock
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `zusp_UpdateUsedStock_SubInv` */

/*!50003 DROP PROCEDURE IF EXISTS  `zusp_UpdateUsedStock_SubInv` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zusp_UpdateUsedStock_SubInv`( 
    -- IN prmBranchCode VARCHAR(50),
    IN prmWarehouseCode VARCHAR(50),
    IN prmItemCode VARCHAR(50),
    IN prmCode VARCHAR(50), 
    IN prmUsedQty Decimal(18,4),
    IN prmUpdatedBy varchar(50)
 )
BEGIN 
  UPDATE F899 SET 
    F899.UsedStock = F899.UsedStock + prmUsedQty,
    F899.UpdatedBy = prmUpdatedBy,
    F899.UpdatedDate = Now()
  WHERE 
    -- F899.BranchCode = prmBranchCode AND 
    F899.WarehouseCode = prmWarehouseCode AND
    F899.ItemCode = prmItemCode AND
    F899.Code = prmCode -- F899.ActualStock >= F899.UsedStock
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `zzusp_SC_DeleteItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `zzusp_SC_DeleteItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zzusp_SC_DeleteItem`(IN prmYearPeriod Integer)
BEGIN
      DELETE FROM F398;
      -- DELETE FROM F399;
      -- ALTER TABLE F399 AUTO_INCREMENT=1;
      TRUNCATE TABLE F399;
      DELETE FROM F400 WHERE PeriodYear > prmYearPeriod;
      DELETE FROM F901 WHERE Year(F901.ItemDate) >= prmYearPeriod;
      DELETE FROM F902 WHERE Year(F902.ItemDate) >= prmYearPeriod;
      DELETE FROM F903 WHERE Year(F903.ItemDate) >= prmYearPeriod;
      DELETE FROM F904 WHERE Year(F904.ItemDate) >= prmYearPeriod;
      DELETE FROM F905 WHERE Year(F905.ItemDate) >= prmYearPeriod;
      DELETE FROM F906 WHERE Year(F906.ItemDate) >= prmYearPeriod;
      DELETE FROM F907 WHERE Year(F907.ItemDate) >= prmYearPeriod;
      DELETE FROM F908 WHERE Year(F908.ItemDate) >= prmYearPeriod;	
      DELETE FROM F910 WHERE Year(F910.ItemDate) >= prmYearPeriod;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `zzusp_SC_GetAllTransactionItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `zzusp_SC_GetAllTransactionItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zzusp_SC_GetAllTransactionItem`(IN prmYearPeriod Integer)
BEGIN
/* ----- GOOD RECEIVED NOTES (+) ----- */
SELECT
  'GRN' As TransactionType,
  F301.GRNNo As TransactionCode,
  CAST(F301.TransactionDate As DateTime) As TransactionDate,
  F302.BranchCode,
  F301.WarehouseCode,
  '' As WarehouseDestinationCode,
  '' As InvNo,
  F302.ItemCode,
  F302.Quantity As QtyIn,
  0 As QtyOut,
  F302.BonusQuantity As QtyBns,
  (F302.Price - ((F302.DiscountAmount1/F302.Quantity) + (F302.DiscountAmount2/F302.Quantity) + (F302.DiscountAmount3/F302.Quantity))) As PriceAfterDiscount, 
  F301.DiscountPercent,
  F301.PPNPercent,
  F301.ExchangeRate,
  IF(F301.UpdatedBy = "", F301.CreatedBy, F301.UpdatedBy) AS OldUser
  
FROM F302
  INNER JOIN F301 ON F301.GRNNo = F302.GRNNo
WHERE
  YEAR(F301.TransactionDate) = prmYearPeriod
/*----- INVENTORY IN (+) ----- */
UNION ALL
SELECT
  'IIN' As TransactionType,
  F303.IINNo As TransactionCode,
  CAST(F303.TransactionDate As DateTime) As TransactionDate,
  F304.BranchCode,
  F303.WarehouseCode,
  '' As WarehouseDestinationCode,
  '' As InvNo,
  F304.ItemCode,
  F304.Quantity As QtyIn,
  0 As QtyOut,
  0 As QtyBns,
  F304.Price As PriceAfterDiscount,
  0 As DiscountPercent,
  0 As PPNPercent,
  1 As ExchangeRate,
  IF(F303.UpdatedBy = "", F303.CreatedBy, F303.UpdatedBy) AS OldUser
FROM F304
  INNER JOIN F303 ON F303.IINNo = F304.IINNo
WHERE 
  YEAR(F303.TransactionDate) = prmYearPeriod
  
/* ----- PURCHASE RETURN (-) ----- */
UNION ALL
SELECT 
  'PRT' As TransactionType,
  F203.PRTNo As TransactionCode,
  CAST(F203.TransactionDate As DateTime) As TransactionDate,
  F204.BranchCode,
  F203.WarehouseCode,
  '' As WarehouseDestinationCode,
  '' As InvNo,
  F204.ItemCode,
  0 As QtyIn,
  F204.Quantity As QtyOut,
  0 As QtyBns,
  (F204.Price - ((F204.DiscountAmount1/F204.Quantity) + (F204.DiscountAmount2/F204.Quantity) + (F204.DiscountAmount3/F204.Quantity))) As PriceAfterDiscount, 
  F203.DiscountPercent,
  F203.PPNPercent,
  F203.ExchangeRate,
  IF(F203.UpdatedBy = "", F203.CreatedBy, F203.UpdatedBy) AS OldUser
FROM F204
  INNER JOIN F203 ON F203.PRTNo = F204.PRTNo
WHERE 
  YEAR(F203.TransactionDate) = prmYearPeriod
  
/*----- INVENTORY OUT (-) ----- */
UNION ALL
SELECT
  'IOT' As TransactionType,
  F305.IOTNo As TransactionCode,
  CAST(F305.TransactionDate As DateTime) As TransactionDate,
  F306.BranchCode,
  F305.WarehouseCode,
  '' As WarehouseDestinationCode,
  '' As InvNo,
  F306.ItemCode,
  0 As QtyIn,
  F306.Quantity As QtyOut,
  0 As QtyBns,
  F306.Price As PriceAfterDiscount,
  0 As DiscountPercent,
  0 As PPNPercent,
  1 As ExchangeRate,
  IF(F305.UpdatedBy = "", F305.CreatedBy, F305.UpdatedBy) AS OldUser
FROM F306
  INNER JOIN F305 ON F305.IOTNo = F306.IOTNo
WHERE 
  YEAR(F305.TransactionDate) = prmYearPeriod
  
/*----- SALES RETURN (+) ----- */
UNION ALL
SELECT
  'SRT' As TransactionType,
  F613.SRTNo As TransactionCode,
  CAST(F613.TransactionDate As DateTime) As TransactionDate,
  F614.BranchCode,
  F613.WarehouseCode,
  '' As WarehouseDestinationCode,
  F614.InvNo,
  F614.ItemCode,
  F614.Quantity As QtyIn,
  0 As QtyOut,
  0 As QtyBns,
  (F614.Price - ((F614.DiscountAmount1/F614.Quantity) + (F614.DiscountAmount2/F614.Quantity) + (F614.DiscountAmount3/F614.Quantity))) As PriceAfterDiscount, 
  F613.DiscountPercent,
  F613.PPNPercent,
  F613.ExchangeRate,
  IF(F613.UpdatedBy = "", F613.CreatedBy, F613.UpdatedBy) AS OldUser
FROM F614
  INNER JOIN F613 ON F613.SRTNo = F614.SRTNo
WHERE 
  YEAR(F613.TransactionDate) = prmYearPeriod
/*----- DELIVERY ORDER (-) -----*/
UNION ALL
SELECT
  'DOD' As TransactionType,
  F605.DODNo As TransactionCode,
  CAST(F605.TransactionDate As DateTime) As TransactionDate,
  F606.BranchCode,
  F605.WarehouseCode,
  '' As WarehouseDestinationCode,
  '' As InvNo,
  F606.ItemCode,
  0 As QtyIn,
  F606.Quantity As QtyOut,
  0 As QtyBns,
  (F606.Price - ((F606.DiscountAmount1/F606.Quantity) + (F606.DiscountAmount2/F606.Quantity) + (F606.DiscountAmount3/F606.Quantity))) As PriceAfterDiscount, 
  F605.DiscountPercent,
  F605.PPNPercent,
  F605.ExchangeRate,
  IF(F605.UpdatedBy = "", F605.CreatedBy, F605.UpdatedBy) AS OldUser
FROM F606
  INNER JOIN F605 ON F605.DODNo = F606.DODNo
WHERE 
  YEAR(F605.TransactionDate) = prmYearPeriod
/*----- INVOICE NON DO (-) -----*/
UNION ALL
SELECT
  'INV' As TransactionType,
  F607.INVNo As TransactionCode,
  CAST(F607.TransactionDate As DateTime) As TransactionDate,
  F608.BranchCode,
  F607.WarehouseCode,
  '' As WarehouseDestinationCode,
  '' As InvNo,
  F608.ItemCode,
  0 As QtyIn,
  F608.Quantity As QtyOut,
  F608.BonusQuantity As QtyBns,
  (F608.Price - ((F608.DiscountAmount1/F608.Quantity) + (F608.DiscountAmount2/F608.Quantity) + (F608.DiscountAmount3/F608.Quantity) + F608.FinalDiscount1)) As PriceAfterDiscount, 
  F607.DiscountPercent,
  F607.PPNPercent,
  F607.ExchangeRate,
  IF(F607.UpdatedBy = "", F607.CreatedBy, F607.UpdatedBy) AS OldUser
FROM F608
  INNER JOIN F607 ON F607.INVNo = F608.INVNo
WHERE 
  LENGTH(F607.SODNo) = 0 AND
  YEAR(F607.TransactionDate) = prmYearPeriod
/*----- WAREHOUSE MUTATION DESTINATION (+) -----*/
UNION ALL
SELECT
  'WHM' As TransactionType,
  F309.WHMNo As TransactionCode,
  CAST(F309.TransactionDate As DateTime) As TransactionDate,
  F310.BranchCode,
  F309.WarehouseSourceCode As WarehouseCode,
  F309.WarehouseDestinationCode,
  '' As InvNo,
  F310.ItemCode,
  F310.Quantity As QtyIn,
  0 As QtyOut,
  0 As QtyBns,
  0 As PriceAfterDiscount, 
  0 As DiscountPercent,
  0 As PPNPercent,
  1 As ExchangeRate,
  IF(F309.UpdatedBy = "", F309.CreatedBy, F309.UpdatedBy) AS OldUser
FROM F310
  INNER JOIN F309 ON F309.WHMNo = F310.WHMNo
WHERE 
  YEAR(F309.TransactionDate) = prmYearPeriod
/*----- ITEM ASSEMBLY INCREASE (+) AS PACKAGE -----*/
UNION ALL
SELECT
  'ASM' As TransactionType,
  F307.ASMNo As TransactionCode,
  CAST(F307.TransactionDate As DateTime) As TransactionDate,
  F308.BranchCode,
  F307.WarehouseCode,
  '' As WarehouseDestinationCode,
  '' As InvNo,
  F308.ItemCode,
  F308.Quantity As QtyIn,
  0 As QtyOut,
  0 As QtyBns,
  F308.Price As PriceAfterDiscount, 
  0 As DiscountPercent,
  0 As PPNPercent,
  1 As ExchangeRate,
  IF(F307.UpdatedBy = "", F307.CreatedBy, F307.UpdatedBy) AS OldUser
FROM F308
  INNER JOIN F013 ON F013.Code  = F308.ItemCode
  INNER JOIN F307 ON F307.ASMNo = F308.ASMNo
WHERE 
  F308.ASMPosition = "I" AND
  YEAR(F307.TransactionDate) = prmYearPeriod
/*----- ITEM DISASSEMBLY DECREASE (+) AS PACKAGE -----*/
UNION ALL
SELECT
  'DSM' As TransactionType,
  F313.DSMNo As TransactionCode,
  CAST(F313.TransactionDate As DateTime) As TransactionDate,
  F314.BranchCode,
  F313.WarehouseCode,
  '' As WarehouseDestinationCode,
  '' As InvNo,
  F314.ItemCode,
  0 As QtyIn,
  F314.Quantity As QtyOut,
  0 As QtyBns,
  F314.Price As PriceAfterDiscount, 
  0 As DiscountPercent,
  0 As PPNPercent,
  1 As ExchangeRate,
  IF(F313.UpdatedBy = "", F313.CreatedBy, F313.UpdatedBy) AS OldUser
FROM F314
  INNER JOIN F013 ON F013.Code  = F314.ItemCode
  INNER JOIN F313 ON F313.DSMNo = F314.DSMNo
WHERE 
  F314.DSMPosition = "D" AND
  YEAR(F313.TransactionDate) = prmYearPeriod
/*----- STOCK OPNAME  -----*/
UNION ALL
SELECT
  'OPN' As TransactionType,
  F311.OPNNo As TransactionCode,
  CAST(F311.TransactionDate As DateTime) As TransactionDate,
  F312.BranchCode,
  F311.WarehouseCode,
  '' As WarehouseDestinationCode,
  '' As InvNo,
  F312.ItemCode,
  F312.ActualStock As QtyIn,
  0 As QtyOut,
  0 As QtyBns,
  0 As PriceAfterDiscount, 
  0 As DiscountPercent,
  0 As PPNPercent,
  1 As ExchangeRate,
  IF(F311.UpdatedBy = "", F311.CreatedBy, F311.UpdatedBy) AS OldUser
FROM F312
  INNER JOIN F013 ON F013.Code  = F312.ItemCode
  INNER JOIN F311 ON F311.OPNNo = F312.OPNNo
WHERE 
  YEAR(F311.TransactionDate) = prmYearPeriod
ORDER BY TransactionDate ASC, QtyIn DESC, TransactionCode ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `zzusp_SC_GetClosingItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `zzusp_SC_GetClosingItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zzusp_SC_GetClosingItem`(IN prmYearPeriod Integer)
BEGIN
      SELECT Qry.BranchCode, Qry.WarehouseCode, Qry.ItemCode, Qry.ItemDate, Qry.COGSIDR, SUM(Quantity) As ActualStock  FROM
	(-- SELECT
	  -- F400.BranchCode,
	  -- F400.WarehouseCode,
	  -- F400.ItemCode,
	  -- F400.ActualStock As Quantity,
	  -- F400.COGSIDR,
          -- F400.ItemDate
	-- FROM F400
	-- WHERE F400.PeriodYear = prmYearPeriod
	-- UNION
	SELECT 
	  F398.BranchCode,
	  F398.WarehouseCode,
	  F398.ItemCode,
	  (0 - MinusQuantity) As Quantity,
	  0 As COGSIDR,
          CAST(CONCAT(prmYearPeriod+1,'-01-01 00:00:00') As DateTime) As ItemDate
	FROM F398
	WHERE F398.MinusQuantity > 0
	UNION
	SELECT 
	  F399.BranchCode,
	  F399.WarehouseCode,
	  F399.ItemCode,
	  (F399.ActualStock - F399.UsedStock) As Quantity,
	  F399.COGSIDR,
          F399.ItemDate
	FROM F399
	WHERE F399.ActualStock - F399.UsedStock >= 0) AS QRY
      GROUP By QRY.BranchCode, QRY.WarehouseCode, QRY.ItemCode, QRY.COGSIDR;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `zzusp_SC_GetFirstStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `zzusp_SC_GetFirstStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zzusp_SC_GetFirstStock`(IN prmYearPeriod Integer)
BEGIN
      SELECT 
  F400.ItemCode,
  F400.ItemDate,
  F400.BranchCode,
  F400.WarehouseCode,
  F400.ActualStock,
  F400.COGSIDR,
  F400.CreatedBy
FROM F400
  WHERE F400.PeriodYear = prmYearPeriod;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `zzusp_SC_GetMaxYear` */

/*!50003 DROP PROCEDURE IF EXISTS  `zzusp_SC_GetMaxYear` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `zzusp_SC_GetMaxYear`()
BEGIN
	SELECT 
  MAX(Year(TransactionDate)) As MaxYear FROM
  (SELECT 
    F301.TransactionDate FROM F301
  UNION SELECT
    F303.TransactionDate FROM F303
  UNION SELECT
    F203.TransactionDate FROM F203
  UNION SELECT
    F305.TransactionDate FROM F305
  UNION SELECT
    F613.TransactionDate FROM F613
  UNION SELECT
    F605.TransactionDate FROM F605
  UNION SELECT
    F607.TransactionDate FROM F607
  UNION SELECT
    F309.TransactionDate FROM F309
  UNION SELECT
    F307.TransactionDate FROM F307
  UNION SELECT
    F313.TransactionDate FROM F313
  UNION SELECT
    F311.TransactionDate FROM F311
  ) As QryDate;
    END */$$
DELIMITER ;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
